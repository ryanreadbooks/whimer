// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.34.2
// 	protoc        (unknown)
// source: v1/reply.proto

package v1

import (
	_ "buf.build/gen/go/bufbuild/protovalidate/protocolbuffers/go/buf/validate"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type ReplyAction int32

const (
	ReplyAction_REPLY_ACTION_UNDO ReplyAction = 0
	ReplyAction_REPLY_ACTION_DO   ReplyAction = 1
)

// Enum value maps for ReplyAction.
var (
	ReplyAction_name = map[int32]string{
		0: "REPLY_ACTION_UNDO",
		1: "REPLY_ACTION_DO",
	}
	ReplyAction_value = map[string]int32{
		"REPLY_ACTION_UNDO": 0,
		"REPLY_ACTION_DO":   1,
	}
)

func (x ReplyAction) Enum() *ReplyAction {
	p := new(ReplyAction)
	*p = x
	return p
}

func (x ReplyAction) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ReplyAction) Descriptor() protoreflect.EnumDescriptor {
	return file_v1_reply_proto_enumTypes[0].Descriptor()
}

func (ReplyAction) Type() protoreflect.EnumType {
	return &file_v1_reply_proto_enumTypes[0]
}

func (x ReplyAction) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use ReplyAction.Descriptor instead.
func (ReplyAction) EnumDescriptor() ([]byte, []int) {
	return file_v1_reply_proto_rawDescGZIP(), []int{0}
}

type SortType int32

const (
	SortType_ByTime  SortType = 0 // 按照发布时间排序
	SortType_ByTrend SortType = 1 // 按照热度排序
)

// Enum value maps for SortType.
var (
	SortType_name = map[int32]string{
		0: "ByTime",
		1: "ByTrend",
	}
	SortType_value = map[string]int32{
		"ByTime":  0,
		"ByTrend": 1,
	}
)

func (x SortType) Enum() *SortType {
	p := new(SortType)
	*p = x
	return p
}

func (x SortType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (SortType) Descriptor() protoreflect.EnumDescriptor {
	return file_v1_reply_proto_enumTypes[1].Descriptor()
}

func (SortType) Type() protoreflect.EnumType {
	return &file_v1_reply_proto_enumTypes[1]
}

func (x SortType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use SortType.Descriptor instead.
func (SortType) EnumDescriptor() ([]byte, []int) {
	return file_v1_reply_proto_rawDescGZIP(), []int{1}
}

// 发布评论
type AddReplyReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ReplyType uint32 `protobuf:"varint,1,opt,name=reply_type,json=replyType,proto3" json:"reply_type,omitempty"` // 评论类型
	Oid       uint64 `protobuf:"varint,2,opt,name=oid,proto3" json:"oid,omitempty"`                              // 被评论对象id
	Content   string `protobuf:"bytes,3,opt,name=content,proto3" json:"content,omitempty"`                       // 评论内容
	RootId    uint64 `protobuf:"varint,4,opt,name=root_id,json=rootId,proto3" json:"root_id,omitempty"`          // 根评论id
	ParentId  uint64 `protobuf:"varint,5,opt,name=parent_id,json=parentId,proto3" json:"parent_id,omitempty"`    // 被回复的评论id
	ReplyUid  uint64 `protobuf:"varint,6,opt,name=reply_uid,json=replyUid,proto3" json:"reply_uid,omitempty"`    // 被回复的用户id
}

func (x *AddReplyReq) Reset() {
	*x = AddReplyReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_v1_reply_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AddReplyReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddReplyReq) ProtoMessage() {}

func (x *AddReplyReq) ProtoReflect() protoreflect.Message {
	mi := &file_v1_reply_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddReplyReq.ProtoReflect.Descriptor instead.
func (*AddReplyReq) Descriptor() ([]byte, []int) {
	return file_v1_reply_proto_rawDescGZIP(), []int{0}
}

func (x *AddReplyReq) GetReplyType() uint32 {
	if x != nil {
		return x.ReplyType
	}
	return 0
}

func (x *AddReplyReq) GetOid() uint64 {
	if x != nil {
		return x.Oid
	}
	return 0
}

func (x *AddReplyReq) GetContent() string {
	if x != nil {
		return x.Content
	}
	return ""
}

func (x *AddReplyReq) GetRootId() uint64 {
	if x != nil {
		return x.RootId
	}
	return 0
}

func (x *AddReplyReq) GetParentId() uint64 {
	if x != nil {
		return x.ParentId
	}
	return 0
}

func (x *AddReplyReq) GetReplyUid() uint64 {
	if x != nil {
		return x.ReplyUid
	}
	return 0
}

type AddReplyRes struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ReplyId uint64 `protobuf:"varint,1,opt,name=reply_id,json=replyId,proto3" json:"reply_id,omitempty"` // 评论id
}

func (x *AddReplyRes) Reset() {
	*x = AddReplyRes{}
	if protoimpl.UnsafeEnabled {
		mi := &file_v1_reply_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AddReplyRes) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddReplyRes) ProtoMessage() {}

func (x *AddReplyRes) ProtoReflect() protoreflect.Message {
	mi := &file_v1_reply_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddReplyRes.ProtoReflect.Descriptor instead.
func (*AddReplyRes) Descriptor() ([]byte, []int) {
	return file_v1_reply_proto_rawDescGZIP(), []int{1}
}

func (x *AddReplyRes) GetReplyId() uint64 {
	if x != nil {
		return x.ReplyId
	}
	return 0
}

// 删除评论
type DelReplyReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ReplyId uint64 `protobuf:"varint,1,opt,name=reply_id,json=replyId,proto3" json:"reply_id,omitempty"` // 评论id
}

func (x *DelReplyReq) Reset() {
	*x = DelReplyReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_v1_reply_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DelReplyReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DelReplyReq) ProtoMessage() {}

func (x *DelReplyReq) ProtoReflect() protoreflect.Message {
	mi := &file_v1_reply_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DelReplyReq.ProtoReflect.Descriptor instead.
func (*DelReplyReq) Descriptor() ([]byte, []int) {
	return file_v1_reply_proto_rawDescGZIP(), []int{2}
}

func (x *DelReplyReq) GetReplyId() uint64 {
	if x != nil {
		return x.ReplyId
	}
	return 0
}

type DelReplyRes struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *DelReplyRes) Reset() {
	*x = DelReplyRes{}
	if protoimpl.UnsafeEnabled {
		mi := &file_v1_reply_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DelReplyRes) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DelReplyRes) ProtoMessage() {}

func (x *DelReplyRes) ProtoReflect() protoreflect.Message {
	mi := &file_v1_reply_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DelReplyRes.ProtoReflect.Descriptor instead.
func (*DelReplyRes) Descriptor() ([]byte, []int) {
	return file_v1_reply_proto_rawDescGZIP(), []int{3}
}

// 点赞/取消点赞
type LikeActionReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ReplyId uint64      `protobuf:"varint,1,opt,name=reply_id,json=replyId,proto3" json:"reply_id,omitempty"`                // 评论id
	Action  ReplyAction `protobuf:"varint,2,opt,name=action,proto3,enum=comment.sdk.v1.ReplyAction" json:"action,omitempty"` // 取消点赞还是点赞
}

func (x *LikeActionReq) Reset() {
	*x = LikeActionReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_v1_reply_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LikeActionReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LikeActionReq) ProtoMessage() {}

func (x *LikeActionReq) ProtoReflect() protoreflect.Message {
	mi := &file_v1_reply_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LikeActionReq.ProtoReflect.Descriptor instead.
func (*LikeActionReq) Descriptor() ([]byte, []int) {
	return file_v1_reply_proto_rawDescGZIP(), []int{4}
}

func (x *LikeActionReq) GetReplyId() uint64 {
	if x != nil {
		return x.ReplyId
	}
	return 0
}

func (x *LikeActionReq) GetAction() ReplyAction {
	if x != nil {
		return x.Action
	}
	return ReplyAction_REPLY_ACTION_UNDO
}

type LikeActionRes struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *LikeActionRes) Reset() {
	*x = LikeActionRes{}
	if protoimpl.UnsafeEnabled {
		mi := &file_v1_reply_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LikeActionRes) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LikeActionRes) ProtoMessage() {}

func (x *LikeActionRes) ProtoReflect() protoreflect.Message {
	mi := &file_v1_reply_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LikeActionRes.ProtoReflect.Descriptor instead.
func (*LikeActionRes) Descriptor() ([]byte, []int) {
	return file_v1_reply_proto_rawDescGZIP(), []int{5}
}

// 点踩/取消点踩
type DislikeActionReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ReplyId uint64      `protobuf:"varint,1,opt,name=reply_id,json=replyId,proto3" json:"reply_id,omitempty"`                // 评论id
	Action  ReplyAction `protobuf:"varint,2,opt,name=action,proto3,enum=comment.sdk.v1.ReplyAction" json:"action,omitempty"` // 取消点踩还是点踩
}

func (x *DislikeActionReq) Reset() {
	*x = DislikeActionReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_v1_reply_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DislikeActionReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DislikeActionReq) ProtoMessage() {}

func (x *DislikeActionReq) ProtoReflect() protoreflect.Message {
	mi := &file_v1_reply_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DislikeActionReq.ProtoReflect.Descriptor instead.
func (*DislikeActionReq) Descriptor() ([]byte, []int) {
	return file_v1_reply_proto_rawDescGZIP(), []int{6}
}

func (x *DislikeActionReq) GetReplyId() uint64 {
	if x != nil {
		return x.ReplyId
	}
	return 0
}

func (x *DislikeActionReq) GetAction() ReplyAction {
	if x != nil {
		return x.Action
	}
	return ReplyAction_REPLY_ACTION_UNDO
}

type DislikeActionRes struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *DislikeActionRes) Reset() {
	*x = DislikeActionRes{}
	if protoimpl.UnsafeEnabled {
		mi := &file_v1_reply_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DislikeActionRes) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DislikeActionRes) ProtoMessage() {}

func (x *DislikeActionRes) ProtoReflect() protoreflect.Message {
	mi := &file_v1_reply_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DislikeActionRes.ProtoReflect.Descriptor instead.
func (*DislikeActionRes) Descriptor() ([]byte, []int) {
	return file_v1_reply_proto_rawDescGZIP(), []int{7}
}

// 举报
type ReportReplyReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *ReportReplyReq) Reset() {
	*x = ReportReplyReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_v1_reply_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ReportReplyReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReportReplyReq) ProtoMessage() {}

func (x *ReportReplyReq) ProtoReflect() protoreflect.Message {
	mi := &file_v1_reply_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReportReplyReq.ProtoReflect.Descriptor instead.
func (*ReportReplyReq) Descriptor() ([]byte, []int) {
	return file_v1_reply_proto_rawDescGZIP(), []int{8}
}

type ReportReplyRes struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *ReportReplyRes) Reset() {
	*x = ReportReplyRes{}
	if protoimpl.UnsafeEnabled {
		mi := &file_v1_reply_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ReportReplyRes) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReportReplyRes) ProtoMessage() {}

func (x *ReportReplyRes) ProtoReflect() protoreflect.Message {
	mi := &file_v1_reply_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReportReplyRes.ProtoReflect.Descriptor instead.
func (*ReportReplyRes) Descriptor() ([]byte, []int) {
	return file_v1_reply_proto_rawDescGZIP(), []int{9}
}

// 置顶
type PinReplyReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Oid    uint64      `protobuf:"varint,1,opt,name=oid,proto3" json:"oid,omitempty"` // 被评论对象id
	Rid    uint64      `protobuf:"varint,2,opt,name=rid,proto3" json:"rid,omitempty"` // 评论id
	Action ReplyAction `protobuf:"varint,3,opt,name=action,proto3,enum=comment.sdk.v1.ReplyAction" json:"action,omitempty"`
}

func (x *PinReplyReq) Reset() {
	*x = PinReplyReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_v1_reply_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PinReplyReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PinReplyReq) ProtoMessage() {}

func (x *PinReplyReq) ProtoReflect() protoreflect.Message {
	mi := &file_v1_reply_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PinReplyReq.ProtoReflect.Descriptor instead.
func (*PinReplyReq) Descriptor() ([]byte, []int) {
	return file_v1_reply_proto_rawDescGZIP(), []int{10}
}

func (x *PinReplyReq) GetOid() uint64 {
	if x != nil {
		return x.Oid
	}
	return 0
}

func (x *PinReplyReq) GetRid() uint64 {
	if x != nil {
		return x.Rid
	}
	return 0
}

func (x *PinReplyReq) GetAction() ReplyAction {
	if x != nil {
		return x.Action
	}
	return ReplyAction_REPLY_ACTION_UNDO
}

type PinReplyRes struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *PinReplyRes) Reset() {
	*x = PinReplyRes{}
	if protoimpl.UnsafeEnabled {
		mi := &file_v1_reply_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PinReplyRes) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PinReplyRes) ProtoMessage() {}

func (x *PinReplyRes) ProtoReflect() protoreflect.Message {
	mi := &file_v1_reply_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PinReplyRes.ProtoReflect.Descriptor instead.
func (*PinReplyRes) Descriptor() ([]byte, []int) {
	return file_v1_reply_proto_rawDescGZIP(), []int{11}
}

// 获取评论
type PageGetReplyReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Oid    uint64   `protobuf:"varint,1,opt,name=oid,proto3" json:"oid,omitempty"`
	Cursor uint64   `protobuf:"varint,2,opt,name=cursor,proto3" json:"cursor,omitempty"`                                            // 起始游标
	SortBy SortType `protobuf:"varint,3,opt,name=sort_by,json=sortBy,proto3,enum=comment.sdk.v1.SortType" json:"sort_by,omitempty"` // 排序方式
}

func (x *PageGetReplyReq) Reset() {
	*x = PageGetReplyReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_v1_reply_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PageGetReplyReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PageGetReplyReq) ProtoMessage() {}

func (x *PageGetReplyReq) ProtoReflect() protoreflect.Message {
	mi := &file_v1_reply_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PageGetReplyReq.ProtoReflect.Descriptor instead.
func (*PageGetReplyReq) Descriptor() ([]byte, []int) {
	return file_v1_reply_proto_rawDescGZIP(), []int{12}
}

func (x *PageGetReplyReq) GetOid() uint64 {
	if x != nil {
		return x.Oid
	}
	return 0
}

func (x *PageGetReplyReq) GetCursor() uint64 {
	if x != nil {
		return x.Cursor
	}
	return 0
}

func (x *PageGetReplyReq) GetSortBy() SortType {
	if x != nil {
		return x.SortBy
	}
	return SortType_ByTime
}

// 评论实体
type ReplyItem struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id        uint64 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`                                 // 评论id
	Oid       uint64 `protobuf:"varint,2,opt,name=oid,proto3" json:"oid,omitempty"`                               // 被评论对象id
	ReplyType uint32 `protobuf:"varint,3,opt,name=reply_type,json=replyType,proto3" json:"reply_type,omitempty"`  // 评论类型
	Content   string `protobuf:"bytes,4,opt,name=content,proto3" json:"content,omitempty"`                        // 评论内容
	Uid       uint64 `protobuf:"varint,5,opt,name=uid,proto3" json:"uid,omitempty"`                               // 评论发表用户uid
	RootId    uint64 `protobuf:"varint,6,opt,name=root_id,json=rootId,proto3" json:"root_id,omitempty"`           // 根评论id
	ParentId  uint64 `protobuf:"varint,7,opt,name=parent_id,json=parentId,proto3" json:"parent_id,omitempty"`     // 父评论id
	Ruid      uint64 `protobuf:"varint,8,opt,name=ruid,proto3" json:"ruid,omitempty"`                             // 被回复的用户id
	LikeCount uint64 `protobuf:"varint,9,opt,name=like_count,json=likeCount,proto3" json:"like_count,omitempty"`  // 点赞数
	HateCount uint64 `protobuf:"varint,10,opt,name=hate_count,json=hateCount,proto3" json:"hate_count,omitempty"` // 点踩数
	Ctime     int64  `protobuf:"varint,11,opt,name=ctime,proto3" json:"ctime,omitempty"`                          // 发布时间
	Mtime     int64  `protobuf:"varint,12,opt,name=mtime,proto3" json:"mtime,omitempty"`                          // 修改时间
	Ip        string `protobuf:"bytes,13,opt,name=ip,proto3" json:"ip,omitempty"`                                 // 发布时ip地址
	IsPin     bool   `protobuf:"varint,14,opt,name=is_pin,json=isPin,proto3" json:"is_pin,omitempty"`             // 是否为置顶评论
}

func (x *ReplyItem) Reset() {
	*x = ReplyItem{}
	if protoimpl.UnsafeEnabled {
		mi := &file_v1_reply_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ReplyItem) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReplyItem) ProtoMessage() {}

func (x *ReplyItem) ProtoReflect() protoreflect.Message {
	mi := &file_v1_reply_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReplyItem.ProtoReflect.Descriptor instead.
func (*ReplyItem) Descriptor() ([]byte, []int) {
	return file_v1_reply_proto_rawDescGZIP(), []int{13}
}

func (x *ReplyItem) GetId() uint64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *ReplyItem) GetOid() uint64 {
	if x != nil {
		return x.Oid
	}
	return 0
}

func (x *ReplyItem) GetReplyType() uint32 {
	if x != nil {
		return x.ReplyType
	}
	return 0
}

func (x *ReplyItem) GetContent() string {
	if x != nil {
		return x.Content
	}
	return ""
}

func (x *ReplyItem) GetUid() uint64 {
	if x != nil {
		return x.Uid
	}
	return 0
}

func (x *ReplyItem) GetRootId() uint64 {
	if x != nil {
		return x.RootId
	}
	return 0
}

func (x *ReplyItem) GetParentId() uint64 {
	if x != nil {
		return x.ParentId
	}
	return 0
}

func (x *ReplyItem) GetRuid() uint64 {
	if x != nil {
		return x.Ruid
	}
	return 0
}

func (x *ReplyItem) GetLikeCount() uint64 {
	if x != nil {
		return x.LikeCount
	}
	return 0
}

func (x *ReplyItem) GetHateCount() uint64 {
	if x != nil {
		return x.HateCount
	}
	return 0
}

func (x *ReplyItem) GetCtime() int64 {
	if x != nil {
		return x.Ctime
	}
	return 0
}

func (x *ReplyItem) GetMtime() int64 {
	if x != nil {
		return x.Mtime
	}
	return 0
}

func (x *ReplyItem) GetIp() string {
	if x != nil {
		return x.Ip
	}
	return ""
}

func (x *ReplyItem) GetIsPin() bool {
	if x != nil {
		return x.IsPin
	}
	return false
}

type PageGetReplyRes struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Replies    []*ReplyItem `protobuf:"bytes,1,rep,name=replies,proto3" json:"replies,omitempty"`                          // 评论数据
	NextCursor uint64       `protobuf:"varint,2,opt,name=next_cursor,json=nextCursor,proto3" json:"next_cursor,omitempty"` // 分页获取下一次请求的游标
	HasNext    bool         `protobuf:"varint,3,opt,name=has_next,json=hasNext,proto3" json:"has_next,omitempty"`          // 是否还有数据
}

func (x *PageGetReplyRes) Reset() {
	*x = PageGetReplyRes{}
	if protoimpl.UnsafeEnabled {
		mi := &file_v1_reply_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PageGetReplyRes) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PageGetReplyRes) ProtoMessage() {}

func (x *PageGetReplyRes) ProtoReflect() protoreflect.Message {
	mi := &file_v1_reply_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PageGetReplyRes.ProtoReflect.Descriptor instead.
func (*PageGetReplyRes) Descriptor() ([]byte, []int) {
	return file_v1_reply_proto_rawDescGZIP(), []int{14}
}

func (x *PageGetReplyRes) GetReplies() []*ReplyItem {
	if x != nil {
		return x.Replies
	}
	return nil
}

func (x *PageGetReplyRes) GetNextCursor() uint64 {
	if x != nil {
		return x.NextCursor
	}
	return 0
}

func (x *PageGetReplyRes) GetHasNext() bool {
	if x != nil {
		return x.HasNext
	}
	return false
}

// 获取子评论
type PageGetSubReplyReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Oid    uint64 `protobuf:"varint,1,opt,name=oid,proto3" json:"oid,omitempty"`                     // 被评论对象id
	RootId uint64 `protobuf:"varint,2,opt,name=root_id,json=rootId,proto3" json:"root_id,omitempty"` // 主评论id
	Cursor uint64 `protobuf:"varint,3,opt,name=cursor,proto3" json:"cursor,omitempty"`               // 起始游标
}

func (x *PageGetSubReplyReq) Reset() {
	*x = PageGetSubReplyReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_v1_reply_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PageGetSubReplyReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PageGetSubReplyReq) ProtoMessage() {}

func (x *PageGetSubReplyReq) ProtoReflect() protoreflect.Message {
	mi := &file_v1_reply_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PageGetSubReplyReq.ProtoReflect.Descriptor instead.
func (*PageGetSubReplyReq) Descriptor() ([]byte, []int) {
	return file_v1_reply_proto_rawDescGZIP(), []int{15}
}

func (x *PageGetSubReplyReq) GetOid() uint64 {
	if x != nil {
		return x.Oid
	}
	return 0
}

func (x *PageGetSubReplyReq) GetRootId() uint64 {
	if x != nil {
		return x.RootId
	}
	return 0
}

func (x *PageGetSubReplyReq) GetCursor() uint64 {
	if x != nil {
		return x.Cursor
	}
	return 0
}

type PageGetSubReplyRes struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Replies    []*ReplyItem `protobuf:"bytes,1,rep,name=replies,proto3" json:"replies,omitempty"`
	NextCursor uint64       `protobuf:"varint,2,opt,name=next_cursor,json=nextCursor,proto3" json:"next_cursor,omitempty"`
	HasNext    bool         `protobuf:"varint,3,opt,name=has_next,json=hasNext,proto3" json:"has_next,omitempty"`
}

func (x *PageGetSubReplyRes) Reset() {
	*x = PageGetSubReplyRes{}
	if protoimpl.UnsafeEnabled {
		mi := &file_v1_reply_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PageGetSubReplyRes) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PageGetSubReplyRes) ProtoMessage() {}

func (x *PageGetSubReplyRes) ProtoReflect() protoreflect.Message {
	mi := &file_v1_reply_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PageGetSubReplyRes.ProtoReflect.Descriptor instead.
func (*PageGetSubReplyRes) Descriptor() ([]byte, []int) {
	return file_v1_reply_proto_rawDescGZIP(), []int{16}
}

func (x *PageGetSubReplyRes) GetReplies() []*ReplyItem {
	if x != nil {
		return x.Replies
	}
	return nil
}

func (x *PageGetSubReplyRes) GetNextCursor() uint64 {
	if x != nil {
		return x.NextCursor
	}
	return 0
}

func (x *PageGetSubReplyRes) GetHasNext() bool {
	if x != nil {
		return x.HasNext
	}
	return false
}

// 代表主评论的子评论信息
type DetailedSubReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Items      []*ReplyItem `protobuf:"bytes,1,rep,name=items,proto3" json:"items,omitempty"` // 子评论的信息
	NextCursor uint64       `protobuf:"varint,2,opt,name=next_cursor,json=nextCursor,proto3" json:"next_cursor,omitempty"`
	HasNext    bool         `protobuf:"varint,3,opt,name=has_next,json=hasNext,proto3" json:"has_next,omitempty"`
}

func (x *DetailedSubReply) Reset() {
	*x = DetailedSubReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_v1_reply_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DetailedSubReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DetailedSubReply) ProtoMessage() {}

func (x *DetailedSubReply) ProtoReflect() protoreflect.Message {
	mi := &file_v1_reply_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DetailedSubReply.ProtoReflect.Descriptor instead.
func (*DetailedSubReply) Descriptor() ([]byte, []int) {
	return file_v1_reply_proto_rawDescGZIP(), []int{17}
}

func (x *DetailedSubReply) GetItems() []*ReplyItem {
	if x != nil {
		return x.Items
	}
	return nil
}

func (x *DetailedSubReply) GetNextCursor() uint64 {
	if x != nil {
		return x.NextCursor
	}
	return 0
}

func (x *DetailedSubReply) GetHasNext() bool {
	if x != nil {
		return x.HasNext
	}
	return false
}

// 详细的主评论的详细信息，会包含子评论
type DetailedReplyItem struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Root       *ReplyItem        `protobuf:"bytes,1,opt,name=root,proto3" json:"root,omitempty"`             // 主评论本身的信息
	Subreplies *DetailedSubReply `protobuf:"bytes,2,opt,name=subreplies,proto3" json:"subreplies,omitempty"` // 子评论的信息
}

func (x *DetailedReplyItem) Reset() {
	*x = DetailedReplyItem{}
	if protoimpl.UnsafeEnabled {
		mi := &file_v1_reply_proto_msgTypes[18]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DetailedReplyItem) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DetailedReplyItem) ProtoMessage() {}

func (x *DetailedReplyItem) ProtoReflect() protoreflect.Message {
	mi := &file_v1_reply_proto_msgTypes[18]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DetailedReplyItem.ProtoReflect.Descriptor instead.
func (*DetailedReplyItem) Descriptor() ([]byte, []int) {
	return file_v1_reply_proto_rawDescGZIP(), []int{18}
}

func (x *DetailedReplyItem) GetRoot() *ReplyItem {
	if x != nil {
		return x.Root
	}
	return nil
}

func (x *DetailedReplyItem) GetSubreplies() *DetailedSubReply {
	if x != nil {
		return x.Subreplies
	}
	return nil
}

type PageGetDetailedReplyRes struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Replies    []*DetailedReplyItem `protobuf:"bytes,1,rep,name=replies,proto3" json:"replies,omitempty"` // 主评论
	NextCursor uint64               `protobuf:"varint,2,opt,name=next_cursor,json=nextCursor,proto3" json:"next_cursor,omitempty"`
	HasNext    bool                 `protobuf:"varint,3,opt,name=has_next,json=hasNext,proto3" json:"has_next,omitempty"`
}

func (x *PageGetDetailedReplyRes) Reset() {
	*x = PageGetDetailedReplyRes{}
	if protoimpl.UnsafeEnabled {
		mi := &file_v1_reply_proto_msgTypes[19]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PageGetDetailedReplyRes) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PageGetDetailedReplyRes) ProtoMessage() {}

func (x *PageGetDetailedReplyRes) ProtoReflect() protoreflect.Message {
	mi := &file_v1_reply_proto_msgTypes[19]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PageGetDetailedReplyRes.ProtoReflect.Descriptor instead.
func (*PageGetDetailedReplyRes) Descriptor() ([]byte, []int) {
	return file_v1_reply_proto_rawDescGZIP(), []int{19}
}

func (x *PageGetDetailedReplyRes) GetReplies() []*DetailedReplyItem {
	if x != nil {
		return x.Replies
	}
	return nil
}

func (x *PageGetDetailedReplyRes) GetNextCursor() uint64 {
	if x != nil {
		return x.NextCursor
	}
	return 0
}

func (x *PageGetDetailedReplyRes) GetHasNext() bool {
	if x != nil {
		return x.HasNext
	}
	return false
}

// 获取置顶评论
type GetPinnedReplyReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Oid uint64 `protobuf:"varint,1,opt,name=oid,proto3" json:"oid,omitempty"` // 被评论对象id
}

func (x *GetPinnedReplyReq) Reset() {
	*x = GetPinnedReplyReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_v1_reply_proto_msgTypes[20]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetPinnedReplyReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetPinnedReplyReq) ProtoMessage() {}

func (x *GetPinnedReplyReq) ProtoReflect() protoreflect.Message {
	mi := &file_v1_reply_proto_msgTypes[20]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetPinnedReplyReq.ProtoReflect.Descriptor instead.
func (*GetPinnedReplyReq) Descriptor() ([]byte, []int) {
	return file_v1_reply_proto_rawDescGZIP(), []int{20}
}

func (x *GetPinnedReplyReq) GetOid() uint64 {
	if x != nil {
		return x.Oid
	}
	return 0
}

type GetPinnedReplyRes struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Reply *DetailedReplyItem `protobuf:"bytes,1,opt,name=reply,proto3" json:"reply,omitempty"` // 置顶评论信息
}

func (x *GetPinnedReplyRes) Reset() {
	*x = GetPinnedReplyRes{}
	if protoimpl.UnsafeEnabled {
		mi := &file_v1_reply_proto_msgTypes[21]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetPinnedReplyRes) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetPinnedReplyRes) ProtoMessage() {}

func (x *GetPinnedReplyRes) ProtoReflect() protoreflect.Message {
	mi := &file_v1_reply_proto_msgTypes[21]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetPinnedReplyRes.ProtoReflect.Descriptor instead.
func (*GetPinnedReplyRes) Descriptor() ([]byte, []int) {
	return file_v1_reply_proto_rawDescGZIP(), []int{21}
}

func (x *GetPinnedReplyRes) GetReply() *DetailedReplyItem {
	if x != nil {
		return x.Reply
	}
	return nil
}

// 获取被评论对象的评论数量
type CountReplyReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Oid uint64 `protobuf:"varint,1,opt,name=oid,proto3" json:"oid,omitempty"` // 被评论对象id
}

func (x *CountReplyReq) Reset() {
	*x = CountReplyReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_v1_reply_proto_msgTypes[22]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CountReplyReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CountReplyReq) ProtoMessage() {}

func (x *CountReplyReq) ProtoReflect() protoreflect.Message {
	mi := &file_v1_reply_proto_msgTypes[22]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CountReplyReq.ProtoReflect.Descriptor instead.
func (*CountReplyReq) Descriptor() ([]byte, []int) {
	return file_v1_reply_proto_rawDescGZIP(), []int{22}
}

func (x *CountReplyReq) GetOid() uint64 {
	if x != nil {
		return x.Oid
	}
	return 0
}

type CountReplyRes struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	NumReply uint64 `protobuf:"varint,1,opt,name=num_reply,json=numReply,proto3" json:"num_reply,omitempty"` // 评论数量
}

func (x *CountReplyRes) Reset() {
	*x = CountReplyRes{}
	if protoimpl.UnsafeEnabled {
		mi := &file_v1_reply_proto_msgTypes[23]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CountReplyRes) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CountReplyRes) ProtoMessage() {}

func (x *CountReplyRes) ProtoReflect() protoreflect.Message {
	mi := &file_v1_reply_proto_msgTypes[23]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CountReplyRes.ProtoReflect.Descriptor instead.
func (*CountReplyRes) Descriptor() ([]byte, []int) {
	return file_v1_reply_proto_rawDescGZIP(), []int{23}
}

func (x *CountReplyRes) GetNumReply() uint64 {
	if x != nil {
		return x.NumReply
	}
	return 0
}

var File_v1_reply_proto protoreflect.FileDescriptor

var file_v1_reply_proto_rawDesc = []byte{
	0x0a, 0x0e, 0x76, 0x31, 0x2f, 0x72, 0x65, 0x70, 0x6c, 0x79, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x12, 0x0e, 0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x2e, 0x73, 0x64, 0x6b, 0x2e, 0x76, 0x31,
	0x1a, 0x1b, 0x62, 0x75, 0x66, 0x2f, 0x76, 0x61, 0x6c, 0x69, 0x64, 0x61, 0x74, 0x65, 0x2f, 0x76,
	0x61, 0x6c, 0x69, 0x64, 0x61, 0x74, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0xab, 0x01,
	0x0a, 0x0b, 0x41, 0x64, 0x64, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x52, 0x65, 0x71, 0x12, 0x1d, 0x0a,
	0x0a, 0x72, 0x65, 0x70, 0x6c, 0x79, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0d, 0x52, 0x09, 0x72, 0x65, 0x70, 0x6c, 0x79, 0x54, 0x79, 0x70, 0x65, 0x12, 0x10, 0x0a, 0x03,
	0x6f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x04, 0x52, 0x03, 0x6f, 0x69, 0x64, 0x12, 0x18,
	0x0a, 0x07, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x07, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x12, 0x17, 0x0a, 0x07, 0x72, 0x6f, 0x6f, 0x74,
	0x5f, 0x69, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x04, 0x52, 0x06, 0x72, 0x6f, 0x6f, 0x74, 0x49,
	0x64, 0x12, 0x1b, 0x0a, 0x09, 0x70, 0x61, 0x72, 0x65, 0x6e, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x05,
	0x20, 0x01, 0x28, 0x04, 0x52, 0x08, 0x70, 0x61, 0x72, 0x65, 0x6e, 0x74, 0x49, 0x64, 0x12, 0x1b,
	0x0a, 0x09, 0x72, 0x65, 0x70, 0x6c, 0x79, 0x5f, 0x75, 0x69, 0x64, 0x18, 0x06, 0x20, 0x01, 0x28,
	0x04, 0x52, 0x08, 0x72, 0x65, 0x70, 0x6c, 0x79, 0x55, 0x69, 0x64, 0x22, 0x28, 0x0a, 0x0b, 0x41,
	0x64, 0x64, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x52, 0x65, 0x73, 0x12, 0x19, 0x0a, 0x08, 0x72, 0x65,
	0x70, 0x6c, 0x79, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x07, 0x72, 0x65,
	0x70, 0x6c, 0x79, 0x49, 0x64, 0x22, 0x31, 0x0a, 0x0b, 0x44, 0x65, 0x6c, 0x52, 0x65, 0x70, 0x6c,
	0x79, 0x52, 0x65, 0x71, 0x12, 0x22, 0x0a, 0x08, 0x72, 0x65, 0x70, 0x6c, 0x79, 0x5f, 0x69, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x42, 0x07, 0xba, 0x48, 0x04, 0x32, 0x02, 0x20, 0x00, 0x52,
	0x07, 0x72, 0x65, 0x70, 0x6c, 0x79, 0x49, 0x64, 0x22, 0x0d, 0x0a, 0x0b, 0x44, 0x65, 0x6c, 0x52,
	0x65, 0x70, 0x6c, 0x79, 0x52, 0x65, 0x73, 0x22, 0x68, 0x0a, 0x0d, 0x4c, 0x69, 0x6b, 0x65, 0x41,
	0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x12, 0x22, 0x0a, 0x08, 0x72, 0x65, 0x70, 0x6c,
	0x79, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x42, 0x07, 0xba, 0x48, 0x04, 0x32,
	0x02, 0x20, 0x00, 0x52, 0x07, 0x72, 0x65, 0x70, 0x6c, 0x79, 0x49, 0x64, 0x12, 0x33, 0x0a, 0x06,
	0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x1b, 0x2e, 0x63,
	0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x2e, 0x73, 0x64, 0x6b, 0x2e, 0x76, 0x31, 0x2e, 0x52, 0x65,
	0x70, 0x6c, 0x79, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x06, 0x61, 0x63, 0x74, 0x69, 0x6f,
	0x6e, 0x22, 0x0f, 0x0a, 0x0d, 0x4c, 0x69, 0x6b, 0x65, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52,
	0x65, 0x73, 0x22, 0x6b, 0x0a, 0x10, 0x44, 0x69, 0x73, 0x6c, 0x69, 0x6b, 0x65, 0x41, 0x63, 0x74,
	0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x12, 0x22, 0x0a, 0x08, 0x72, 0x65, 0x70, 0x6c, 0x79, 0x5f,
	0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x42, 0x07, 0xba, 0x48, 0x04, 0x32, 0x02, 0x20,
	0x00, 0x52, 0x07, 0x72, 0x65, 0x70, 0x6c, 0x79, 0x49, 0x64, 0x12, 0x33, 0x0a, 0x06, 0x61, 0x63,
	0x74, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x1b, 0x2e, 0x63, 0x6f, 0x6d,
	0x6d, 0x65, 0x6e, 0x74, 0x2e, 0x73, 0x64, 0x6b, 0x2e, 0x76, 0x31, 0x2e, 0x52, 0x65, 0x70, 0x6c,
	0x79, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x06, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x22,
	0x12, 0x0a, 0x10, 0x44, 0x69, 0x73, 0x6c, 0x69, 0x6b, 0x65, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e,
	0x52, 0x65, 0x73, 0x22, 0x10, 0x0a, 0x0e, 0x52, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x52, 0x65, 0x70,
	0x6c, 0x79, 0x52, 0x65, 0x71, 0x22, 0x10, 0x0a, 0x0e, 0x52, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x52,
	0x65, 0x70, 0x6c, 0x79, 0x52, 0x65, 0x73, 0x22, 0x78, 0x0a, 0x0b, 0x50, 0x69, 0x6e, 0x52, 0x65,
	0x70, 0x6c, 0x79, 0x52, 0x65, 0x71, 0x12, 0x19, 0x0a, 0x03, 0x6f, 0x69, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x04, 0x42, 0x07, 0xba, 0x48, 0x04, 0x32, 0x02, 0x20, 0x00, 0x52, 0x03, 0x6f, 0x69,
	0x64, 0x12, 0x19, 0x0a, 0x03, 0x72, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x04, 0x42, 0x07,
	0xba, 0x48, 0x04, 0x32, 0x02, 0x20, 0x00, 0x52, 0x03, 0x72, 0x69, 0x64, 0x12, 0x33, 0x0a, 0x06,
	0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x1b, 0x2e, 0x63,
	0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x2e, 0x73, 0x64, 0x6b, 0x2e, 0x76, 0x31, 0x2e, 0x52, 0x65,
	0x70, 0x6c, 0x79, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x06, 0x61, 0x63, 0x74, 0x69, 0x6f,
	0x6e, 0x22, 0x0d, 0x0a, 0x0b, 0x50, 0x69, 0x6e, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x52, 0x65, 0x73,
	0x22, 0x77, 0x0a, 0x0f, 0x50, 0x61, 0x67, 0x65, 0x47, 0x65, 0x74, 0x52, 0x65, 0x70, 0x6c, 0x79,
	0x52, 0x65, 0x71, 0x12, 0x19, 0x0a, 0x03, 0x6f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04,
	0x42, 0x07, 0xba, 0x48, 0x04, 0x32, 0x02, 0x20, 0x00, 0x52, 0x03, 0x6f, 0x69, 0x64, 0x12, 0x16,
	0x0a, 0x06, 0x63, 0x75, 0x72, 0x73, 0x6f, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x04, 0x52, 0x06,
	0x63, 0x75, 0x72, 0x73, 0x6f, 0x72, 0x12, 0x31, 0x0a, 0x07, 0x73, 0x6f, 0x72, 0x74, 0x5f, 0x62,
	0x79, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x18, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x6e,
	0x74, 0x2e, 0x73, 0x64, 0x6b, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x6f, 0x72, 0x74, 0x54, 0x79, 0x70,
	0x65, 0x52, 0x06, 0x73, 0x6f, 0x72, 0x74, 0x42, 0x79, 0x22, 0xd3, 0x02, 0x0a, 0x09, 0x52, 0x65,
	0x70, 0x6c, 0x79, 0x49, 0x74, 0x65, 0x6d, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x04, 0x52, 0x02, 0x69, 0x64, 0x12, 0x10, 0x0a, 0x03, 0x6f, 0x69, 0x64, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x04, 0x52, 0x03, 0x6f, 0x69, 0x64, 0x12, 0x1d, 0x0a, 0x0a, 0x72, 0x65, 0x70,
	0x6c, 0x79, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x09, 0x72,
	0x65, 0x70, 0x6c, 0x79, 0x54, 0x79, 0x70, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x63, 0x6f, 0x6e, 0x74,
	0x65, 0x6e, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x63, 0x6f, 0x6e, 0x74, 0x65,
	0x6e, 0x74, 0x12, 0x10, 0x0a, 0x03, 0x75, 0x69, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x04, 0x52,
	0x03, 0x75, 0x69, 0x64, 0x12, 0x17, 0x0a, 0x07, 0x72, 0x6f, 0x6f, 0x74, 0x5f, 0x69, 0x64, 0x18,
	0x06, 0x20, 0x01, 0x28, 0x04, 0x52, 0x06, 0x72, 0x6f, 0x6f, 0x74, 0x49, 0x64, 0x12, 0x1b, 0x0a,
	0x09, 0x70, 0x61, 0x72, 0x65, 0x6e, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x07, 0x20, 0x01, 0x28, 0x04,
	0x52, 0x08, 0x70, 0x61, 0x72, 0x65, 0x6e, 0x74, 0x49, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x72, 0x75,
	0x69, 0x64, 0x18, 0x08, 0x20, 0x01, 0x28, 0x04, 0x52, 0x04, 0x72, 0x75, 0x69, 0x64, 0x12, 0x1d,
	0x0a, 0x0a, 0x6c, 0x69, 0x6b, 0x65, 0x5f, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x09, 0x20, 0x01,
	0x28, 0x04, 0x52, 0x09, 0x6c, 0x69, 0x6b, 0x65, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x1d, 0x0a,
	0x0a, 0x68, 0x61, 0x74, 0x65, 0x5f, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x0a, 0x20, 0x01, 0x28,
	0x04, 0x52, 0x09, 0x68, 0x61, 0x74, 0x65, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x14, 0x0a, 0x05,
	0x63, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x63, 0x74, 0x69,
	0x6d, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x6d, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x0c, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x05, 0x6d, 0x74, 0x69, 0x6d, 0x65, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x70, 0x18, 0x0d,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x70, 0x12, 0x15, 0x0a, 0x06, 0x69, 0x73, 0x5f, 0x70,
	0x69, 0x6e, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x08, 0x52, 0x05, 0x69, 0x73, 0x50, 0x69, 0x6e, 0x22,
	0x82, 0x01, 0x0a, 0x0f, 0x50, 0x61, 0x67, 0x65, 0x47, 0x65, 0x74, 0x52, 0x65, 0x70, 0x6c, 0x79,
	0x52, 0x65, 0x73, 0x12, 0x33, 0x0a, 0x07, 0x72, 0x65, 0x70, 0x6c, 0x69, 0x65, 0x73, 0x18, 0x01,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x2e, 0x73,
	0x64, 0x6b, 0x2e, 0x76, 0x31, 0x2e, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x49, 0x74, 0x65, 0x6d, 0x52,
	0x07, 0x72, 0x65, 0x70, 0x6c, 0x69, 0x65, 0x73, 0x12, 0x1f, 0x0a, 0x0b, 0x6e, 0x65, 0x78, 0x74,
	0x5f, 0x63, 0x75, 0x72, 0x73, 0x6f, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0a, 0x6e,
	0x65, 0x78, 0x74, 0x43, 0x75, 0x72, 0x73, 0x6f, 0x72, 0x12, 0x19, 0x0a, 0x08, 0x68, 0x61, 0x73,
	0x5f, 0x6e, 0x65, 0x78, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07, 0x68, 0x61, 0x73,
	0x4e, 0x65, 0x78, 0x74, 0x22, 0x69, 0x0a, 0x12, 0x50, 0x61, 0x67, 0x65, 0x47, 0x65, 0x74, 0x53,
	0x75, 0x62, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x52, 0x65, 0x71, 0x12, 0x19, 0x0a, 0x03, 0x6f, 0x69,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x42, 0x07, 0xba, 0x48, 0x04, 0x32, 0x02, 0x20, 0x00,
	0x52, 0x03, 0x6f, 0x69, 0x64, 0x12, 0x20, 0x0a, 0x07, 0x72, 0x6f, 0x6f, 0x74, 0x5f, 0x69, 0x64,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x04, 0x42, 0x07, 0xba, 0x48, 0x04, 0x32, 0x02, 0x20, 0x00, 0x52,
	0x06, 0x72, 0x6f, 0x6f, 0x74, 0x49, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x63, 0x75, 0x72, 0x73, 0x6f,
	0x72, 0x18, 0x03, 0x20, 0x01, 0x28, 0x04, 0x52, 0x06, 0x63, 0x75, 0x72, 0x73, 0x6f, 0x72, 0x22,
	0x85, 0x01, 0x0a, 0x12, 0x50, 0x61, 0x67, 0x65, 0x47, 0x65, 0x74, 0x53, 0x75, 0x62, 0x52, 0x65,
	0x70, 0x6c, 0x79, 0x52, 0x65, 0x73, 0x12, 0x33, 0x0a, 0x07, 0x72, 0x65, 0x70, 0x6c, 0x69, 0x65,
	0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x6e,
	0x74, 0x2e, 0x73, 0x64, 0x6b, 0x2e, 0x76, 0x31, 0x2e, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x49, 0x74,
	0x65, 0x6d, 0x52, 0x07, 0x72, 0x65, 0x70, 0x6c, 0x69, 0x65, 0x73, 0x12, 0x1f, 0x0a, 0x0b, 0x6e,
	0x65, 0x78, 0x74, 0x5f, 0x63, 0x75, 0x72, 0x73, 0x6f, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x04,
	0x52, 0x0a, 0x6e, 0x65, 0x78, 0x74, 0x43, 0x75, 0x72, 0x73, 0x6f, 0x72, 0x12, 0x19, 0x0a, 0x08,
	0x68, 0x61, 0x73, 0x5f, 0x6e, 0x65, 0x78, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07,
	0x68, 0x61, 0x73, 0x4e, 0x65, 0x78, 0x74, 0x22, 0x7f, 0x0a, 0x10, 0x44, 0x65, 0x74, 0x61, 0x69,
	0x6c, 0x65, 0x64, 0x53, 0x75, 0x62, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x2f, 0x0a, 0x05, 0x69,
	0x74, 0x65, 0x6d, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x63, 0x6f, 0x6d,
	0x6d, 0x65, 0x6e, 0x74, 0x2e, 0x73, 0x64, 0x6b, 0x2e, 0x76, 0x31, 0x2e, 0x52, 0x65, 0x70, 0x6c,
	0x79, 0x49, 0x74, 0x65, 0x6d, 0x52, 0x05, 0x69, 0x74, 0x65, 0x6d, 0x73, 0x12, 0x1f, 0x0a, 0x0b,
	0x6e, 0x65, 0x78, 0x74, 0x5f, 0x63, 0x75, 0x72, 0x73, 0x6f, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x04, 0x52, 0x0a, 0x6e, 0x65, 0x78, 0x74, 0x43, 0x75, 0x72, 0x73, 0x6f, 0x72, 0x12, 0x19, 0x0a,
	0x08, 0x68, 0x61, 0x73, 0x5f, 0x6e, 0x65, 0x78, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x08, 0x52,
	0x07, 0x68, 0x61, 0x73, 0x4e, 0x65, 0x78, 0x74, 0x22, 0x84, 0x01, 0x0a, 0x11, 0x44, 0x65, 0x74,
	0x61, 0x69, 0x6c, 0x65, 0x64, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x49, 0x74, 0x65, 0x6d, 0x12, 0x2d,
	0x0a, 0x04, 0x72, 0x6f, 0x6f, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x63,
	0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x2e, 0x73, 0x64, 0x6b, 0x2e, 0x76, 0x31, 0x2e, 0x52, 0x65,
	0x70, 0x6c, 0x79, 0x49, 0x74, 0x65, 0x6d, 0x52, 0x04, 0x72, 0x6f, 0x6f, 0x74, 0x12, 0x40, 0x0a,
	0x0a, 0x73, 0x75, 0x62, 0x72, 0x65, 0x70, 0x6c, 0x69, 0x65, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x20, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x2e, 0x73, 0x64, 0x6b, 0x2e,
	0x76, 0x31, 0x2e, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x65, 0x64, 0x53, 0x75, 0x62, 0x52, 0x65,
	0x70, 0x6c, 0x79, 0x52, 0x0a, 0x73, 0x75, 0x62, 0x72, 0x65, 0x70, 0x6c, 0x69, 0x65, 0x73, 0x22,
	0x92, 0x01, 0x0a, 0x17, 0x50, 0x61, 0x67, 0x65, 0x47, 0x65, 0x74, 0x44, 0x65, 0x74, 0x61, 0x69,
	0x6c, 0x65, 0x64, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x52, 0x65, 0x73, 0x12, 0x3b, 0x0a, 0x07, 0x72,
	0x65, 0x70, 0x6c, 0x69, 0x65, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x21, 0x2e, 0x63,
	0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x2e, 0x73, 0x64, 0x6b, 0x2e, 0x76, 0x31, 0x2e, 0x44, 0x65,
	0x74, 0x61, 0x69, 0x6c, 0x65, 0x64, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x49, 0x74, 0x65, 0x6d, 0x52,
	0x07, 0x72, 0x65, 0x70, 0x6c, 0x69, 0x65, 0x73, 0x12, 0x1f, 0x0a, 0x0b, 0x6e, 0x65, 0x78, 0x74,
	0x5f, 0x63, 0x75, 0x72, 0x73, 0x6f, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0a, 0x6e,
	0x65, 0x78, 0x74, 0x43, 0x75, 0x72, 0x73, 0x6f, 0x72, 0x12, 0x19, 0x0a, 0x08, 0x68, 0x61, 0x73,
	0x5f, 0x6e, 0x65, 0x78, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07, 0x68, 0x61, 0x73,
	0x4e, 0x65, 0x78, 0x74, 0x22, 0x2e, 0x0a, 0x11, 0x47, 0x65, 0x74, 0x50, 0x69, 0x6e, 0x6e, 0x65,
	0x64, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x52, 0x65, 0x71, 0x12, 0x19, 0x0a, 0x03, 0x6f, 0x69, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x42, 0x07, 0xba, 0x48, 0x04, 0x32, 0x02, 0x20, 0x00, 0x52,
	0x03, 0x6f, 0x69, 0x64, 0x22, 0x4c, 0x0a, 0x11, 0x47, 0x65, 0x74, 0x50, 0x69, 0x6e, 0x6e, 0x65,
	0x64, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x52, 0x65, 0x73, 0x12, 0x37, 0x0a, 0x05, 0x72, 0x65, 0x70,
	0x6c, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x21, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x65,
	0x6e, 0x74, 0x2e, 0x73, 0x64, 0x6b, 0x2e, 0x76, 0x31, 0x2e, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c,
	0x65, 0x64, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x49, 0x74, 0x65, 0x6d, 0x52, 0x05, 0x72, 0x65, 0x70,
	0x6c, 0x79, 0x22, 0x2a, 0x0a, 0x0d, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x52, 0x65, 0x70, 0x6c, 0x79,
	0x52, 0x65, 0x71, 0x12, 0x19, 0x0a, 0x03, 0x6f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04,
	0x42, 0x07, 0xba, 0x48, 0x04, 0x32, 0x02, 0x20, 0x00, 0x52, 0x03, 0x6f, 0x69, 0x64, 0x22, 0x2c,
	0x0a, 0x0d, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x52, 0x65, 0x73, 0x12,
	0x1b, 0x0a, 0x09, 0x6e, 0x75, 0x6d, 0x5f, 0x72, 0x65, 0x70, 0x6c, 0x79, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x04, 0x52, 0x08, 0x6e, 0x75, 0x6d, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x2a, 0x39, 0x0a, 0x0b,
	0x52, 0x65, 0x70, 0x6c, 0x79, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x15, 0x0a, 0x11, 0x52,
	0x45, 0x50, 0x4c, 0x59, 0x5f, 0x41, 0x43, 0x54, 0x49, 0x4f, 0x4e, 0x5f, 0x55, 0x4e, 0x44, 0x4f,
	0x10, 0x00, 0x12, 0x13, 0x0a, 0x0f, 0x52, 0x45, 0x50, 0x4c, 0x59, 0x5f, 0x41, 0x43, 0x54, 0x49,
	0x4f, 0x4e, 0x5f, 0x44, 0x4f, 0x10, 0x01, 0x2a, 0x23, 0x0a, 0x08, 0x53, 0x6f, 0x72, 0x74, 0x54,
	0x79, 0x70, 0x65, 0x12, 0x0a, 0x0a, 0x06, 0x42, 0x79, 0x54, 0x69, 0x6d, 0x65, 0x10, 0x00, 0x12,
	0x0b, 0x0a, 0x07, 0x42, 0x79, 0x54, 0x72, 0x65, 0x6e, 0x64, 0x10, 0x01, 0x32, 0xfc, 0x06, 0x0a,
	0x05, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x44, 0x0a, 0x08, 0x41, 0x64, 0x64, 0x52, 0x65, 0x70,
	0x6c, 0x79, 0x12, 0x1b, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x2e, 0x73, 0x64, 0x6b,
	0x2e, 0x76, 0x31, 0x2e, 0x41, 0x64, 0x64, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x52, 0x65, 0x71, 0x1a,
	0x1b, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x2e, 0x73, 0x64, 0x6b, 0x2e, 0x76, 0x31,
	0x2e, 0x41, 0x64, 0x64, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x52, 0x65, 0x73, 0x12, 0x44, 0x0a, 0x08,
	0x44, 0x65, 0x6c, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x1b, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x65,
	0x6e, 0x74, 0x2e, 0x73, 0x64, 0x6b, 0x2e, 0x76, 0x31, 0x2e, 0x44, 0x65, 0x6c, 0x52, 0x65, 0x70,
	0x6c, 0x79, 0x52, 0x65, 0x71, 0x1a, 0x1b, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x2e,
	0x73, 0x64, 0x6b, 0x2e, 0x76, 0x31, 0x2e, 0x44, 0x65, 0x6c, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x52,
	0x65, 0x73, 0x12, 0x4a, 0x0a, 0x0a, 0x4c, 0x69, 0x6b, 0x65, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e,
	0x12, 0x1d, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x2e, 0x73, 0x64, 0x6b, 0x2e, 0x76,
	0x31, 0x2e, 0x4c, 0x69, 0x6b, 0x65, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x1a,
	0x1d, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x2e, 0x73, 0x64, 0x6b, 0x2e, 0x76, 0x31,
	0x2e, 0x4c, 0x69, 0x6b, 0x65, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x12, 0x53,
	0x0a, 0x0d, 0x44, 0x69, 0x73, 0x6c, 0x69, 0x6b, 0x65, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x12,
	0x20, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x2e, 0x73, 0x64, 0x6b, 0x2e, 0x76, 0x31,
	0x2e, 0x44, 0x69, 0x73, 0x6c, 0x69, 0x6b, 0x65, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65,
	0x71, 0x1a, 0x20, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x2e, 0x73, 0x64, 0x6b, 0x2e,
	0x76, 0x31, 0x2e, 0x44, 0x69, 0x73, 0x6c, 0x69, 0x6b, 0x65, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e,
	0x52, 0x65, 0x73, 0x12, 0x4d, 0x0a, 0x0b, 0x52, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x52, 0x65, 0x70,
	0x6c, 0x79, 0x12, 0x1e, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x2e, 0x73, 0x64, 0x6b,
	0x2e, 0x76, 0x31, 0x2e, 0x52, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x52,
	0x65, 0x71, 0x1a, 0x1e, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x2e, 0x73, 0x64, 0x6b,
	0x2e, 0x76, 0x31, 0x2e, 0x52, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x52,
	0x65, 0x73, 0x12, 0x44, 0x0a, 0x08, 0x50, 0x69, 0x6e, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x1b,
	0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x2e, 0x73, 0x64, 0x6b, 0x2e, 0x76, 0x31, 0x2e,
	0x50, 0x69, 0x6e, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x52, 0x65, 0x71, 0x1a, 0x1b, 0x2e, 0x63, 0x6f,
	0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x2e, 0x73, 0x64, 0x6b, 0x2e, 0x76, 0x31, 0x2e, 0x50, 0x69, 0x6e,
	0x52, 0x65, 0x70, 0x6c, 0x79, 0x52, 0x65, 0x73, 0x12, 0x50, 0x0a, 0x0c, 0x50, 0x61, 0x67, 0x65,
	0x47, 0x65, 0x74, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x1f, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x65,
	0x6e, 0x74, 0x2e, 0x73, 0x64, 0x6b, 0x2e, 0x76, 0x31, 0x2e, 0x50, 0x61, 0x67, 0x65, 0x47, 0x65,
	0x74, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x52, 0x65, 0x71, 0x1a, 0x1f, 0x2e, 0x63, 0x6f, 0x6d, 0x6d,
	0x65, 0x6e, 0x74, 0x2e, 0x73, 0x64, 0x6b, 0x2e, 0x76, 0x31, 0x2e, 0x50, 0x61, 0x67, 0x65, 0x47,
	0x65, 0x74, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x52, 0x65, 0x73, 0x12, 0x59, 0x0a, 0x0f, 0x50, 0x61,
	0x67, 0x65, 0x47, 0x65, 0x74, 0x53, 0x75, 0x62, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x22, 0x2e,
	0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x2e, 0x73, 0x64, 0x6b, 0x2e, 0x76, 0x31, 0x2e, 0x50,
	0x61, 0x67, 0x65, 0x47, 0x65, 0x74, 0x53, 0x75, 0x62, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x52, 0x65,
	0x71, 0x1a, 0x22, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x2e, 0x73, 0x64, 0x6b, 0x2e,
	0x76, 0x31, 0x2e, 0x50, 0x61, 0x67, 0x65, 0x47, 0x65, 0x74, 0x53, 0x75, 0x62, 0x52, 0x65, 0x70,
	0x6c, 0x79, 0x52, 0x65, 0x73, 0x12, 0x60, 0x0a, 0x14, 0x50, 0x61, 0x67, 0x65, 0x47, 0x65, 0x74,
	0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x65, 0x64, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x1f, 0x2e,
	0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x2e, 0x73, 0x64, 0x6b, 0x2e, 0x76, 0x31, 0x2e, 0x50,
	0x61, 0x67, 0x65, 0x47, 0x65, 0x74, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x52, 0x65, 0x71, 0x1a, 0x27,
	0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x2e, 0x73, 0x64, 0x6b, 0x2e, 0x76, 0x31, 0x2e,
	0x50, 0x61, 0x67, 0x65, 0x47, 0x65, 0x74, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x65, 0x64, 0x52,
	0x65, 0x70, 0x6c, 0x79, 0x52, 0x65, 0x73, 0x12, 0x56, 0x0a, 0x0e, 0x47, 0x65, 0x74, 0x50, 0x69,
	0x6e, 0x6e, 0x65, 0x64, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x21, 0x2e, 0x63, 0x6f, 0x6d, 0x6d,
	0x65, 0x6e, 0x74, 0x2e, 0x73, 0x64, 0x6b, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x50, 0x69,
	0x6e, 0x6e, 0x65, 0x64, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x52, 0x65, 0x71, 0x1a, 0x21, 0x2e, 0x63,
	0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x2e, 0x73, 0x64, 0x6b, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65,
	0x74, 0x50, 0x69, 0x6e, 0x6e, 0x65, 0x64, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x52, 0x65, 0x73, 0x12,
	0x4a, 0x0a, 0x0a, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x1d, 0x2e,
	0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x2e, 0x73, 0x64, 0x6b, 0x2e, 0x76, 0x31, 0x2e, 0x43,
	0x6f, 0x75, 0x6e, 0x74, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x52, 0x65, 0x71, 0x1a, 0x1d, 0x2e, 0x63,
	0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x2e, 0x73, 0x64, 0x6b, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x6f,
	0x75, 0x6e, 0x74, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x52, 0x65, 0x73, 0x42, 0xaa, 0x01, 0x0a, 0x12,
	0x63, 0x6f, 0x6d, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x2e, 0x73, 0x64, 0x6b, 0x2e,
	0x76, 0x31, 0x42, 0x0a, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x50, 0x01,
	0x5a, 0x2e, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x72, 0x79, 0x61,
	0x6e, 0x72, 0x65, 0x61, 0x64, 0x62, 0x6f, 0x6f, 0x6b, 0x73, 0x2f, 0x77, 0x68, 0x69, 0x6d, 0x65,
	0x72, 0x2f, 0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x2f, 0x73, 0x64, 0x6b, 0x2f, 0x76, 0x31,
	0xa2, 0x02, 0x03, 0x43, 0x53, 0x58, 0xaa, 0x02, 0x0e, 0x43, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74,
	0x2e, 0x53, 0x64, 0x6b, 0x2e, 0x56, 0x31, 0xca, 0x02, 0x0e, 0x43, 0x6f, 0x6d, 0x6d, 0x65, 0x6e,
	0x74, 0x5c, 0x53, 0x64, 0x6b, 0x5c, 0x56, 0x31, 0xe2, 0x02, 0x1a, 0x43, 0x6f, 0x6d, 0x6d, 0x65,
	0x6e, 0x74, 0x5c, 0x53, 0x64, 0x6b, 0x5c, 0x56, 0x31, 0x5c, 0x47, 0x50, 0x42, 0x4d, 0x65, 0x74,
	0x61, 0x64, 0x61, 0x74, 0x61, 0xea, 0x02, 0x10, 0x43, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x3a,
	0x3a, 0x53, 0x64, 0x6b, 0x3a, 0x3a, 0x56, 0x31, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_v1_reply_proto_rawDescOnce sync.Once
	file_v1_reply_proto_rawDescData = file_v1_reply_proto_rawDesc
)

func file_v1_reply_proto_rawDescGZIP() []byte {
	file_v1_reply_proto_rawDescOnce.Do(func() {
		file_v1_reply_proto_rawDescData = protoimpl.X.CompressGZIP(file_v1_reply_proto_rawDescData)
	})
	return file_v1_reply_proto_rawDescData
}

var file_v1_reply_proto_enumTypes = make([]protoimpl.EnumInfo, 2)
var file_v1_reply_proto_msgTypes = make([]protoimpl.MessageInfo, 24)
var file_v1_reply_proto_goTypes = []any{
	(ReplyAction)(0),                // 0: comment.sdk.v1.ReplyAction
	(SortType)(0),                   // 1: comment.sdk.v1.SortType
	(*AddReplyReq)(nil),             // 2: comment.sdk.v1.AddReplyReq
	(*AddReplyRes)(nil),             // 3: comment.sdk.v1.AddReplyRes
	(*DelReplyReq)(nil),             // 4: comment.sdk.v1.DelReplyReq
	(*DelReplyRes)(nil),             // 5: comment.sdk.v1.DelReplyRes
	(*LikeActionReq)(nil),           // 6: comment.sdk.v1.LikeActionReq
	(*LikeActionRes)(nil),           // 7: comment.sdk.v1.LikeActionRes
	(*DislikeActionReq)(nil),        // 8: comment.sdk.v1.DislikeActionReq
	(*DislikeActionRes)(nil),        // 9: comment.sdk.v1.DislikeActionRes
	(*ReportReplyReq)(nil),          // 10: comment.sdk.v1.ReportReplyReq
	(*ReportReplyRes)(nil),          // 11: comment.sdk.v1.ReportReplyRes
	(*PinReplyReq)(nil),             // 12: comment.sdk.v1.PinReplyReq
	(*PinReplyRes)(nil),             // 13: comment.sdk.v1.PinReplyRes
	(*PageGetReplyReq)(nil),         // 14: comment.sdk.v1.PageGetReplyReq
	(*ReplyItem)(nil),               // 15: comment.sdk.v1.ReplyItem
	(*PageGetReplyRes)(nil),         // 16: comment.sdk.v1.PageGetReplyRes
	(*PageGetSubReplyReq)(nil),      // 17: comment.sdk.v1.PageGetSubReplyReq
	(*PageGetSubReplyRes)(nil),      // 18: comment.sdk.v1.PageGetSubReplyRes
	(*DetailedSubReply)(nil),        // 19: comment.sdk.v1.DetailedSubReply
	(*DetailedReplyItem)(nil),       // 20: comment.sdk.v1.DetailedReplyItem
	(*PageGetDetailedReplyRes)(nil), // 21: comment.sdk.v1.PageGetDetailedReplyRes
	(*GetPinnedReplyReq)(nil),       // 22: comment.sdk.v1.GetPinnedReplyReq
	(*GetPinnedReplyRes)(nil),       // 23: comment.sdk.v1.GetPinnedReplyRes
	(*CountReplyReq)(nil),           // 24: comment.sdk.v1.CountReplyReq
	(*CountReplyRes)(nil),           // 25: comment.sdk.v1.CountReplyRes
}
var file_v1_reply_proto_depIdxs = []int32{
	0,  // 0: comment.sdk.v1.LikeActionReq.action:type_name -> comment.sdk.v1.ReplyAction
	0,  // 1: comment.sdk.v1.DislikeActionReq.action:type_name -> comment.sdk.v1.ReplyAction
	0,  // 2: comment.sdk.v1.PinReplyReq.action:type_name -> comment.sdk.v1.ReplyAction
	1,  // 3: comment.sdk.v1.PageGetReplyReq.sort_by:type_name -> comment.sdk.v1.SortType
	15, // 4: comment.sdk.v1.PageGetReplyRes.replies:type_name -> comment.sdk.v1.ReplyItem
	15, // 5: comment.sdk.v1.PageGetSubReplyRes.replies:type_name -> comment.sdk.v1.ReplyItem
	15, // 6: comment.sdk.v1.DetailedSubReply.items:type_name -> comment.sdk.v1.ReplyItem
	15, // 7: comment.sdk.v1.DetailedReplyItem.root:type_name -> comment.sdk.v1.ReplyItem
	19, // 8: comment.sdk.v1.DetailedReplyItem.subreplies:type_name -> comment.sdk.v1.DetailedSubReply
	20, // 9: comment.sdk.v1.PageGetDetailedReplyRes.replies:type_name -> comment.sdk.v1.DetailedReplyItem
	20, // 10: comment.sdk.v1.GetPinnedReplyRes.reply:type_name -> comment.sdk.v1.DetailedReplyItem
	2,  // 11: comment.sdk.v1.Reply.AddReply:input_type -> comment.sdk.v1.AddReplyReq
	4,  // 12: comment.sdk.v1.Reply.DelReply:input_type -> comment.sdk.v1.DelReplyReq
	6,  // 13: comment.sdk.v1.Reply.LikeAction:input_type -> comment.sdk.v1.LikeActionReq
	8,  // 14: comment.sdk.v1.Reply.DislikeAction:input_type -> comment.sdk.v1.DislikeActionReq
	10, // 15: comment.sdk.v1.Reply.ReportReply:input_type -> comment.sdk.v1.ReportReplyReq
	12, // 16: comment.sdk.v1.Reply.PinReply:input_type -> comment.sdk.v1.PinReplyReq
	14, // 17: comment.sdk.v1.Reply.PageGetReply:input_type -> comment.sdk.v1.PageGetReplyReq
	17, // 18: comment.sdk.v1.Reply.PageGetSubReply:input_type -> comment.sdk.v1.PageGetSubReplyReq
	14, // 19: comment.sdk.v1.Reply.PageGetDetailedReply:input_type -> comment.sdk.v1.PageGetReplyReq
	22, // 20: comment.sdk.v1.Reply.GetPinnedReply:input_type -> comment.sdk.v1.GetPinnedReplyReq
	24, // 21: comment.sdk.v1.Reply.CountReply:input_type -> comment.sdk.v1.CountReplyReq
	3,  // 22: comment.sdk.v1.Reply.AddReply:output_type -> comment.sdk.v1.AddReplyRes
	5,  // 23: comment.sdk.v1.Reply.DelReply:output_type -> comment.sdk.v1.DelReplyRes
	7,  // 24: comment.sdk.v1.Reply.LikeAction:output_type -> comment.sdk.v1.LikeActionRes
	9,  // 25: comment.sdk.v1.Reply.DislikeAction:output_type -> comment.sdk.v1.DislikeActionRes
	11, // 26: comment.sdk.v1.Reply.ReportReply:output_type -> comment.sdk.v1.ReportReplyRes
	13, // 27: comment.sdk.v1.Reply.PinReply:output_type -> comment.sdk.v1.PinReplyRes
	16, // 28: comment.sdk.v1.Reply.PageGetReply:output_type -> comment.sdk.v1.PageGetReplyRes
	18, // 29: comment.sdk.v1.Reply.PageGetSubReply:output_type -> comment.sdk.v1.PageGetSubReplyRes
	21, // 30: comment.sdk.v1.Reply.PageGetDetailedReply:output_type -> comment.sdk.v1.PageGetDetailedReplyRes
	23, // 31: comment.sdk.v1.Reply.GetPinnedReply:output_type -> comment.sdk.v1.GetPinnedReplyRes
	25, // 32: comment.sdk.v1.Reply.CountReply:output_type -> comment.sdk.v1.CountReplyRes
	22, // [22:33] is the sub-list for method output_type
	11, // [11:22] is the sub-list for method input_type
	11, // [11:11] is the sub-list for extension type_name
	11, // [11:11] is the sub-list for extension extendee
	0,  // [0:11] is the sub-list for field type_name
}

func init() { file_v1_reply_proto_init() }
func file_v1_reply_proto_init() {
	if File_v1_reply_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_v1_reply_proto_msgTypes[0].Exporter = func(v any, i int) any {
			switch v := v.(*AddReplyReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_v1_reply_proto_msgTypes[1].Exporter = func(v any, i int) any {
			switch v := v.(*AddReplyRes); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_v1_reply_proto_msgTypes[2].Exporter = func(v any, i int) any {
			switch v := v.(*DelReplyReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_v1_reply_proto_msgTypes[3].Exporter = func(v any, i int) any {
			switch v := v.(*DelReplyRes); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_v1_reply_proto_msgTypes[4].Exporter = func(v any, i int) any {
			switch v := v.(*LikeActionReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_v1_reply_proto_msgTypes[5].Exporter = func(v any, i int) any {
			switch v := v.(*LikeActionRes); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_v1_reply_proto_msgTypes[6].Exporter = func(v any, i int) any {
			switch v := v.(*DislikeActionReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_v1_reply_proto_msgTypes[7].Exporter = func(v any, i int) any {
			switch v := v.(*DislikeActionRes); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_v1_reply_proto_msgTypes[8].Exporter = func(v any, i int) any {
			switch v := v.(*ReportReplyReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_v1_reply_proto_msgTypes[9].Exporter = func(v any, i int) any {
			switch v := v.(*ReportReplyRes); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_v1_reply_proto_msgTypes[10].Exporter = func(v any, i int) any {
			switch v := v.(*PinReplyReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_v1_reply_proto_msgTypes[11].Exporter = func(v any, i int) any {
			switch v := v.(*PinReplyRes); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_v1_reply_proto_msgTypes[12].Exporter = func(v any, i int) any {
			switch v := v.(*PageGetReplyReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_v1_reply_proto_msgTypes[13].Exporter = func(v any, i int) any {
			switch v := v.(*ReplyItem); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_v1_reply_proto_msgTypes[14].Exporter = func(v any, i int) any {
			switch v := v.(*PageGetReplyRes); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_v1_reply_proto_msgTypes[15].Exporter = func(v any, i int) any {
			switch v := v.(*PageGetSubReplyReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_v1_reply_proto_msgTypes[16].Exporter = func(v any, i int) any {
			switch v := v.(*PageGetSubReplyRes); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_v1_reply_proto_msgTypes[17].Exporter = func(v any, i int) any {
			switch v := v.(*DetailedSubReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_v1_reply_proto_msgTypes[18].Exporter = func(v any, i int) any {
			switch v := v.(*DetailedReplyItem); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_v1_reply_proto_msgTypes[19].Exporter = func(v any, i int) any {
			switch v := v.(*PageGetDetailedReplyRes); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_v1_reply_proto_msgTypes[20].Exporter = func(v any, i int) any {
			switch v := v.(*GetPinnedReplyReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_v1_reply_proto_msgTypes[21].Exporter = func(v any, i int) any {
			switch v := v.(*GetPinnedReplyRes); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_v1_reply_proto_msgTypes[22].Exporter = func(v any, i int) any {
			switch v := v.(*CountReplyReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_v1_reply_proto_msgTypes[23].Exporter = func(v any, i int) any {
			switch v := v.(*CountReplyRes); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_v1_reply_proto_rawDesc,
			NumEnums:      2,
			NumMessages:   24,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_v1_reply_proto_goTypes,
		DependencyIndexes: file_v1_reply_proto_depIdxs,
		EnumInfos:         file_v1_reply_proto_enumTypes,
		MessageInfos:      file_v1_reply_proto_msgTypes,
	}.Build()
	File_v1_reply_proto = out.File
	file_v1_reply_proto_rawDesc = nil
	file_v1_reply_proto_goTypes = nil
	file_v1_reply_proto_depIdxs = nil
}
