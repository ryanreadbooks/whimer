// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.34.2
// 	protoc        (unknown)
// source: v1/reply.proto

package v1

import (
	_ "buf.build/gen/go/bufbuild/protovalidate/protocolbuffers/go/buf/validate"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type ReplyAction int32

const (
	ReplyAction_REPLY_ACTION_UNDO ReplyAction = 0
	ReplyAction_REPLY_ACTION_DO   ReplyAction = 1
)

// Enum value maps for ReplyAction.
var (
	ReplyAction_name = map[int32]string{
		0: "REPLY_ACTION_UNDO",
		1: "REPLY_ACTION_DO",
	}
	ReplyAction_value = map[string]int32{
		"REPLY_ACTION_UNDO": 0,
		"REPLY_ACTION_DO":   1,
	}
)

func (x ReplyAction) Enum() *ReplyAction {
	p := new(ReplyAction)
	*p = x
	return p
}

func (x ReplyAction) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ReplyAction) Descriptor() protoreflect.EnumDescriptor {
	return file_v1_reply_proto_enumTypes[0].Descriptor()
}

func (ReplyAction) Type() protoreflect.EnumType {
	return &file_v1_reply_proto_enumTypes[0]
}

func (x ReplyAction) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use ReplyAction.Descriptor instead.
func (ReplyAction) EnumDescriptor() ([]byte, []int) {
	return file_v1_reply_proto_rawDescGZIP(), []int{0}
}

type SortType int32

const (
	SortType_ByTime  SortType = 0 // 按照发布时间排序
	SortType_ByTrend SortType = 1 // 按照热度排序
)

// Enum value maps for SortType.
var (
	SortType_name = map[int32]string{
		0: "ByTime",
		1: "ByTrend",
	}
	SortType_value = map[string]int32{
		"ByTime":  0,
		"ByTrend": 1,
	}
)

func (x SortType) Enum() *SortType {
	p := new(SortType)
	*p = x
	return p
}

func (x SortType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (SortType) Descriptor() protoreflect.EnumDescriptor {
	return file_v1_reply_proto_enumTypes[1].Descriptor()
}

func (SortType) Type() protoreflect.EnumType {
	return &file_v1_reply_proto_enumTypes[1]
}

func (x SortType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use SortType.Descriptor instead.
func (SortType) EnumDescriptor() ([]byte, []int) {
	return file_v1_reply_proto_rawDescGZIP(), []int{1}
}

// 发布评论
type AddReplyRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ReplyType uint32 `protobuf:"varint,1,opt,name=reply_type,json=replyType,proto3" json:"reply_type,omitempty"` // 评论类型
	Oid       uint64 `protobuf:"varint,2,opt,name=oid,proto3" json:"oid,omitempty"`                              // 被评论对象id
	Content   string `protobuf:"bytes,3,opt,name=content,proto3" json:"content,omitempty"`                       // 评论内容
	RootId    uint64 `protobuf:"varint,4,opt,name=root_id,json=rootId,proto3" json:"root_id,omitempty"`          // 根评论id
	ParentId  uint64 `protobuf:"varint,5,opt,name=parent_id,json=parentId,proto3" json:"parent_id,omitempty"`    // 被回复的评论id
	ReplyUid  int64  `protobuf:"varint,6,opt,name=reply_uid,json=replyUid,proto3" json:"reply_uid,omitempty"`    // 被回复的用户id
}

func (x *AddReplyRequest) Reset() {
	*x = AddReplyRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_v1_reply_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AddReplyRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddReplyRequest) ProtoMessage() {}

func (x *AddReplyRequest) ProtoReflect() protoreflect.Message {
	mi := &file_v1_reply_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddReplyRequest.ProtoReflect.Descriptor instead.
func (*AddReplyRequest) Descriptor() ([]byte, []int) {
	return file_v1_reply_proto_rawDescGZIP(), []int{0}
}

func (x *AddReplyRequest) GetReplyType() uint32 {
	if x != nil {
		return x.ReplyType
	}
	return 0
}

func (x *AddReplyRequest) GetOid() uint64 {
	if x != nil {
		return x.Oid
	}
	return 0
}

func (x *AddReplyRequest) GetContent() string {
	if x != nil {
		return x.Content
	}
	return ""
}

func (x *AddReplyRequest) GetRootId() uint64 {
	if x != nil {
		return x.RootId
	}
	return 0
}

func (x *AddReplyRequest) GetParentId() uint64 {
	if x != nil {
		return x.ParentId
	}
	return 0
}

func (x *AddReplyRequest) GetReplyUid() int64 {
	if x != nil {
		return x.ReplyUid
	}
	return 0
}

type AddReplyResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ReplyId uint64 `protobuf:"varint,1,opt,name=reply_id,json=replyId,proto3" json:"reply_id,omitempty"` // 评论id
}

func (x *AddReplyResponse) Reset() {
	*x = AddReplyResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_v1_reply_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AddReplyResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddReplyResponse) ProtoMessage() {}

func (x *AddReplyResponse) ProtoReflect() protoreflect.Message {
	mi := &file_v1_reply_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddReplyResponse.ProtoReflect.Descriptor instead.
func (*AddReplyResponse) Descriptor() ([]byte, []int) {
	return file_v1_reply_proto_rawDescGZIP(), []int{1}
}

func (x *AddReplyResponse) GetReplyId() uint64 {
	if x != nil {
		return x.ReplyId
	}
	return 0
}

// 删除评论
type DelReplyRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ReplyId uint64 `protobuf:"varint,1,opt,name=reply_id,json=replyId,proto3" json:"reply_id,omitempty"` // 评论id
}

func (x *DelReplyRequest) Reset() {
	*x = DelReplyRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_v1_reply_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DelReplyRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DelReplyRequest) ProtoMessage() {}

func (x *DelReplyRequest) ProtoReflect() protoreflect.Message {
	mi := &file_v1_reply_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DelReplyRequest.ProtoReflect.Descriptor instead.
func (*DelReplyRequest) Descriptor() ([]byte, []int) {
	return file_v1_reply_proto_rawDescGZIP(), []int{2}
}

func (x *DelReplyRequest) GetReplyId() uint64 {
	if x != nil {
		return x.ReplyId
	}
	return 0
}

type DelReplyResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *DelReplyResponse) Reset() {
	*x = DelReplyResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_v1_reply_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DelReplyResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DelReplyResponse) ProtoMessage() {}

func (x *DelReplyResponse) ProtoReflect() protoreflect.Message {
	mi := &file_v1_reply_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DelReplyResponse.ProtoReflect.Descriptor instead.
func (*DelReplyResponse) Descriptor() ([]byte, []int) {
	return file_v1_reply_proto_rawDescGZIP(), []int{3}
}

// 点赞/取消点赞
type LikeActionRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ReplyId uint64      `protobuf:"varint,1,opt,name=reply_id,json=replyId,proto3" json:"reply_id,omitempty"`                // 评论id
	Action  ReplyAction `protobuf:"varint,2,opt,name=action,proto3,enum=comment.api.v1.ReplyAction" json:"action,omitempty"` // 取消点赞还是点赞
}

func (x *LikeActionRequest) Reset() {
	*x = LikeActionRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_v1_reply_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LikeActionRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LikeActionRequest) ProtoMessage() {}

func (x *LikeActionRequest) ProtoReflect() protoreflect.Message {
	mi := &file_v1_reply_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LikeActionRequest.ProtoReflect.Descriptor instead.
func (*LikeActionRequest) Descriptor() ([]byte, []int) {
	return file_v1_reply_proto_rawDescGZIP(), []int{4}
}

func (x *LikeActionRequest) GetReplyId() uint64 {
	if x != nil {
		return x.ReplyId
	}
	return 0
}

func (x *LikeActionRequest) GetAction() ReplyAction {
	if x != nil {
		return x.Action
	}
	return ReplyAction_REPLY_ACTION_UNDO
}

type LikeActionResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *LikeActionResponse) Reset() {
	*x = LikeActionResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_v1_reply_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LikeActionResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LikeActionResponse) ProtoMessage() {}

func (x *LikeActionResponse) ProtoReflect() protoreflect.Message {
	mi := &file_v1_reply_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LikeActionResponse.ProtoReflect.Descriptor instead.
func (*LikeActionResponse) Descriptor() ([]byte, []int) {
	return file_v1_reply_proto_rawDescGZIP(), []int{5}
}

// 点踩/取消点踩
type DislikeActionRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ReplyId uint64      `protobuf:"varint,1,opt,name=reply_id,json=replyId,proto3" json:"reply_id,omitempty"`                // 评论id
	Action  ReplyAction `protobuf:"varint,2,opt,name=action,proto3,enum=comment.api.v1.ReplyAction" json:"action,omitempty"` // 取消点踩还是点踩
}

func (x *DislikeActionRequest) Reset() {
	*x = DislikeActionRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_v1_reply_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DislikeActionRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DislikeActionRequest) ProtoMessage() {}

func (x *DislikeActionRequest) ProtoReflect() protoreflect.Message {
	mi := &file_v1_reply_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DislikeActionRequest.ProtoReflect.Descriptor instead.
func (*DislikeActionRequest) Descriptor() ([]byte, []int) {
	return file_v1_reply_proto_rawDescGZIP(), []int{6}
}

func (x *DislikeActionRequest) GetReplyId() uint64 {
	if x != nil {
		return x.ReplyId
	}
	return 0
}

func (x *DislikeActionRequest) GetAction() ReplyAction {
	if x != nil {
		return x.Action
	}
	return ReplyAction_REPLY_ACTION_UNDO
}

type DislikeActionResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *DislikeActionResponse) Reset() {
	*x = DislikeActionResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_v1_reply_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DislikeActionResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DislikeActionResponse) ProtoMessage() {}

func (x *DislikeActionResponse) ProtoReflect() protoreflect.Message {
	mi := &file_v1_reply_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DislikeActionResponse.ProtoReflect.Descriptor instead.
func (*DislikeActionResponse) Descriptor() ([]byte, []int) {
	return file_v1_reply_proto_rawDescGZIP(), []int{7}
}

// 举报
type ReportReplyRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *ReportReplyRequest) Reset() {
	*x = ReportReplyRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_v1_reply_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ReportReplyRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReportReplyRequest) ProtoMessage() {}

func (x *ReportReplyRequest) ProtoReflect() protoreflect.Message {
	mi := &file_v1_reply_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReportReplyRequest.ProtoReflect.Descriptor instead.
func (*ReportReplyRequest) Descriptor() ([]byte, []int) {
	return file_v1_reply_proto_rawDescGZIP(), []int{8}
}

type ReportReplyResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *ReportReplyResponse) Reset() {
	*x = ReportReplyResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_v1_reply_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ReportReplyResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReportReplyResponse) ProtoMessage() {}

func (x *ReportReplyResponse) ProtoReflect() protoreflect.Message {
	mi := &file_v1_reply_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReportReplyResponse.ProtoReflect.Descriptor instead.
func (*ReportReplyResponse) Descriptor() ([]byte, []int) {
	return file_v1_reply_proto_rawDescGZIP(), []int{9}
}

// 置顶
type PinReplyRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Oid    uint64      `protobuf:"varint,1,opt,name=oid,proto3" json:"oid,omitempty"` // 被评论对象id
	Rid    uint64      `protobuf:"varint,2,opt,name=rid,proto3" json:"rid,omitempty"` // 评论id
	Action ReplyAction `protobuf:"varint,3,opt,name=action,proto3,enum=comment.api.v1.ReplyAction" json:"action,omitempty"`
}

func (x *PinReplyRequest) Reset() {
	*x = PinReplyRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_v1_reply_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PinReplyRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PinReplyRequest) ProtoMessage() {}

func (x *PinReplyRequest) ProtoReflect() protoreflect.Message {
	mi := &file_v1_reply_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PinReplyRequest.ProtoReflect.Descriptor instead.
func (*PinReplyRequest) Descriptor() ([]byte, []int) {
	return file_v1_reply_proto_rawDescGZIP(), []int{10}
}

func (x *PinReplyRequest) GetOid() uint64 {
	if x != nil {
		return x.Oid
	}
	return 0
}

func (x *PinReplyRequest) GetRid() uint64 {
	if x != nil {
		return x.Rid
	}
	return 0
}

func (x *PinReplyRequest) GetAction() ReplyAction {
	if x != nil {
		return x.Action
	}
	return ReplyAction_REPLY_ACTION_UNDO
}

type PinReplyResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *PinReplyResponse) Reset() {
	*x = PinReplyResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_v1_reply_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PinReplyResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PinReplyResponse) ProtoMessage() {}

func (x *PinReplyResponse) ProtoReflect() protoreflect.Message {
	mi := &file_v1_reply_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PinReplyResponse.ProtoReflect.Descriptor instead.
func (*PinReplyResponse) Descriptor() ([]byte, []int) {
	return file_v1_reply_proto_rawDescGZIP(), []int{11}
}

// 获取评论
type PageGetReplyRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Oid    uint64   `protobuf:"varint,1,opt,name=oid,proto3" json:"oid,omitempty"`
	Cursor uint64   `protobuf:"varint,2,opt,name=cursor,proto3" json:"cursor,omitempty"`                                            // 起始游标
	SortBy SortType `protobuf:"varint,3,opt,name=sort_by,json=sortBy,proto3,enum=comment.api.v1.SortType" json:"sort_by,omitempty"` // 排序方式
}

func (x *PageGetReplyRequest) Reset() {
	*x = PageGetReplyRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_v1_reply_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PageGetReplyRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PageGetReplyRequest) ProtoMessage() {}

func (x *PageGetReplyRequest) ProtoReflect() protoreflect.Message {
	mi := &file_v1_reply_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PageGetReplyRequest.ProtoReflect.Descriptor instead.
func (*PageGetReplyRequest) Descriptor() ([]byte, []int) {
	return file_v1_reply_proto_rawDescGZIP(), []int{12}
}

func (x *PageGetReplyRequest) GetOid() uint64 {
	if x != nil {
		return x.Oid
	}
	return 0
}

func (x *PageGetReplyRequest) GetCursor() uint64 {
	if x != nil {
		return x.Cursor
	}
	return 0
}

func (x *PageGetReplyRequest) GetSortBy() SortType {
	if x != nil {
		return x.SortBy
	}
	return SortType_ByTime
}

// 评论实体
type ReplyItem struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id        uint64 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`                                 // 评论id
	Oid       uint64 `protobuf:"varint,2,opt,name=oid,proto3" json:"oid,omitempty"`                               // 被评论对象id
	ReplyType uint32 `protobuf:"varint,3,opt,name=reply_type,json=replyType,proto3" json:"reply_type,omitempty"`  // 评论类型
	Content   string `protobuf:"bytes,4,opt,name=content,proto3" json:"content,omitempty"`                        // 评论内容
	Uid       int64  `protobuf:"varint,5,opt,name=uid,proto3" json:"uid,omitempty"`                               // 评论发表用户uid
	RootId    uint64 `protobuf:"varint,6,opt,name=root_id,json=rootId,proto3" json:"root_id,omitempty"`           // 根评论id
	ParentId  uint64 `protobuf:"varint,7,opt,name=parent_id,json=parentId,proto3" json:"parent_id,omitempty"`     // 父评论id
	Ruid      int64  `protobuf:"varint,8,opt,name=ruid,proto3" json:"ruid,omitempty"`                             // 被回复的用户id
	LikeCount uint64 `protobuf:"varint,9,opt,name=like_count,json=likeCount,proto3" json:"like_count,omitempty"`  // 点赞数
	HateCount uint64 `protobuf:"varint,10,opt,name=hate_count,json=hateCount,proto3" json:"hate_count,omitempty"` // 点踩数
	Ctime     int64  `protobuf:"varint,11,opt,name=ctime,proto3" json:"ctime,omitempty"`                          // 发布时间
	Mtime     int64  `protobuf:"varint,12,opt,name=mtime,proto3" json:"mtime,omitempty"`                          // 修改时间
	Ip        string `protobuf:"bytes,13,opt,name=ip,proto3" json:"ip,omitempty"`                                 // 发布时ip地址
	IsPin     bool   `protobuf:"varint,14,opt,name=is_pin,json=isPin,proto3" json:"is_pin,omitempty"`             // 是否为置顶评论
	SubsCount uint64 `protobuf:"varint,15,opt,name=subs_count,json=subsCount,proto3" json:"subs_count,omitempty"` // 子评论数
}

func (x *ReplyItem) Reset() {
	*x = ReplyItem{}
	if protoimpl.UnsafeEnabled {
		mi := &file_v1_reply_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ReplyItem) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReplyItem) ProtoMessage() {}

func (x *ReplyItem) ProtoReflect() protoreflect.Message {
	mi := &file_v1_reply_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReplyItem.ProtoReflect.Descriptor instead.
func (*ReplyItem) Descriptor() ([]byte, []int) {
	return file_v1_reply_proto_rawDescGZIP(), []int{13}
}

func (x *ReplyItem) GetId() uint64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *ReplyItem) GetOid() uint64 {
	if x != nil {
		return x.Oid
	}
	return 0
}

func (x *ReplyItem) GetReplyType() uint32 {
	if x != nil {
		return x.ReplyType
	}
	return 0
}

func (x *ReplyItem) GetContent() string {
	if x != nil {
		return x.Content
	}
	return ""
}

func (x *ReplyItem) GetUid() int64 {
	if x != nil {
		return x.Uid
	}
	return 0
}

func (x *ReplyItem) GetRootId() uint64 {
	if x != nil {
		return x.RootId
	}
	return 0
}

func (x *ReplyItem) GetParentId() uint64 {
	if x != nil {
		return x.ParentId
	}
	return 0
}

func (x *ReplyItem) GetRuid() int64 {
	if x != nil {
		return x.Ruid
	}
	return 0
}

func (x *ReplyItem) GetLikeCount() uint64 {
	if x != nil {
		return x.LikeCount
	}
	return 0
}

func (x *ReplyItem) GetHateCount() uint64 {
	if x != nil {
		return x.HateCount
	}
	return 0
}

func (x *ReplyItem) GetCtime() int64 {
	if x != nil {
		return x.Ctime
	}
	return 0
}

func (x *ReplyItem) GetMtime() int64 {
	if x != nil {
		return x.Mtime
	}
	return 0
}

func (x *ReplyItem) GetIp() string {
	if x != nil {
		return x.Ip
	}
	return ""
}

func (x *ReplyItem) GetIsPin() bool {
	if x != nil {
		return x.IsPin
	}
	return false
}

func (x *ReplyItem) GetSubsCount() uint64 {
	if x != nil {
		return x.SubsCount
	}
	return 0
}

type PageGetReplyResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Replies    []*ReplyItem `protobuf:"bytes,1,rep,name=replies,proto3" json:"replies,omitempty"`                          // 评论数据
	NextCursor uint64       `protobuf:"varint,2,opt,name=next_cursor,json=nextCursor,proto3" json:"next_cursor,omitempty"` // 分页获取下一次请求的游标
	HasNext    bool         `protobuf:"varint,3,opt,name=has_next,json=hasNext,proto3" json:"has_next,omitempty"`          // 是否还有数据
}

func (x *PageGetReplyResponse) Reset() {
	*x = PageGetReplyResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_v1_reply_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PageGetReplyResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PageGetReplyResponse) ProtoMessage() {}

func (x *PageGetReplyResponse) ProtoReflect() protoreflect.Message {
	mi := &file_v1_reply_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PageGetReplyResponse.ProtoReflect.Descriptor instead.
func (*PageGetReplyResponse) Descriptor() ([]byte, []int) {
	return file_v1_reply_proto_rawDescGZIP(), []int{14}
}

func (x *PageGetReplyResponse) GetReplies() []*ReplyItem {
	if x != nil {
		return x.Replies
	}
	return nil
}

func (x *PageGetReplyResponse) GetNextCursor() uint64 {
	if x != nil {
		return x.NextCursor
	}
	return 0
}

func (x *PageGetReplyResponse) GetHasNext() bool {
	if x != nil {
		return x.HasNext
	}
	return false
}

// 获取子评论
type PageGetSubReplyRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Oid    uint64 `protobuf:"varint,1,opt,name=oid,proto3" json:"oid,omitempty"`                     // 被评论对象id
	RootId uint64 `protobuf:"varint,2,opt,name=root_id,json=rootId,proto3" json:"root_id,omitempty"` // 主评论id
	Cursor uint64 `protobuf:"varint,3,opt,name=cursor,proto3" json:"cursor,omitempty"`               // 起始游标
}

func (x *PageGetSubReplyRequest) Reset() {
	*x = PageGetSubReplyRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_v1_reply_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PageGetSubReplyRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PageGetSubReplyRequest) ProtoMessage() {}

func (x *PageGetSubReplyRequest) ProtoReflect() protoreflect.Message {
	mi := &file_v1_reply_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PageGetSubReplyRequest.ProtoReflect.Descriptor instead.
func (*PageGetSubReplyRequest) Descriptor() ([]byte, []int) {
	return file_v1_reply_proto_rawDescGZIP(), []int{15}
}

func (x *PageGetSubReplyRequest) GetOid() uint64 {
	if x != nil {
		return x.Oid
	}
	return 0
}

func (x *PageGetSubReplyRequest) GetRootId() uint64 {
	if x != nil {
		return x.RootId
	}
	return 0
}

func (x *PageGetSubReplyRequest) GetCursor() uint64 {
	if x != nil {
		return x.Cursor
	}
	return 0
}

type PageGetSubReplyResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Replies    []*ReplyItem `protobuf:"bytes,1,rep,name=replies,proto3" json:"replies,omitempty"`
	NextCursor uint64       `protobuf:"varint,2,opt,name=next_cursor,json=nextCursor,proto3" json:"next_cursor,omitempty"`
	HasNext    bool         `protobuf:"varint,3,opt,name=has_next,json=hasNext,proto3" json:"has_next,omitempty"`
}

func (x *PageGetSubReplyResponse) Reset() {
	*x = PageGetSubReplyResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_v1_reply_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PageGetSubReplyResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PageGetSubReplyResponse) ProtoMessage() {}

func (x *PageGetSubReplyResponse) ProtoReflect() protoreflect.Message {
	mi := &file_v1_reply_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PageGetSubReplyResponse.ProtoReflect.Descriptor instead.
func (*PageGetSubReplyResponse) Descriptor() ([]byte, []int) {
	return file_v1_reply_proto_rawDescGZIP(), []int{16}
}

func (x *PageGetSubReplyResponse) GetReplies() []*ReplyItem {
	if x != nil {
		return x.Replies
	}
	return nil
}

func (x *PageGetSubReplyResponse) GetNextCursor() uint64 {
	if x != nil {
		return x.NextCursor
	}
	return 0
}

func (x *PageGetSubReplyResponse) GetHasNext() bool {
	if x != nil {
		return x.HasNext
	}
	return false
}

type PageGetSubReplyV2Request struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Oid    uint64 `protobuf:"varint,1,opt,name=oid,proto3" json:"oid,omitempty"`                     // 被评论对象id
	RootId uint64 `protobuf:"varint,2,opt,name=root_id,json=rootId,proto3" json:"root_id,omitempty"` // 主评论id
	Page   int32  `protobuf:"varint,3,opt,name=page,proto3" json:"page,omitempty"`
	Count  int32  `protobuf:"varint,4,opt,name=count,proto3" json:"count,omitempty"`
}

func (x *PageGetSubReplyV2Request) Reset() {
	*x = PageGetSubReplyV2Request{}
	if protoimpl.UnsafeEnabled {
		mi := &file_v1_reply_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PageGetSubReplyV2Request) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PageGetSubReplyV2Request) ProtoMessage() {}

func (x *PageGetSubReplyV2Request) ProtoReflect() protoreflect.Message {
	mi := &file_v1_reply_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PageGetSubReplyV2Request.ProtoReflect.Descriptor instead.
func (*PageGetSubReplyV2Request) Descriptor() ([]byte, []int) {
	return file_v1_reply_proto_rawDescGZIP(), []int{17}
}

func (x *PageGetSubReplyV2Request) GetOid() uint64 {
	if x != nil {
		return x.Oid
	}
	return 0
}

func (x *PageGetSubReplyV2Request) GetRootId() uint64 {
	if x != nil {
		return x.RootId
	}
	return 0
}

func (x *PageGetSubReplyV2Request) GetPage() int32 {
	if x != nil {
		return x.Page
	}
	return 0
}

func (x *PageGetSubReplyV2Request) GetCount() int32 {
	if x != nil {
		return x.Count
	}
	return 0
}

type PageGetSubReplyV2Response struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Replies []*ReplyItem `protobuf:"bytes,1,rep,name=replies,proto3" json:"replies,omitempty"`
	Total   int64        `protobuf:"varint,2,opt,name=total,proto3" json:"total,omitempty"`
}

func (x *PageGetSubReplyV2Response) Reset() {
	*x = PageGetSubReplyV2Response{}
	if protoimpl.UnsafeEnabled {
		mi := &file_v1_reply_proto_msgTypes[18]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PageGetSubReplyV2Response) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PageGetSubReplyV2Response) ProtoMessage() {}

func (x *PageGetSubReplyV2Response) ProtoReflect() protoreflect.Message {
	mi := &file_v1_reply_proto_msgTypes[18]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PageGetSubReplyV2Response.ProtoReflect.Descriptor instead.
func (*PageGetSubReplyV2Response) Descriptor() ([]byte, []int) {
	return file_v1_reply_proto_rawDescGZIP(), []int{18}
}

func (x *PageGetSubReplyV2Response) GetReplies() []*ReplyItem {
	if x != nil {
		return x.Replies
	}
	return nil
}

func (x *PageGetSubReplyV2Response) GetTotal() int64 {
	if x != nil {
		return x.Total
	}
	return 0
}

// 代表主评论的子评论信息
type DetailedSubReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Items      []*ReplyItem `protobuf:"bytes,1,rep,name=items,proto3" json:"items,omitempty"` // 子评论的信息
	NextCursor uint64       `protobuf:"varint,2,opt,name=next_cursor,json=nextCursor,proto3" json:"next_cursor,omitempty"`
	HasNext    bool         `protobuf:"varint,3,opt,name=has_next,json=hasNext,proto3" json:"has_next,omitempty"`
}

func (x *DetailedSubReply) Reset() {
	*x = DetailedSubReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_v1_reply_proto_msgTypes[19]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DetailedSubReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DetailedSubReply) ProtoMessage() {}

func (x *DetailedSubReply) ProtoReflect() protoreflect.Message {
	mi := &file_v1_reply_proto_msgTypes[19]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DetailedSubReply.ProtoReflect.Descriptor instead.
func (*DetailedSubReply) Descriptor() ([]byte, []int) {
	return file_v1_reply_proto_rawDescGZIP(), []int{19}
}

func (x *DetailedSubReply) GetItems() []*ReplyItem {
	if x != nil {
		return x.Items
	}
	return nil
}

func (x *DetailedSubReply) GetNextCursor() uint64 {
	if x != nil {
		return x.NextCursor
	}
	return 0
}

func (x *DetailedSubReply) GetHasNext() bool {
	if x != nil {
		return x.HasNext
	}
	return false
}

// 详细的主评论的详细信息，会包含子评论
type DetailedReplyItem struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Root       *ReplyItem        `protobuf:"bytes,1,opt,name=root,proto3" json:"root,omitempty"`                               // 主评论本身的信息
	SubReplies *DetailedSubReply `protobuf:"bytes,2,opt,name=sub_replies,json=subReplies,proto3" json:"sub_replies,omitempty"` // 子评论的信息
}

func (x *DetailedReplyItem) Reset() {
	*x = DetailedReplyItem{}
	if protoimpl.UnsafeEnabled {
		mi := &file_v1_reply_proto_msgTypes[20]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DetailedReplyItem) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DetailedReplyItem) ProtoMessage() {}

func (x *DetailedReplyItem) ProtoReflect() protoreflect.Message {
	mi := &file_v1_reply_proto_msgTypes[20]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DetailedReplyItem.ProtoReflect.Descriptor instead.
func (*DetailedReplyItem) Descriptor() ([]byte, []int) {
	return file_v1_reply_proto_rawDescGZIP(), []int{20}
}

func (x *DetailedReplyItem) GetRoot() *ReplyItem {
	if x != nil {
		return x.Root
	}
	return nil
}

func (x *DetailedReplyItem) GetSubReplies() *DetailedSubReply {
	if x != nil {
		return x.SubReplies
	}
	return nil
}

type PageGetDetailedReplyRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Oid    uint64   `protobuf:"varint,1,opt,name=oid,proto3" json:"oid,omitempty"`
	Cursor uint64   `protobuf:"varint,2,opt,name=cursor,proto3" json:"cursor,omitempty"`                                            // 起始游标
	SortBy SortType `protobuf:"varint,3,opt,name=sort_by,json=sortBy,proto3,enum=comment.api.v1.SortType" json:"sort_by,omitempty"` // 排序方式
}

func (x *PageGetDetailedReplyRequest) Reset() {
	*x = PageGetDetailedReplyRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_v1_reply_proto_msgTypes[21]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PageGetDetailedReplyRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PageGetDetailedReplyRequest) ProtoMessage() {}

func (x *PageGetDetailedReplyRequest) ProtoReflect() protoreflect.Message {
	mi := &file_v1_reply_proto_msgTypes[21]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PageGetDetailedReplyRequest.ProtoReflect.Descriptor instead.
func (*PageGetDetailedReplyRequest) Descriptor() ([]byte, []int) {
	return file_v1_reply_proto_rawDescGZIP(), []int{21}
}

func (x *PageGetDetailedReplyRequest) GetOid() uint64 {
	if x != nil {
		return x.Oid
	}
	return 0
}

func (x *PageGetDetailedReplyRequest) GetCursor() uint64 {
	if x != nil {
		return x.Cursor
	}
	return 0
}

func (x *PageGetDetailedReplyRequest) GetSortBy() SortType {
	if x != nil {
		return x.SortBy
	}
	return SortType_ByTime
}

type PageGetDetailedReplyResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Replies    []*DetailedReplyItem `protobuf:"bytes,1,rep,name=replies,proto3" json:"replies,omitempty"` // 主评论
	NextCursor uint64               `protobuf:"varint,2,opt,name=next_cursor,json=nextCursor,proto3" json:"next_cursor,omitempty"`
	HasNext    bool                 `protobuf:"varint,3,opt,name=has_next,json=hasNext,proto3" json:"has_next,omitempty"`
}

func (x *PageGetDetailedReplyResponse) Reset() {
	*x = PageGetDetailedReplyResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_v1_reply_proto_msgTypes[22]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PageGetDetailedReplyResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PageGetDetailedReplyResponse) ProtoMessage() {}

func (x *PageGetDetailedReplyResponse) ProtoReflect() protoreflect.Message {
	mi := &file_v1_reply_proto_msgTypes[22]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PageGetDetailedReplyResponse.ProtoReflect.Descriptor instead.
func (*PageGetDetailedReplyResponse) Descriptor() ([]byte, []int) {
	return file_v1_reply_proto_rawDescGZIP(), []int{22}
}

func (x *PageGetDetailedReplyResponse) GetReplies() []*DetailedReplyItem {
	if x != nil {
		return x.Replies
	}
	return nil
}

func (x *PageGetDetailedReplyResponse) GetNextCursor() uint64 {
	if x != nil {
		return x.NextCursor
	}
	return 0
}

func (x *PageGetDetailedReplyResponse) GetHasNext() bool {
	if x != nil {
		return x.HasNext
	}
	return false
}

type PageGetDetailedReplyV2Request struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Oid    uint64   `protobuf:"varint,1,opt,name=oid,proto3" json:"oid,omitempty"`
	Cursor uint64   `protobuf:"varint,2,opt,name=cursor,proto3" json:"cursor,omitempty"`                                            // 起始游标
	SortBy SortType `protobuf:"varint,3,opt,name=sort_by,json=sortBy,proto3,enum=comment.api.v1.SortType" json:"sort_by,omitempty"` // 排序方式
}

func (x *PageGetDetailedReplyV2Request) Reset() {
	*x = PageGetDetailedReplyV2Request{}
	if protoimpl.UnsafeEnabled {
		mi := &file_v1_reply_proto_msgTypes[23]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PageGetDetailedReplyV2Request) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PageGetDetailedReplyV2Request) ProtoMessage() {}

func (x *PageGetDetailedReplyV2Request) ProtoReflect() protoreflect.Message {
	mi := &file_v1_reply_proto_msgTypes[23]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PageGetDetailedReplyV2Request.ProtoReflect.Descriptor instead.
func (*PageGetDetailedReplyV2Request) Descriptor() ([]byte, []int) {
	return file_v1_reply_proto_rawDescGZIP(), []int{23}
}

func (x *PageGetDetailedReplyV2Request) GetOid() uint64 {
	if x != nil {
		return x.Oid
	}
	return 0
}

func (x *PageGetDetailedReplyV2Request) GetCursor() uint64 {
	if x != nil {
		return x.Cursor
	}
	return 0
}

func (x *PageGetDetailedReplyV2Request) GetSortBy() SortType {
	if x != nil {
		return x.SortBy
	}
	return SortType_ByTime
}

// 代表主评论的子评论信息
type DetailedSubReplyV2 struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Items []*ReplyItem `protobuf:"bytes,1,rep,name=items,proto3" json:"items,omitempty"`  // 子评论的信息
	Total int64        `protobuf:"varint,2,opt,name=total,proto3" json:"total,omitempty"` // 子评论总数量
}

func (x *DetailedSubReplyV2) Reset() {
	*x = DetailedSubReplyV2{}
	if protoimpl.UnsafeEnabled {
		mi := &file_v1_reply_proto_msgTypes[24]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DetailedSubReplyV2) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DetailedSubReplyV2) ProtoMessage() {}

func (x *DetailedSubReplyV2) ProtoReflect() protoreflect.Message {
	mi := &file_v1_reply_proto_msgTypes[24]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DetailedSubReplyV2.ProtoReflect.Descriptor instead.
func (*DetailedSubReplyV2) Descriptor() ([]byte, []int) {
	return file_v1_reply_proto_rawDescGZIP(), []int{24}
}

func (x *DetailedSubReplyV2) GetItems() []*ReplyItem {
	if x != nil {
		return x.Items
	}
	return nil
}

func (x *DetailedSubReplyV2) GetTotal() int64 {
	if x != nil {
		return x.Total
	}
	return 0
}

// 详细的主评论的详细信息，会包含子评论
type DetailedReplyItemV2 struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Root       *ReplyItem          `protobuf:"bytes,1,opt,name=root,proto3" json:"root,omitempty"`                               // 主评论本身的信息
	SubReplies *DetailedSubReplyV2 `protobuf:"bytes,2,opt,name=sub_replies,json=subReplies,proto3" json:"sub_replies,omitempty"` // 子评论的信息
}

func (x *DetailedReplyItemV2) Reset() {
	*x = DetailedReplyItemV2{}
	if protoimpl.UnsafeEnabled {
		mi := &file_v1_reply_proto_msgTypes[25]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DetailedReplyItemV2) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DetailedReplyItemV2) ProtoMessage() {}

func (x *DetailedReplyItemV2) ProtoReflect() protoreflect.Message {
	mi := &file_v1_reply_proto_msgTypes[25]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DetailedReplyItemV2.ProtoReflect.Descriptor instead.
func (*DetailedReplyItemV2) Descriptor() ([]byte, []int) {
	return file_v1_reply_proto_rawDescGZIP(), []int{25}
}

func (x *DetailedReplyItemV2) GetRoot() *ReplyItem {
	if x != nil {
		return x.Root
	}
	return nil
}

func (x *DetailedReplyItemV2) GetSubReplies() *DetailedSubReplyV2 {
	if x != nil {
		return x.SubReplies
	}
	return nil
}

type PageGetDetailedReplyV2Response struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Replies    []*DetailedReplyItemV2 `protobuf:"bytes,1,rep,name=replies,proto3" json:"replies,omitempty"` // 主评论
	NextCursor uint64                 `protobuf:"varint,2,opt,name=next_cursor,json=nextCursor,proto3" json:"next_cursor,omitempty"`
	HasNext    bool                   `protobuf:"varint,3,opt,name=has_next,json=hasNext,proto3" json:"has_next,omitempty"`
}

func (x *PageGetDetailedReplyV2Response) Reset() {
	*x = PageGetDetailedReplyV2Response{}
	if protoimpl.UnsafeEnabled {
		mi := &file_v1_reply_proto_msgTypes[26]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PageGetDetailedReplyV2Response) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PageGetDetailedReplyV2Response) ProtoMessage() {}

func (x *PageGetDetailedReplyV2Response) ProtoReflect() protoreflect.Message {
	mi := &file_v1_reply_proto_msgTypes[26]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PageGetDetailedReplyV2Response.ProtoReflect.Descriptor instead.
func (*PageGetDetailedReplyV2Response) Descriptor() ([]byte, []int) {
	return file_v1_reply_proto_rawDescGZIP(), []int{26}
}

func (x *PageGetDetailedReplyV2Response) GetReplies() []*DetailedReplyItemV2 {
	if x != nil {
		return x.Replies
	}
	return nil
}

func (x *PageGetDetailedReplyV2Response) GetNextCursor() uint64 {
	if x != nil {
		return x.NextCursor
	}
	return 0
}

func (x *PageGetDetailedReplyV2Response) GetHasNext() bool {
	if x != nil {
		return x.HasNext
	}
	return false
}

// 获取置顶评论
type GetPinnedReplyRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Oid uint64 `protobuf:"varint,1,opt,name=oid,proto3" json:"oid,omitempty"` // 被评论对象id
}

func (x *GetPinnedReplyRequest) Reset() {
	*x = GetPinnedReplyRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_v1_reply_proto_msgTypes[27]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetPinnedReplyRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetPinnedReplyRequest) ProtoMessage() {}

func (x *GetPinnedReplyRequest) ProtoReflect() protoreflect.Message {
	mi := &file_v1_reply_proto_msgTypes[27]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetPinnedReplyRequest.ProtoReflect.Descriptor instead.
func (*GetPinnedReplyRequest) Descriptor() ([]byte, []int) {
	return file_v1_reply_proto_rawDescGZIP(), []int{27}
}

func (x *GetPinnedReplyRequest) GetOid() uint64 {
	if x != nil {
		return x.Oid
	}
	return 0
}

type GetPinnedReplyResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Reply *DetailedReplyItem `protobuf:"bytes,1,opt,name=reply,proto3" json:"reply,omitempty"` // 置顶评论信息
}

func (x *GetPinnedReplyResponse) Reset() {
	*x = GetPinnedReplyResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_v1_reply_proto_msgTypes[28]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetPinnedReplyResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetPinnedReplyResponse) ProtoMessage() {}

func (x *GetPinnedReplyResponse) ProtoReflect() protoreflect.Message {
	mi := &file_v1_reply_proto_msgTypes[28]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetPinnedReplyResponse.ProtoReflect.Descriptor instead.
func (*GetPinnedReplyResponse) Descriptor() ([]byte, []int) {
	return file_v1_reply_proto_rawDescGZIP(), []int{28}
}

func (x *GetPinnedReplyResponse) GetReply() *DetailedReplyItem {
	if x != nil {
		return x.Reply
	}
	return nil
}

// 获取被评论对象的评论数量
type CountReplyRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Oid uint64 `protobuf:"varint,1,opt,name=oid,proto3" json:"oid,omitempty"` // 被评论对象id
}

func (x *CountReplyRequest) Reset() {
	*x = CountReplyRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_v1_reply_proto_msgTypes[29]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CountReplyRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CountReplyRequest) ProtoMessage() {}

func (x *CountReplyRequest) ProtoReflect() protoreflect.Message {
	mi := &file_v1_reply_proto_msgTypes[29]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CountReplyRequest.ProtoReflect.Descriptor instead.
func (*CountReplyRequest) Descriptor() ([]byte, []int) {
	return file_v1_reply_proto_rawDescGZIP(), []int{29}
}

func (x *CountReplyRequest) GetOid() uint64 {
	if x != nil {
		return x.Oid
	}
	return 0
}

type CountReplyResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	NumReply uint64 `protobuf:"varint,1,opt,name=num_reply,json=numReply,proto3" json:"num_reply,omitempty"` // 评论数量
}

func (x *CountReplyResponse) Reset() {
	*x = CountReplyResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_v1_reply_proto_msgTypes[30]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CountReplyResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CountReplyResponse) ProtoMessage() {}

func (x *CountReplyResponse) ProtoReflect() protoreflect.Message {
	mi := &file_v1_reply_proto_msgTypes[30]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CountReplyResponse.ProtoReflect.Descriptor instead.
func (*CountReplyResponse) Descriptor() ([]byte, []int) {
	return file_v1_reply_proto_rawDescGZIP(), []int{30}
}

func (x *CountReplyResponse) GetNumReply() uint64 {
	if x != nil {
		return x.NumReply
	}
	return 0
}

type BatchCountReplyRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Oids []uint64 `protobuf:"varint,1,rep,packed,name=oids,proto3" json:"oids,omitempty"`
}

func (x *BatchCountReplyRequest) Reset() {
	*x = BatchCountReplyRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_v1_reply_proto_msgTypes[31]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BatchCountReplyRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BatchCountReplyRequest) ProtoMessage() {}

func (x *BatchCountReplyRequest) ProtoReflect() protoreflect.Message {
	mi := &file_v1_reply_proto_msgTypes[31]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BatchCountReplyRequest.ProtoReflect.Descriptor instead.
func (*BatchCountReplyRequest) Descriptor() ([]byte, []int) {
	return file_v1_reply_proto_rawDescGZIP(), []int{31}
}

func (x *BatchCountReplyRequest) GetOids() []uint64 {
	if x != nil {
		return x.Oids
	}
	return nil
}

type BatchCountReplyResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Numbers map[uint64]uint64 `protobuf:"bytes,1,rep,name=numbers,proto3" json:"numbers,omitempty" protobuf_key:"varint,1,opt,name=key,proto3" protobuf_val:"varint,2,opt,name=value,proto3"`
}

func (x *BatchCountReplyResponse) Reset() {
	*x = BatchCountReplyResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_v1_reply_proto_msgTypes[32]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BatchCountReplyResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BatchCountReplyResponse) ProtoMessage() {}

func (x *BatchCountReplyResponse) ProtoReflect() protoreflect.Message {
	mi := &file_v1_reply_proto_msgTypes[32]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BatchCountReplyResponse.ProtoReflect.Descriptor instead.
func (*BatchCountReplyResponse) Descriptor() ([]byte, []int) {
	return file_v1_reply_proto_rawDescGZIP(), []int{32}
}

func (x *BatchCountReplyResponse) GetNumbers() map[uint64]uint64 {
	if x != nil {
		return x.Numbers
	}
	return nil
}

type GetReplyLikeCountRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ReplyId uint64 `protobuf:"varint,1,opt,name=reply_id,json=replyId,proto3" json:"reply_id,omitempty"` // 评论id
}

func (x *GetReplyLikeCountRequest) Reset() {
	*x = GetReplyLikeCountRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_v1_reply_proto_msgTypes[33]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetReplyLikeCountRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetReplyLikeCountRequest) ProtoMessage() {}

func (x *GetReplyLikeCountRequest) ProtoReflect() protoreflect.Message {
	mi := &file_v1_reply_proto_msgTypes[33]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetReplyLikeCountRequest.ProtoReflect.Descriptor instead.
func (*GetReplyLikeCountRequest) Descriptor() ([]byte, []int) {
	return file_v1_reply_proto_rawDescGZIP(), []int{33}
}

func (x *GetReplyLikeCountRequest) GetReplyId() uint64 {
	if x != nil {
		return x.ReplyId
	}
	return 0
}

type GetReplyLikeCountResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ReplyId uint64 `protobuf:"varint,1,opt,name=reply_id,json=replyId,proto3" json:"reply_id,omitempty"`
	Count   uint64 `protobuf:"varint,2,opt,name=count,proto3" json:"count,omitempty"` // 点赞数量
}

func (x *GetReplyLikeCountResponse) Reset() {
	*x = GetReplyLikeCountResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_v1_reply_proto_msgTypes[34]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetReplyLikeCountResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetReplyLikeCountResponse) ProtoMessage() {}

func (x *GetReplyLikeCountResponse) ProtoReflect() protoreflect.Message {
	mi := &file_v1_reply_proto_msgTypes[34]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetReplyLikeCountResponse.ProtoReflect.Descriptor instead.
func (*GetReplyLikeCountResponse) Descriptor() ([]byte, []int) {
	return file_v1_reply_proto_rawDescGZIP(), []int{34}
}

func (x *GetReplyLikeCountResponse) GetReplyId() uint64 {
	if x != nil {
		return x.ReplyId
	}
	return 0
}

func (x *GetReplyLikeCountResponse) GetCount() uint64 {
	if x != nil {
		return x.Count
	}
	return 0
}

type GetReplyDislikeCountRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ReplyId uint64 `protobuf:"varint,1,opt,name=reply_id,json=replyId,proto3" json:"reply_id,omitempty"` // 评论id
}

func (x *GetReplyDislikeCountRequest) Reset() {
	*x = GetReplyDislikeCountRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_v1_reply_proto_msgTypes[35]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetReplyDislikeCountRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetReplyDislikeCountRequest) ProtoMessage() {}

func (x *GetReplyDislikeCountRequest) ProtoReflect() protoreflect.Message {
	mi := &file_v1_reply_proto_msgTypes[35]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetReplyDislikeCountRequest.ProtoReflect.Descriptor instead.
func (*GetReplyDislikeCountRequest) Descriptor() ([]byte, []int) {
	return file_v1_reply_proto_rawDescGZIP(), []int{35}
}

func (x *GetReplyDislikeCountRequest) GetReplyId() uint64 {
	if x != nil {
		return x.ReplyId
	}
	return 0
}

type GetReplyDislikeCountResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ReplyId uint64 `protobuf:"varint,1,opt,name=reply_id,json=replyId,proto3" json:"reply_id,omitempty"`
	Count   uint64 `protobuf:"varint,2,opt,name=count,proto3" json:"count,omitempty"` // 点赞数量
}

func (x *GetReplyDislikeCountResponse) Reset() {
	*x = GetReplyDislikeCountResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_v1_reply_proto_msgTypes[36]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetReplyDislikeCountResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetReplyDislikeCountResponse) ProtoMessage() {}

func (x *GetReplyDislikeCountResponse) ProtoReflect() protoreflect.Message {
	mi := &file_v1_reply_proto_msgTypes[36]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetReplyDislikeCountResponse.ProtoReflect.Descriptor instead.
func (*GetReplyDislikeCountResponse) Descriptor() ([]byte, []int) {
	return file_v1_reply_proto_rawDescGZIP(), []int{36}
}

func (x *GetReplyDislikeCountResponse) GetReplyId() uint64 {
	if x != nil {
		return x.ReplyId
	}
	return 0
}

func (x *GetReplyDislikeCountResponse) GetCount() uint64 {
	if x != nil {
		return x.Count
	}
	return 0
}

type CheckUserOnObjectRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Oid uint64 `protobuf:"varint,1,opt,name=oid,proto3" json:"oid,omitempty"` // 被评论对象id
	Uid int64  `protobuf:"varint,2,opt,name=uid,proto3" json:"uid,omitempty"` // 用户id
}

func (x *CheckUserOnObjectRequest) Reset() {
	*x = CheckUserOnObjectRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_v1_reply_proto_msgTypes[37]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CheckUserOnObjectRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CheckUserOnObjectRequest) ProtoMessage() {}

func (x *CheckUserOnObjectRequest) ProtoReflect() protoreflect.Message {
	mi := &file_v1_reply_proto_msgTypes[37]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CheckUserOnObjectRequest.ProtoReflect.Descriptor instead.
func (*CheckUserOnObjectRequest) Descriptor() ([]byte, []int) {
	return file_v1_reply_proto_rawDescGZIP(), []int{37}
}

func (x *CheckUserOnObjectRequest) GetOid() uint64 {
	if x != nil {
		return x.Oid
	}
	return 0
}

func (x *CheckUserOnObjectRequest) GetUid() int64 {
	if x != nil {
		return x.Uid
	}
	return 0
}

type CheckUserOnObjectResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Result *OidCommented `protobuf:"bytes,1,opt,name=result,proto3" json:"result,omitempty"`
}

func (x *CheckUserOnObjectResponse) Reset() {
	*x = CheckUserOnObjectResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_v1_reply_proto_msgTypes[38]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CheckUserOnObjectResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CheckUserOnObjectResponse) ProtoMessage() {}

func (x *CheckUserOnObjectResponse) ProtoReflect() protoreflect.Message {
	mi := &file_v1_reply_proto_msgTypes[38]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CheckUserOnObjectResponse.ProtoReflect.Descriptor instead.
func (*CheckUserOnObjectResponse) Descriptor() ([]byte, []int) {
	return file_v1_reply_proto_rawDescGZIP(), []int{38}
}

func (x *CheckUserOnObjectResponse) GetResult() *OidCommented {
	if x != nil {
		return x.Result
	}
	return nil
}

type BatchCheckUserOnObjectRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Mappings map[int64]*BatchCheckUserOnObjectRequest_Objects `protobuf:"bytes,1,rep,name=mappings,proto3" json:"mappings,omitempty" protobuf_key:"varint,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
}

func (x *BatchCheckUserOnObjectRequest) Reset() {
	*x = BatchCheckUserOnObjectRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_v1_reply_proto_msgTypes[39]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BatchCheckUserOnObjectRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BatchCheckUserOnObjectRequest) ProtoMessage() {}

func (x *BatchCheckUserOnObjectRequest) ProtoReflect() protoreflect.Message {
	mi := &file_v1_reply_proto_msgTypes[39]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BatchCheckUserOnObjectRequest.ProtoReflect.Descriptor instead.
func (*BatchCheckUserOnObjectRequest) Descriptor() ([]byte, []int) {
	return file_v1_reply_proto_rawDescGZIP(), []int{39}
}

func (x *BatchCheckUserOnObjectRequest) GetMappings() map[int64]*BatchCheckUserOnObjectRequest_Objects {
	if x != nil {
		return x.Mappings
	}
	return nil
}

type OidCommented struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Oid       uint64 `protobuf:"varint,1,opt,name=oid,proto3" json:"oid,omitempty"`
	Commented bool   `protobuf:"varint,2,opt,name=commented,proto3" json:"commented,omitempty"`
}

func (x *OidCommented) Reset() {
	*x = OidCommented{}
	if protoimpl.UnsafeEnabled {
		mi := &file_v1_reply_proto_msgTypes[40]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *OidCommented) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OidCommented) ProtoMessage() {}

func (x *OidCommented) ProtoReflect() protoreflect.Message {
	mi := &file_v1_reply_proto_msgTypes[40]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OidCommented.ProtoReflect.Descriptor instead.
func (*OidCommented) Descriptor() ([]byte, []int) {
	return file_v1_reply_proto_rawDescGZIP(), []int{40}
}

func (x *OidCommented) GetOid() uint64 {
	if x != nil {
		return x.Oid
	}
	return 0
}

func (x *OidCommented) GetCommented() bool {
	if x != nil {
		return x.Commented
	}
	return false
}

type OidCommentedList struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	List []*OidCommented `protobuf:"bytes,1,rep,name=list,proto3" json:"list,omitempty"`
}

func (x *OidCommentedList) Reset() {
	*x = OidCommentedList{}
	if protoimpl.UnsafeEnabled {
		mi := &file_v1_reply_proto_msgTypes[41]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *OidCommentedList) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OidCommentedList) ProtoMessage() {}

func (x *OidCommentedList) ProtoReflect() protoreflect.Message {
	mi := &file_v1_reply_proto_msgTypes[41]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OidCommentedList.ProtoReflect.Descriptor instead.
func (*OidCommentedList) Descriptor() ([]byte, []int) {
	return file_v1_reply_proto_rawDescGZIP(), []int{41}
}

func (x *OidCommentedList) GetList() []*OidCommented {
	if x != nil {
		return x.List
	}
	return nil
}

type BatchCheckUserOnObjectResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Results map[int64]*OidCommentedList `protobuf:"bytes,1,rep,name=results,proto3" json:"results,omitempty" protobuf_key:"varint,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
}

func (x *BatchCheckUserOnObjectResponse) Reset() {
	*x = BatchCheckUserOnObjectResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_v1_reply_proto_msgTypes[42]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BatchCheckUserOnObjectResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BatchCheckUserOnObjectResponse) ProtoMessage() {}

func (x *BatchCheckUserOnObjectResponse) ProtoReflect() protoreflect.Message {
	mi := &file_v1_reply_proto_msgTypes[42]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BatchCheckUserOnObjectResponse.ProtoReflect.Descriptor instead.
func (*BatchCheckUserOnObjectResponse) Descriptor() ([]byte, []int) {
	return file_v1_reply_proto_rawDescGZIP(), []int{42}
}

func (x *BatchCheckUserOnObjectResponse) GetResults() map[int64]*OidCommentedList {
	if x != nil {
		return x.Results
	}
	return nil
}

type BatchCheckUserOnObjectRequest_Objects struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Oids []uint64 `protobuf:"varint,1,rep,packed,name=oids,proto3" json:"oids,omitempty"`
}

func (x *BatchCheckUserOnObjectRequest_Objects) Reset() {
	*x = BatchCheckUserOnObjectRequest_Objects{}
	if protoimpl.UnsafeEnabled {
		mi := &file_v1_reply_proto_msgTypes[44]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BatchCheckUserOnObjectRequest_Objects) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BatchCheckUserOnObjectRequest_Objects) ProtoMessage() {}

func (x *BatchCheckUserOnObjectRequest_Objects) ProtoReflect() protoreflect.Message {
	mi := &file_v1_reply_proto_msgTypes[44]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BatchCheckUserOnObjectRequest_Objects.ProtoReflect.Descriptor instead.
func (*BatchCheckUserOnObjectRequest_Objects) Descriptor() ([]byte, []int) {
	return file_v1_reply_proto_rawDescGZIP(), []int{39, 0}
}

func (x *BatchCheckUserOnObjectRequest_Objects) GetOids() []uint64 {
	if x != nil {
		return x.Oids
	}
	return nil
}

var File_v1_reply_proto protoreflect.FileDescriptor

var file_v1_reply_proto_rawDesc = []byte{
	0x0a, 0x0e, 0x76, 0x31, 0x2f, 0x72, 0x65, 0x70, 0x6c, 0x79, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x12, 0x0e, 0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x31,
	0x1a, 0x1b, 0x62, 0x75, 0x66, 0x2f, 0x76, 0x61, 0x6c, 0x69, 0x64, 0x61, 0x74, 0x65, 0x2f, 0x76,
	0x61, 0x6c, 0x69, 0x64, 0x61, 0x74, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0xaf, 0x01,
	0x0a, 0x0f, 0x41, 0x64, 0x64, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x12, 0x1d, 0x0a, 0x0a, 0x72, 0x65, 0x70, 0x6c, 0x79, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x09, 0x72, 0x65, 0x70, 0x6c, 0x79, 0x54, 0x79, 0x70, 0x65,
	0x12, 0x10, 0x0a, 0x03, 0x6f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x04, 0x52, 0x03, 0x6f,
	0x69, 0x64, 0x12, 0x18, 0x0a, 0x07, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x07, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x12, 0x17, 0x0a, 0x07,
	0x72, 0x6f, 0x6f, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x04, 0x52, 0x06, 0x72,
	0x6f, 0x6f, 0x74, 0x49, 0x64, 0x12, 0x1b, 0x0a, 0x09, 0x70, 0x61, 0x72, 0x65, 0x6e, 0x74, 0x5f,
	0x69, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x04, 0x52, 0x08, 0x70, 0x61, 0x72, 0x65, 0x6e, 0x74,
	0x49, 0x64, 0x12, 0x1b, 0x0a, 0x09, 0x72, 0x65, 0x70, 0x6c, 0x79, 0x5f, 0x75, 0x69, 0x64, 0x18,
	0x06, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x72, 0x65, 0x70, 0x6c, 0x79, 0x55, 0x69, 0x64, 0x22,
	0x2d, 0x0a, 0x10, 0x41, 0x64, 0x64, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x12, 0x19, 0x0a, 0x08, 0x72, 0x65, 0x70, 0x6c, 0x79, 0x5f, 0x69, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x07, 0x72, 0x65, 0x70, 0x6c, 0x79, 0x49, 0x64, 0x22, 0x35,
	0x0a, 0x0f, 0x44, 0x65, 0x6c, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x12, 0x22, 0x0a, 0x08, 0x72, 0x65, 0x70, 0x6c, 0x79, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x04, 0x42, 0x07, 0xba, 0x48, 0x04, 0x32, 0x02, 0x20, 0x00, 0x52, 0x07, 0x72, 0x65,
	0x70, 0x6c, 0x79, 0x49, 0x64, 0x22, 0x12, 0x0a, 0x10, 0x44, 0x65, 0x6c, 0x52, 0x65, 0x70, 0x6c,
	0x79, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x6c, 0x0a, 0x11, 0x4c, 0x69, 0x6b,
	0x65, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x22,
	0x0a, 0x08, 0x72, 0x65, 0x70, 0x6c, 0x79, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04,
	0x42, 0x07, 0xba, 0x48, 0x04, 0x32, 0x02, 0x20, 0x00, 0x52, 0x07, 0x72, 0x65, 0x70, 0x6c, 0x79,
	0x49, 0x64, 0x12, 0x33, 0x0a, 0x06, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x0e, 0x32, 0x1b, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x2e, 0x61, 0x70, 0x69,
	0x2e, 0x76, 0x31, 0x2e, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52,
	0x06, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0x14, 0x0a, 0x12, 0x4c, 0x69, 0x6b, 0x65, 0x41,
	0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x6f, 0x0a,
	0x14, 0x44, 0x69, 0x73, 0x6c, 0x69, 0x6b, 0x65, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x22, 0x0a, 0x08, 0x72, 0x65, 0x70, 0x6c, 0x79, 0x5f, 0x69,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x42, 0x07, 0xba, 0x48, 0x04, 0x32, 0x02, 0x20, 0x00,
	0x52, 0x07, 0x72, 0x65, 0x70, 0x6c, 0x79, 0x49, 0x64, 0x12, 0x33, 0x0a, 0x06, 0x61, 0x63, 0x74,
	0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x1b, 0x2e, 0x63, 0x6f, 0x6d, 0x6d,
	0x65, 0x6e, 0x74, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x31, 0x2e, 0x52, 0x65, 0x70, 0x6c, 0x79,
	0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x06, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0x17,
	0x0a, 0x15, 0x44, 0x69, 0x73, 0x6c, 0x69, 0x6b, 0x65, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x14, 0x0a, 0x12, 0x52, 0x65, 0x70, 0x6f, 0x72,
	0x74, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x22, 0x15, 0x0a,
	0x13, 0x52, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x22, 0x7c, 0x0a, 0x0f, 0x50, 0x69, 0x6e, 0x52, 0x65, 0x70, 0x6c, 0x79,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x19, 0x0a, 0x03, 0x6f, 0x69, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x04, 0x42, 0x07, 0xba, 0x48, 0x04, 0x32, 0x02, 0x20, 0x00, 0x52, 0x03, 0x6f,
	0x69, 0x64, 0x12, 0x19, 0x0a, 0x03, 0x72, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x04, 0x42,
	0x07, 0xba, 0x48, 0x04, 0x32, 0x02, 0x20, 0x00, 0x52, 0x03, 0x72, 0x69, 0x64, 0x12, 0x33, 0x0a,
	0x06, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x1b, 0x2e,
	0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x31, 0x2e, 0x52,
	0x65, 0x70, 0x6c, 0x79, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x06, 0x61, 0x63, 0x74, 0x69,
	0x6f, 0x6e, 0x22, 0x12, 0x0a, 0x10, 0x50, 0x69, 0x6e, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x7b, 0x0a, 0x13, 0x50, 0x61, 0x67, 0x65, 0x47, 0x65,
	0x74, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x19, 0x0a,
	0x03, 0x6f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x42, 0x07, 0xba, 0x48, 0x04, 0x32,
	0x02, 0x20, 0x00, 0x52, 0x03, 0x6f, 0x69, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x63, 0x75, 0x72, 0x73,
	0x6f, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x04, 0x52, 0x06, 0x63, 0x75, 0x72, 0x73, 0x6f, 0x72,
	0x12, 0x31, 0x0a, 0x07, 0x73, 0x6f, 0x72, 0x74, 0x5f, 0x62, 0x79, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x0e, 0x32, 0x18, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x2e, 0x61, 0x70, 0x69, 0x2e,
	0x76, 0x31, 0x2e, 0x53, 0x6f, 0x72, 0x74, 0x54, 0x79, 0x70, 0x65, 0x52, 0x06, 0x73, 0x6f, 0x72,
	0x74, 0x42, 0x79, 0x22, 0xf2, 0x02, 0x0a, 0x09, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x49, 0x74, 0x65,
	0x6d, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x02, 0x69,
	0x64, 0x12, 0x10, 0x0a, 0x03, 0x6f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x04, 0x52, 0x03,
	0x6f, 0x69, 0x64, 0x12, 0x1d, 0x0a, 0x0a, 0x72, 0x65, 0x70, 0x6c, 0x79, 0x5f, 0x74, 0x79, 0x70,
	0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x09, 0x72, 0x65, 0x70, 0x6c, 0x79, 0x54, 0x79,
	0x70, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x07, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x12, 0x10, 0x0a, 0x03,
	0x75, 0x69, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x03, 0x52, 0x03, 0x75, 0x69, 0x64, 0x12, 0x17,
	0x0a, 0x07, 0x72, 0x6f, 0x6f, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x06, 0x20, 0x01, 0x28, 0x04, 0x52,
	0x06, 0x72, 0x6f, 0x6f, 0x74, 0x49, 0x64, 0x12, 0x1b, 0x0a, 0x09, 0x70, 0x61, 0x72, 0x65, 0x6e,
	0x74, 0x5f, 0x69, 0x64, 0x18, 0x07, 0x20, 0x01, 0x28, 0x04, 0x52, 0x08, 0x70, 0x61, 0x72, 0x65,
	0x6e, 0x74, 0x49, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x72, 0x75, 0x69, 0x64, 0x18, 0x08, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x04, 0x72, 0x75, 0x69, 0x64, 0x12, 0x1d, 0x0a, 0x0a, 0x6c, 0x69, 0x6b, 0x65,
	0x5f, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x09, 0x20, 0x01, 0x28, 0x04, 0x52, 0x09, 0x6c, 0x69,
	0x6b, 0x65, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x1d, 0x0a, 0x0a, 0x68, 0x61, 0x74, 0x65, 0x5f,
	0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x04, 0x52, 0x09, 0x68, 0x61, 0x74,
	0x65, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x63, 0x74, 0x69, 0x6d, 0x65, 0x18,
	0x0b, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x63, 0x74, 0x69, 0x6d, 0x65, 0x12, 0x14, 0x0a, 0x05,
	0x6d, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x6d, 0x74, 0x69,
	0x6d, 0x65, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x70, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02,
	0x69, 0x70, 0x12, 0x15, 0x0a, 0x06, 0x69, 0x73, 0x5f, 0x70, 0x69, 0x6e, 0x18, 0x0e, 0x20, 0x01,
	0x28, 0x08, 0x52, 0x05, 0x69, 0x73, 0x50, 0x69, 0x6e, 0x12, 0x1d, 0x0a, 0x0a, 0x73, 0x75, 0x62,
	0x73, 0x5f, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x0f, 0x20, 0x01, 0x28, 0x04, 0x52, 0x09, 0x73,
	0x75, 0x62, 0x73, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x22, 0x87, 0x01, 0x0a, 0x14, 0x50, 0x61, 0x67,
	0x65, 0x47, 0x65, 0x74, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x12, 0x33, 0x0a, 0x07, 0x72, 0x65, 0x70, 0x6c, 0x69, 0x65, 0x73, 0x18, 0x01, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x19, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x2e, 0x61, 0x70, 0x69,
	0x2e, 0x76, 0x31, 0x2e, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x49, 0x74, 0x65, 0x6d, 0x52, 0x07, 0x72,
	0x65, 0x70, 0x6c, 0x69, 0x65, 0x73, 0x12, 0x1f, 0x0a, 0x0b, 0x6e, 0x65, 0x78, 0x74, 0x5f, 0x63,
	0x75, 0x72, 0x73, 0x6f, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0a, 0x6e, 0x65, 0x78,
	0x74, 0x43, 0x75, 0x72, 0x73, 0x6f, 0x72, 0x12, 0x19, 0x0a, 0x08, 0x68, 0x61, 0x73, 0x5f, 0x6e,
	0x65, 0x78, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07, 0x68, 0x61, 0x73, 0x4e, 0x65,
	0x78, 0x74, 0x22, 0x6d, 0x0a, 0x16, 0x50, 0x61, 0x67, 0x65, 0x47, 0x65, 0x74, 0x53, 0x75, 0x62,
	0x52, 0x65, 0x70, 0x6c, 0x79, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x19, 0x0a, 0x03,
	0x6f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x42, 0x07, 0xba, 0x48, 0x04, 0x32, 0x02,
	0x20, 0x00, 0x52, 0x03, 0x6f, 0x69, 0x64, 0x12, 0x20, 0x0a, 0x07, 0x72, 0x6f, 0x6f, 0x74, 0x5f,
	0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x04, 0x42, 0x07, 0xba, 0x48, 0x04, 0x32, 0x02, 0x20,
	0x00, 0x52, 0x06, 0x72, 0x6f, 0x6f, 0x74, 0x49, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x63, 0x75, 0x72,
	0x73, 0x6f, 0x72, 0x18, 0x03, 0x20, 0x01, 0x28, 0x04, 0x52, 0x06, 0x63, 0x75, 0x72, 0x73, 0x6f,
	0x72, 0x22, 0x8a, 0x01, 0x0a, 0x17, 0x50, 0x61, 0x67, 0x65, 0x47, 0x65, 0x74, 0x53, 0x75, 0x62,
	0x52, 0x65, 0x70, 0x6c, 0x79, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x33, 0x0a,
	0x07, 0x72, 0x65, 0x70, 0x6c, 0x69, 0x65, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x19,
	0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x31, 0x2e,
	0x52, 0x65, 0x70, 0x6c, 0x79, 0x49, 0x74, 0x65, 0x6d, 0x52, 0x07, 0x72, 0x65, 0x70, 0x6c, 0x69,
	0x65, 0x73, 0x12, 0x1f, 0x0a, 0x0b, 0x6e, 0x65, 0x78, 0x74, 0x5f, 0x63, 0x75, 0x72, 0x73, 0x6f,
	0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0a, 0x6e, 0x65, 0x78, 0x74, 0x43, 0x75, 0x72,
	0x73, 0x6f, 0x72, 0x12, 0x19, 0x0a, 0x08, 0x68, 0x61, 0x73, 0x5f, 0x6e, 0x65, 0x78, 0x74, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07, 0x68, 0x61, 0x73, 0x4e, 0x65, 0x78, 0x74, 0x22, 0x81,
	0x01, 0x0a, 0x18, 0x50, 0x61, 0x67, 0x65, 0x47, 0x65, 0x74, 0x53, 0x75, 0x62, 0x52, 0x65, 0x70,
	0x6c, 0x79, 0x56, 0x32, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x19, 0x0a, 0x03, 0x6f,
	0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x42, 0x07, 0xba, 0x48, 0x04, 0x32, 0x02, 0x20,
	0x00, 0x52, 0x03, 0x6f, 0x69, 0x64, 0x12, 0x20, 0x0a, 0x07, 0x72, 0x6f, 0x6f, 0x74, 0x5f, 0x69,
	0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x04, 0x42, 0x07, 0xba, 0x48, 0x04, 0x32, 0x02, 0x20, 0x00,
	0x52, 0x06, 0x72, 0x6f, 0x6f, 0x74, 0x49, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x70, 0x61, 0x67, 0x65,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x70, 0x61, 0x67, 0x65, 0x12, 0x14, 0x0a, 0x05,
	0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x63, 0x6f, 0x75,
	0x6e, 0x74, 0x22, 0x66, 0x0a, 0x19, 0x50, 0x61, 0x67, 0x65, 0x47, 0x65, 0x74, 0x53, 0x75, 0x62,
	0x52, 0x65, 0x70, 0x6c, 0x79, 0x56, 0x32, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12,
	0x33, 0x0a, 0x07, 0x72, 0x65, 0x70, 0x6c, 0x69, 0x65, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x19, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76,
	0x31, 0x2e, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x49, 0x74, 0x65, 0x6d, 0x52, 0x07, 0x72, 0x65, 0x70,
	0x6c, 0x69, 0x65, 0x73, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x22, 0x7f, 0x0a, 0x10, 0x44, 0x65,
	0x74, 0x61, 0x69, 0x6c, 0x65, 0x64, 0x53, 0x75, 0x62, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x2f,
	0x0a, 0x05, 0x69, 0x74, 0x65, 0x6d, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x19, 0x2e,
	0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x31, 0x2e, 0x52,
	0x65, 0x70, 0x6c, 0x79, 0x49, 0x74, 0x65, 0x6d, 0x52, 0x05, 0x69, 0x74, 0x65, 0x6d, 0x73, 0x12,
	0x1f, 0x0a, 0x0b, 0x6e, 0x65, 0x78, 0x74, 0x5f, 0x63, 0x75, 0x72, 0x73, 0x6f, 0x72, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x04, 0x52, 0x0a, 0x6e, 0x65, 0x78, 0x74, 0x43, 0x75, 0x72, 0x73, 0x6f, 0x72,
	0x12, 0x19, 0x0a, 0x08, 0x68, 0x61, 0x73, 0x5f, 0x6e, 0x65, 0x78, 0x74, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x08, 0x52, 0x07, 0x68, 0x61, 0x73, 0x4e, 0x65, 0x78, 0x74, 0x22, 0x85, 0x01, 0x0a, 0x11,
	0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x65, 0x64, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x49, 0x74, 0x65,
	0x6d, 0x12, 0x2d, 0x0a, 0x04, 0x72, 0x6f, 0x6f, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x19, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x31,
	0x2e, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x49, 0x74, 0x65, 0x6d, 0x52, 0x04, 0x72, 0x6f, 0x6f, 0x74,
	0x12, 0x41, 0x0a, 0x0b, 0x73, 0x75, 0x62, 0x5f, 0x72, 0x65, 0x70, 0x6c, 0x69, 0x65, 0x73, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x20, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x2e,
	0x61, 0x70, 0x69, 0x2e, 0x76, 0x31, 0x2e, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x65, 0x64, 0x53,
	0x75, 0x62, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x52, 0x0a, 0x73, 0x75, 0x62, 0x52, 0x65, 0x70, 0x6c,
	0x69, 0x65, 0x73, 0x22, 0x83, 0x01, 0x0a, 0x1b, 0x50, 0x61, 0x67, 0x65, 0x47, 0x65, 0x74, 0x44,
	0x65, 0x74, 0x61, 0x69, 0x6c, 0x65, 0x64, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x12, 0x19, 0x0a, 0x03, 0x6f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04,
	0x42, 0x07, 0xba, 0x48, 0x04, 0x32, 0x02, 0x20, 0x00, 0x52, 0x03, 0x6f, 0x69, 0x64, 0x12, 0x16,
	0x0a, 0x06, 0x63, 0x75, 0x72, 0x73, 0x6f, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x04, 0x52, 0x06,
	0x63, 0x75, 0x72, 0x73, 0x6f, 0x72, 0x12, 0x31, 0x0a, 0x07, 0x73, 0x6f, 0x72, 0x74, 0x5f, 0x62,
	0x79, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x18, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x6e,
	0x74, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x6f, 0x72, 0x74, 0x54, 0x79, 0x70,
	0x65, 0x52, 0x06, 0x73, 0x6f, 0x72, 0x74, 0x42, 0x79, 0x22, 0x97, 0x01, 0x0a, 0x1c, 0x50, 0x61,
	0x67, 0x65, 0x47, 0x65, 0x74, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x65, 0x64, 0x52, 0x65, 0x70,
	0x6c, 0x79, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x3b, 0x0a, 0x07, 0x72, 0x65,
	0x70, 0x6c, 0x69, 0x65, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x21, 0x2e, 0x63, 0x6f,
	0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x31, 0x2e, 0x44, 0x65, 0x74,
	0x61, 0x69, 0x6c, 0x65, 0x64, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x49, 0x74, 0x65, 0x6d, 0x52, 0x07,
	0x72, 0x65, 0x70, 0x6c, 0x69, 0x65, 0x73, 0x12, 0x1f, 0x0a, 0x0b, 0x6e, 0x65, 0x78, 0x74, 0x5f,
	0x63, 0x75, 0x72, 0x73, 0x6f, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0a, 0x6e, 0x65,
	0x78, 0x74, 0x43, 0x75, 0x72, 0x73, 0x6f, 0x72, 0x12, 0x19, 0x0a, 0x08, 0x68, 0x61, 0x73, 0x5f,
	0x6e, 0x65, 0x78, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07, 0x68, 0x61, 0x73, 0x4e,
	0x65, 0x78, 0x74, 0x22, 0x85, 0x01, 0x0a, 0x1d, 0x50, 0x61, 0x67, 0x65, 0x47, 0x65, 0x74, 0x44,
	0x65, 0x74, 0x61, 0x69, 0x6c, 0x65, 0x64, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x56, 0x32, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x19, 0x0a, 0x03, 0x6f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x04, 0x42, 0x07, 0xba, 0x48, 0x04, 0x32, 0x02, 0x20, 0x00, 0x52, 0x03, 0x6f, 0x69, 0x64,
	0x12, 0x16, 0x0a, 0x06, 0x63, 0x75, 0x72, 0x73, 0x6f, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x04,
	0x52, 0x06, 0x63, 0x75, 0x72, 0x73, 0x6f, 0x72, 0x12, 0x31, 0x0a, 0x07, 0x73, 0x6f, 0x72, 0x74,
	0x5f, 0x62, 0x79, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x18, 0x2e, 0x63, 0x6f, 0x6d, 0x6d,
	0x65, 0x6e, 0x74, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x6f, 0x72, 0x74, 0x54,
	0x79, 0x70, 0x65, 0x52, 0x06, 0x73, 0x6f, 0x72, 0x74, 0x42, 0x79, 0x22, 0x5b, 0x0a, 0x12, 0x44,
	0x65, 0x74, 0x61, 0x69, 0x6c, 0x65, 0x64, 0x53, 0x75, 0x62, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x56,
	0x32, 0x12, 0x2f, 0x0a, 0x05, 0x69, 0x74, 0x65, 0x6d, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x19, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76,
	0x31, 0x2e, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x49, 0x74, 0x65, 0x6d, 0x52, 0x05, 0x69, 0x74, 0x65,
	0x6d, 0x73, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x22, 0x89, 0x01, 0x0a, 0x13, 0x44, 0x65, 0x74,
	0x61, 0x69, 0x6c, 0x65, 0x64, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x49, 0x74, 0x65, 0x6d, 0x56, 0x32,
	0x12, 0x2d, 0x0a, 0x04, 0x72, 0x6f, 0x6f, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x19,
	0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x31, 0x2e,
	0x52, 0x65, 0x70, 0x6c, 0x79, 0x49, 0x74, 0x65, 0x6d, 0x52, 0x04, 0x72, 0x6f, 0x6f, 0x74, 0x12,
	0x43, 0x0a, 0x0b, 0x73, 0x75, 0x62, 0x5f, 0x72, 0x65, 0x70, 0x6c, 0x69, 0x65, 0x73, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x22, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x2e, 0x61,
	0x70, 0x69, 0x2e, 0x76, 0x31, 0x2e, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x65, 0x64, 0x53, 0x75,
	0x62, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x56, 0x32, 0x52, 0x0a, 0x73, 0x75, 0x62, 0x52, 0x65, 0x70,
	0x6c, 0x69, 0x65, 0x73, 0x22, 0x9b, 0x01, 0x0a, 0x1e, 0x50, 0x61, 0x67, 0x65, 0x47, 0x65, 0x74,
	0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x65, 0x64, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x56, 0x32, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x3d, 0x0a, 0x07, 0x72, 0x65, 0x70, 0x6c, 0x69,
	0x65, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x23, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x65,
	0x6e, 0x74, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x31, 0x2e, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c,
	0x65, 0x64, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x49, 0x74, 0x65, 0x6d, 0x56, 0x32, 0x52, 0x07, 0x72,
	0x65, 0x70, 0x6c, 0x69, 0x65, 0x73, 0x12, 0x1f, 0x0a, 0x0b, 0x6e, 0x65, 0x78, 0x74, 0x5f, 0x63,
	0x75, 0x72, 0x73, 0x6f, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0a, 0x6e, 0x65, 0x78,
	0x74, 0x43, 0x75, 0x72, 0x73, 0x6f, 0x72, 0x12, 0x19, 0x0a, 0x08, 0x68, 0x61, 0x73, 0x5f, 0x6e,
	0x65, 0x78, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07, 0x68, 0x61, 0x73, 0x4e, 0x65,
	0x78, 0x74, 0x22, 0x32, 0x0a, 0x15, 0x47, 0x65, 0x74, 0x50, 0x69, 0x6e, 0x6e, 0x65, 0x64, 0x52,
	0x65, 0x70, 0x6c, 0x79, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x19, 0x0a, 0x03, 0x6f,
	0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x42, 0x07, 0xba, 0x48, 0x04, 0x32, 0x02, 0x20,
	0x00, 0x52, 0x03, 0x6f, 0x69, 0x64, 0x22, 0x51, 0x0a, 0x16, 0x47, 0x65, 0x74, 0x50, 0x69, 0x6e,
	0x6e, 0x65, 0x64, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x12, 0x37, 0x0a, 0x05, 0x72, 0x65, 0x70, 0x6c, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x21, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x31,
	0x2e, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x65, 0x64, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x49, 0x74,
	0x65, 0x6d, 0x52, 0x05, 0x72, 0x65, 0x70, 0x6c, 0x79, 0x22, 0x2e, 0x0a, 0x11, 0x43, 0x6f, 0x75,
	0x6e, 0x74, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x19,
	0x0a, 0x03, 0x6f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x42, 0x07, 0xba, 0x48, 0x04,
	0x32, 0x02, 0x20, 0x00, 0x52, 0x03, 0x6f, 0x69, 0x64, 0x22, 0x31, 0x0a, 0x12, 0x43, 0x6f, 0x75,
	0x6e, 0x74, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12,
	0x1b, 0x0a, 0x09, 0x6e, 0x75, 0x6d, 0x5f, 0x72, 0x65, 0x70, 0x6c, 0x79, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x04, 0x52, 0x08, 0x6e, 0x75, 0x6d, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0x2c, 0x0a, 0x16,
	0x42, 0x61, 0x74, 0x63, 0x68, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x6f, 0x69, 0x64, 0x73, 0x18, 0x01,
	0x20, 0x03, 0x28, 0x04, 0x52, 0x04, 0x6f, 0x69, 0x64, 0x73, 0x22, 0xa5, 0x01, 0x0a, 0x17, 0x42,
	0x61, 0x74, 0x63, 0x68, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x4e, 0x0a, 0x07, 0x6e, 0x75, 0x6d, 0x62, 0x65, 0x72,
	0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x34, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x6e,
	0x74, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x31, 0x2e, 0x42, 0x61, 0x74, 0x63, 0x68, 0x43, 0x6f,
	0x75, 0x6e, 0x74, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x2e, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x07, 0x6e,
	0x75, 0x6d, 0x62, 0x65, 0x72, 0x73, 0x1a, 0x3a, 0x0a, 0x0c, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72,
	0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x04, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75,
	0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x04, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02,
	0x38, 0x01, 0x22, 0x3e, 0x0a, 0x18, 0x47, 0x65, 0x74, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x4c, 0x69,
	0x6b, 0x65, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x22,
	0x0a, 0x08, 0x72, 0x65, 0x70, 0x6c, 0x79, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04,
	0x42, 0x07, 0xba, 0x48, 0x04, 0x32, 0x02, 0x20, 0x00, 0x52, 0x07, 0x72, 0x65, 0x70, 0x6c, 0x79,
	0x49, 0x64, 0x22, 0x4c, 0x0a, 0x19, 0x47, 0x65, 0x74, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x4c, 0x69,
	0x6b, 0x65, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12,
	0x19, 0x0a, 0x08, 0x72, 0x65, 0x70, 0x6c, 0x79, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x04, 0x52, 0x07, 0x72, 0x65, 0x70, 0x6c, 0x79, 0x49, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x63, 0x6f,
	0x75, 0x6e, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x04, 0x52, 0x05, 0x63, 0x6f, 0x75, 0x6e, 0x74,
	0x22, 0x41, 0x0a, 0x1b, 0x47, 0x65, 0x74, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x44, 0x69, 0x73, 0x6c,
	0x69, 0x6b, 0x65, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12,
	0x22, 0x0a, 0x08, 0x72, 0x65, 0x70, 0x6c, 0x79, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x04, 0x42, 0x07, 0xba, 0x48, 0x04, 0x32, 0x02, 0x20, 0x00, 0x52, 0x07, 0x72, 0x65, 0x70, 0x6c,
	0x79, 0x49, 0x64, 0x22, 0x4f, 0x0a, 0x1c, 0x47, 0x65, 0x74, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x44,
	0x69, 0x73, 0x6c, 0x69, 0x6b, 0x65, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x12, 0x19, 0x0a, 0x08, 0x72, 0x65, 0x70, 0x6c, 0x79, 0x5f, 0x69, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x07, 0x72, 0x65, 0x70, 0x6c, 0x79, 0x49, 0x64, 0x12, 0x14,
	0x0a, 0x05, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x04, 0x52, 0x05, 0x63,
	0x6f, 0x75, 0x6e, 0x74, 0x22, 0x47, 0x0a, 0x18, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x55, 0x73, 0x65,
	0x72, 0x4f, 0x6e, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x12, 0x19, 0x0a, 0x03, 0x6f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x42, 0x07, 0xba,
	0x48, 0x04, 0x32, 0x02, 0x20, 0x00, 0x52, 0x03, 0x6f, 0x69, 0x64, 0x12, 0x10, 0x0a, 0x03, 0x75,
	0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x03, 0x75, 0x69, 0x64, 0x22, 0x51, 0x0a,
	0x19, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x55, 0x73, 0x65, 0x72, 0x4f, 0x6e, 0x4f, 0x62, 0x6a, 0x65,
	0x63, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x34, 0x0a, 0x06, 0x72, 0x65,
	0x73, 0x75, 0x6c, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x63, 0x6f, 0x6d,
	0x6d, 0x65, 0x6e, 0x74, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x31, 0x2e, 0x4f, 0x69, 0x64, 0x43,
	0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x65, 0x64, 0x52, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74,
	0x22, 0xa3, 0x02, 0x0a, 0x1d, 0x42, 0x61, 0x74, 0x63, 0x68, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x55,
	0x73, 0x65, 0x72, 0x4f, 0x6e, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x12, 0x63, 0x0a, 0x08, 0x6d, 0x61, 0x70, 0x70, 0x69, 0x6e, 0x67, 0x73, 0x18, 0x01,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x3b, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x2e, 0x61,
	0x70, 0x69, 0x2e, 0x76, 0x31, 0x2e, 0x42, 0x61, 0x74, 0x63, 0x68, 0x43, 0x68, 0x65, 0x63, 0x6b,
	0x55, 0x73, 0x65, 0x72, 0x4f, 0x6e, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x2e, 0x4d, 0x61, 0x70, 0x70, 0x69, 0x6e, 0x67, 0x73, 0x45, 0x6e, 0x74, 0x72,
	0x79, 0x42, 0x0a, 0xba, 0x48, 0x07, 0x9a, 0x01, 0x04, 0x08, 0x01, 0x10, 0x32, 0x52, 0x08, 0x6d,
	0x61, 0x70, 0x70, 0x69, 0x6e, 0x67, 0x73, 0x1a, 0x29, 0x0a, 0x07, 0x4f, 0x62, 0x6a, 0x65, 0x63,
	0x74, 0x73, 0x12, 0x1e, 0x0a, 0x04, 0x6f, 0x69, 0x64, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x04,
	0x42, 0x0a, 0xba, 0x48, 0x07, 0x92, 0x01, 0x04, 0x08, 0x01, 0x10, 0x32, 0x52, 0x04, 0x6f, 0x69,
	0x64, 0x73, 0x1a, 0x72, 0x0a, 0x0d, 0x4d, 0x61, 0x70, 0x70, 0x69, 0x6e, 0x67, 0x73, 0x45, 0x6e,
	0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x4b, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x35, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x2e, 0x61,
	0x70, 0x69, 0x2e, 0x76, 0x31, 0x2e, 0x42, 0x61, 0x74, 0x63, 0x68, 0x43, 0x68, 0x65, 0x63, 0x6b,
	0x55, 0x73, 0x65, 0x72, 0x4f, 0x6e, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x2e, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x73, 0x52, 0x05, 0x76, 0x61, 0x6c,
	0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x22, 0x3e, 0x0a, 0x0c, 0x4f, 0x69, 0x64, 0x43, 0x6f, 0x6d,
	0x6d, 0x65, 0x6e, 0x74, 0x65, 0x64, 0x12, 0x10, 0x0a, 0x03, 0x6f, 0x69, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x04, 0x52, 0x03, 0x6f, 0x69, 0x64, 0x12, 0x1c, 0x0a, 0x09, 0x63, 0x6f, 0x6d, 0x6d,
	0x65, 0x6e, 0x74, 0x65, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x08, 0x52, 0x09, 0x63, 0x6f, 0x6d,
	0x6d, 0x65, 0x6e, 0x74, 0x65, 0x64, 0x22, 0x44, 0x0a, 0x10, 0x4f, 0x69, 0x64, 0x43, 0x6f, 0x6d,
	0x6d, 0x65, 0x6e, 0x74, 0x65, 0x64, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x30, 0x0a, 0x04, 0x6c, 0x69,
	0x73, 0x74, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x65,
	0x6e, 0x74, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x31, 0x2e, 0x4f, 0x69, 0x64, 0x43, 0x6f, 0x6d,
	0x6d, 0x65, 0x6e, 0x74, 0x65, 0x64, 0x52, 0x04, 0x6c, 0x69, 0x73, 0x74, 0x22, 0xd5, 0x01, 0x0a,
	0x1e, 0x42, 0x61, 0x74, 0x63, 0x68, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x55, 0x73, 0x65, 0x72, 0x4f,
	0x6e, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12,
	0x55, 0x0a, 0x07, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x3b, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76,
	0x31, 0x2e, 0x42, 0x61, 0x74, 0x63, 0x68, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x55, 0x73, 0x65, 0x72,
	0x4f, 0x6e, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x2e, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x07, 0x72,
	0x65, 0x73, 0x75, 0x6c, 0x74, 0x73, 0x1a, 0x5c, 0x0a, 0x0c, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74,
	0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x36, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75,
	0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x20, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x6e,
	0x74, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x31, 0x2e, 0x4f, 0x69, 0x64, 0x43, 0x6f, 0x6d, 0x6d,
	0x65, 0x6e, 0x74, 0x65, 0x64, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65,
	0x3a, 0x02, 0x38, 0x01, 0x2a, 0x39, 0x0a, 0x0b, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x41, 0x63, 0x74,
	0x69, 0x6f, 0x6e, 0x12, 0x15, 0x0a, 0x11, 0x52, 0x45, 0x50, 0x4c, 0x59, 0x5f, 0x41, 0x43, 0x54,
	0x49, 0x4f, 0x4e, 0x5f, 0x55, 0x4e, 0x44, 0x4f, 0x10, 0x00, 0x12, 0x13, 0x0a, 0x0f, 0x52, 0x45,
	0x50, 0x4c, 0x59, 0x5f, 0x41, 0x43, 0x54, 0x49, 0x4f, 0x4e, 0x5f, 0x44, 0x4f, 0x10, 0x01, 0x2a,
	0x23, 0x0a, 0x08, 0x53, 0x6f, 0x72, 0x74, 0x54, 0x79, 0x70, 0x65, 0x12, 0x0a, 0x0a, 0x06, 0x42,
	0x79, 0x54, 0x69, 0x6d, 0x65, 0x10, 0x00, 0x12, 0x0b, 0x0a, 0x07, 0x42, 0x79, 0x54, 0x72, 0x65,
	0x6e, 0x64, 0x10, 0x01, 0x32, 0xf5, 0x0d, 0x0a, 0x0c, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x53, 0x65,
	0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x4d, 0x0a, 0x08, 0x41, 0x64, 0x64, 0x52, 0x65, 0x70, 0x6c,
	0x79, 0x12, 0x1f, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x2e, 0x61, 0x70, 0x69, 0x2e,
	0x76, 0x31, 0x2e, 0x41, 0x64, 0x64, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x1a, 0x20, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x2e, 0x61, 0x70, 0x69,
	0x2e, 0x76, 0x31, 0x2e, 0x41, 0x64, 0x64, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x12, 0x4d, 0x0a, 0x08, 0x44, 0x65, 0x6c, 0x52, 0x65, 0x70, 0x6c, 0x79,
	0x12, 0x1f, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76,
	0x31, 0x2e, 0x44, 0x65, 0x6c, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x1a, 0x20, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x2e, 0x61, 0x70, 0x69, 0x2e,
	0x76, 0x31, 0x2e, 0x44, 0x65, 0x6c, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x12, 0x53, 0x0a, 0x0a, 0x4c, 0x69, 0x6b, 0x65, 0x41, 0x63, 0x74, 0x69, 0x6f,
	0x6e, 0x12, 0x21, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x2e, 0x61, 0x70, 0x69, 0x2e,
	0x76, 0x31, 0x2e, 0x4c, 0x69, 0x6b, 0x65, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x1a, 0x22, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x2e, 0x61,
	0x70, 0x69, 0x2e, 0x76, 0x31, 0x2e, 0x4c, 0x69, 0x6b, 0x65, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x5c, 0x0a, 0x0d, 0x44, 0x69, 0x73, 0x6c,
	0x69, 0x6b, 0x65, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x24, 0x2e, 0x63, 0x6f, 0x6d, 0x6d,
	0x65, 0x6e, 0x74, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x31, 0x2e, 0x44, 0x69, 0x73, 0x6c, 0x69,
	0x6b, 0x65, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a,
	0x25, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x31,
	0x2e, 0x44, 0x69, 0x73, 0x6c, 0x69, 0x6b, 0x65, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x56, 0x0a, 0x0b, 0x52, 0x65, 0x70, 0x6f, 0x72, 0x74,
	0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x22, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x2e,
	0x61, 0x70, 0x69, 0x2e, 0x76, 0x31, 0x2e, 0x52, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x52, 0x65, 0x70,
	0x6c, 0x79, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x23, 0x2e, 0x63, 0x6f, 0x6d, 0x6d,
	0x65, 0x6e, 0x74, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x31, 0x2e, 0x52, 0x65, 0x70, 0x6f, 0x72,
	0x74, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x4d,
	0x0a, 0x08, 0x50, 0x69, 0x6e, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x1f, 0x2e, 0x63, 0x6f, 0x6d,
	0x6d, 0x65, 0x6e, 0x74, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x31, 0x2e, 0x50, 0x69, 0x6e, 0x52,
	0x65, 0x70, 0x6c, 0x79, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x20, 0x2e, 0x63, 0x6f,
	0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x31, 0x2e, 0x50, 0x69, 0x6e,
	0x52, 0x65, 0x70, 0x6c, 0x79, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x59, 0x0a,
	0x0c, 0x50, 0x61, 0x67, 0x65, 0x47, 0x65, 0x74, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x23, 0x2e,
	0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x31, 0x2e, 0x50,
	0x61, 0x67, 0x65, 0x47, 0x65, 0x74, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x1a, 0x24, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x2e, 0x61, 0x70, 0x69,
	0x2e, 0x76, 0x31, 0x2e, 0x50, 0x61, 0x67, 0x65, 0x47, 0x65, 0x74, 0x52, 0x65, 0x70, 0x6c, 0x79,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x62, 0x0a, 0x0f, 0x50, 0x61, 0x67, 0x65,
	0x47, 0x65, 0x74, 0x53, 0x75, 0x62, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x26, 0x2e, 0x63, 0x6f,
	0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x31, 0x2e, 0x50, 0x61, 0x67,
	0x65, 0x47, 0x65, 0x74, 0x53, 0x75, 0x62, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x1a, 0x27, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x2e, 0x61, 0x70,
	0x69, 0x2e, 0x76, 0x31, 0x2e, 0x50, 0x61, 0x67, 0x65, 0x47, 0x65, 0x74, 0x53, 0x75, 0x62, 0x52,
	0x65, 0x70, 0x6c, 0x79, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x68, 0x0a, 0x11,
	0x50, 0x61, 0x67, 0x65, 0x47, 0x65, 0x74, 0x53, 0x75, 0x62, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x56,
	0x32, 0x12, 0x28, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x2e, 0x61, 0x70, 0x69, 0x2e,
	0x76, 0x31, 0x2e, 0x50, 0x61, 0x67, 0x65, 0x47, 0x65, 0x74, 0x53, 0x75, 0x62, 0x52, 0x65, 0x70,
	0x6c, 0x79, 0x56, 0x32, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x29, 0x2e, 0x63, 0x6f,
	0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x31, 0x2e, 0x50, 0x61, 0x67,
	0x65, 0x47, 0x65, 0x74, 0x53, 0x75, 0x62, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x56, 0x32, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x71, 0x0a, 0x14, 0x50, 0x61, 0x67, 0x65, 0x47, 0x65,
	0x74, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x65, 0x64, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x2b,
	0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x31, 0x2e,
	0x50, 0x61, 0x67, 0x65, 0x47, 0x65, 0x74, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x65, 0x64, 0x52,
	0x65, 0x70, 0x6c, 0x79, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x2c, 0x2e, 0x63, 0x6f,
	0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x31, 0x2e, 0x50, 0x61, 0x67,
	0x65, 0x47, 0x65, 0x74, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x65, 0x64, 0x52, 0x65, 0x70, 0x6c,
	0x79, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x77, 0x0a, 0x16, 0x50, 0x61, 0x67,
	0x65, 0x47, 0x65, 0x74, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x65, 0x64, 0x52, 0x65, 0x70, 0x6c,
	0x79, 0x56, 0x32, 0x12, 0x2d, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x2e, 0x61, 0x70,
	0x69, 0x2e, 0x76, 0x31, 0x2e, 0x50, 0x61, 0x67, 0x65, 0x47, 0x65, 0x74, 0x44, 0x65, 0x74, 0x61,
	0x69, 0x6c, 0x65, 0x64, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x56, 0x32, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x1a, 0x2e, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x2e, 0x61, 0x70, 0x69,
	0x2e, 0x76, 0x31, 0x2e, 0x50, 0x61, 0x67, 0x65, 0x47, 0x65, 0x74, 0x44, 0x65, 0x74, 0x61, 0x69,
	0x6c, 0x65, 0x64, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x56, 0x32, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x12, 0x5f, 0x0a, 0x0e, 0x47, 0x65, 0x74, 0x50, 0x69, 0x6e, 0x6e, 0x65, 0x64, 0x52,
	0x65, 0x70, 0x6c, 0x79, 0x12, 0x25, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x2e, 0x61,
	0x70, 0x69, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x50, 0x69, 0x6e, 0x6e, 0x65, 0x64, 0x52,
	0x65, 0x70, 0x6c, 0x79, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x26, 0x2e, 0x63, 0x6f,
	0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74,
	0x50, 0x69, 0x6e, 0x6e, 0x65, 0x64, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x12, 0x53, 0x0a, 0x0a, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x52, 0x65, 0x70, 0x6c,
	0x79, 0x12, 0x21, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x2e, 0x61, 0x70, 0x69, 0x2e,
	0x76, 0x31, 0x2e, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x1a, 0x22, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x2e, 0x61,
	0x70, 0x69, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x52, 0x65, 0x70, 0x6c, 0x79,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x62, 0x0a, 0x0f, 0x42, 0x61, 0x74, 0x63,
	0x68, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x26, 0x2e, 0x63, 0x6f,
	0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x31, 0x2e, 0x42, 0x61, 0x74,
	0x63, 0x68, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x1a, 0x27, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x2e, 0x61, 0x70,
	0x69, 0x2e, 0x76, 0x31, 0x2e, 0x42, 0x61, 0x74, 0x63, 0x68, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x52,
	0x65, 0x70, 0x6c, 0x79, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x68, 0x0a, 0x11,
	0x47, 0x65, 0x74, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x4c, 0x69, 0x6b, 0x65, 0x43, 0x6f, 0x75, 0x6e,
	0x74, 0x12, 0x28, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x2e, 0x61, 0x70, 0x69, 0x2e,
	0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x4c, 0x69, 0x6b, 0x65, 0x43,
	0x6f, 0x75, 0x6e, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x29, 0x2e, 0x63, 0x6f,
	0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74,
	0x52, 0x65, 0x70, 0x6c, 0x79, 0x4c, 0x69, 0x6b, 0x65, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x71, 0x0a, 0x14, 0x47, 0x65, 0x74, 0x52, 0x65, 0x70,
	0x6c, 0x79, 0x44, 0x69, 0x73, 0x6c, 0x69, 0x6b, 0x65, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x2b,
	0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x31, 0x2e,
	0x47, 0x65, 0x74, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x44, 0x69, 0x73, 0x6c, 0x69, 0x6b, 0x65, 0x43,
	0x6f, 0x75, 0x6e, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x2c, 0x2e, 0x63, 0x6f,
	0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74,
	0x52, 0x65, 0x70, 0x6c, 0x79, 0x44, 0x69, 0x73, 0x6c, 0x69, 0x6b, 0x65, 0x43, 0x6f, 0x75, 0x6e,
	0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x68, 0x0a, 0x11, 0x43, 0x68, 0x65,
	0x63, 0x6b, 0x55, 0x73, 0x65, 0x72, 0x4f, 0x6e, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x12, 0x28,
	0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x31, 0x2e,
	0x43, 0x68, 0x65, 0x63, 0x6b, 0x55, 0x73, 0x65, 0x72, 0x4f, 0x6e, 0x4f, 0x62, 0x6a, 0x65, 0x63,
	0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x29, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x65,
	0x6e, 0x74, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x55,
	0x73, 0x65, 0x72, 0x4f, 0x6e, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x12, 0x77, 0x0a, 0x16, 0x42, 0x61, 0x74, 0x63, 0x68, 0x43, 0x68, 0x65, 0x63,
	0x6b, 0x55, 0x73, 0x65, 0x72, 0x4f, 0x6e, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x12, 0x2d, 0x2e,
	0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x31, 0x2e, 0x42,
	0x61, 0x74, 0x63, 0x68, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x55, 0x73, 0x65, 0x72, 0x4f, 0x6e, 0x4f,
	0x62, 0x6a, 0x65, 0x63, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x2e, 0x2e, 0x63,
	0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x31, 0x2e, 0x42, 0x61,
	0x74, 0x63, 0x68, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x55, 0x73, 0x65, 0x72, 0x4f, 0x6e, 0x4f, 0x62,
	0x6a, 0x65, 0x63, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x42, 0xaa, 0x01, 0x0a,
	0x12, 0x63, 0x6f, 0x6d, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x2e, 0x61, 0x70, 0x69,
	0x2e, 0x76, 0x31, 0x42, 0x0a, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x50,
	0x01, 0x5a, 0x2e, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x72, 0x79,
	0x61, 0x6e, 0x72, 0x65, 0x61, 0x64, 0x62, 0x6f, 0x6f, 0x6b, 0x73, 0x2f, 0x77, 0x68, 0x69, 0x6d,
	0x65, 0x72, 0x2f, 0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x76,
	0x31, 0xa2, 0x02, 0x03, 0x43, 0x41, 0x58, 0xaa, 0x02, 0x0e, 0x43, 0x6f, 0x6d, 0x6d, 0x65, 0x6e,
	0x74, 0x2e, 0x41, 0x70, 0x69, 0x2e, 0x56, 0x31, 0xca, 0x02, 0x0e, 0x43, 0x6f, 0x6d, 0x6d, 0x65,
	0x6e, 0x74, 0x5c, 0x41, 0x70, 0x69, 0x5c, 0x56, 0x31, 0xe2, 0x02, 0x1a, 0x43, 0x6f, 0x6d, 0x6d,
	0x65, 0x6e, 0x74, 0x5c, 0x41, 0x70, 0x69, 0x5c, 0x56, 0x31, 0x5c, 0x47, 0x50, 0x42, 0x4d, 0x65,
	0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0xea, 0x02, 0x10, 0x43, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74,
	0x3a, 0x3a, 0x41, 0x70, 0x69, 0x3a, 0x3a, 0x56, 0x31, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x33,
}

var (
	file_v1_reply_proto_rawDescOnce sync.Once
	file_v1_reply_proto_rawDescData = file_v1_reply_proto_rawDesc
)

func file_v1_reply_proto_rawDescGZIP() []byte {
	file_v1_reply_proto_rawDescOnce.Do(func() {
		file_v1_reply_proto_rawDescData = protoimpl.X.CompressGZIP(file_v1_reply_proto_rawDescData)
	})
	return file_v1_reply_proto_rawDescData
}

var file_v1_reply_proto_enumTypes = make([]protoimpl.EnumInfo, 2)
var file_v1_reply_proto_msgTypes = make([]protoimpl.MessageInfo, 47)
var file_v1_reply_proto_goTypes = []any{
	(ReplyAction)(0),                              // 0: comment.api.v1.ReplyAction
	(SortType)(0),                                 // 1: comment.api.v1.SortType
	(*AddReplyRequest)(nil),                       // 2: comment.api.v1.AddReplyRequest
	(*AddReplyResponse)(nil),                      // 3: comment.api.v1.AddReplyResponse
	(*DelReplyRequest)(nil),                       // 4: comment.api.v1.DelReplyRequest
	(*DelReplyResponse)(nil),                      // 5: comment.api.v1.DelReplyResponse
	(*LikeActionRequest)(nil),                     // 6: comment.api.v1.LikeActionRequest
	(*LikeActionResponse)(nil),                    // 7: comment.api.v1.LikeActionResponse
	(*DislikeActionRequest)(nil),                  // 8: comment.api.v1.DislikeActionRequest
	(*DislikeActionResponse)(nil),                 // 9: comment.api.v1.DislikeActionResponse
	(*ReportReplyRequest)(nil),                    // 10: comment.api.v1.ReportReplyRequest
	(*ReportReplyResponse)(nil),                   // 11: comment.api.v1.ReportReplyResponse
	(*PinReplyRequest)(nil),                       // 12: comment.api.v1.PinReplyRequest
	(*PinReplyResponse)(nil),                      // 13: comment.api.v1.PinReplyResponse
	(*PageGetReplyRequest)(nil),                   // 14: comment.api.v1.PageGetReplyRequest
	(*ReplyItem)(nil),                             // 15: comment.api.v1.ReplyItem
	(*PageGetReplyResponse)(nil),                  // 16: comment.api.v1.PageGetReplyResponse
	(*PageGetSubReplyRequest)(nil),                // 17: comment.api.v1.PageGetSubReplyRequest
	(*PageGetSubReplyResponse)(nil),               // 18: comment.api.v1.PageGetSubReplyResponse
	(*PageGetSubReplyV2Request)(nil),              // 19: comment.api.v1.PageGetSubReplyV2Request
	(*PageGetSubReplyV2Response)(nil),             // 20: comment.api.v1.PageGetSubReplyV2Response
	(*DetailedSubReply)(nil),                      // 21: comment.api.v1.DetailedSubReply
	(*DetailedReplyItem)(nil),                     // 22: comment.api.v1.DetailedReplyItem
	(*PageGetDetailedReplyRequest)(nil),           // 23: comment.api.v1.PageGetDetailedReplyRequest
	(*PageGetDetailedReplyResponse)(nil),          // 24: comment.api.v1.PageGetDetailedReplyResponse
	(*PageGetDetailedReplyV2Request)(nil),         // 25: comment.api.v1.PageGetDetailedReplyV2Request
	(*DetailedSubReplyV2)(nil),                    // 26: comment.api.v1.DetailedSubReplyV2
	(*DetailedReplyItemV2)(nil),                   // 27: comment.api.v1.DetailedReplyItemV2
	(*PageGetDetailedReplyV2Response)(nil),        // 28: comment.api.v1.PageGetDetailedReplyV2Response
	(*GetPinnedReplyRequest)(nil),                 // 29: comment.api.v1.GetPinnedReplyRequest
	(*GetPinnedReplyResponse)(nil),                // 30: comment.api.v1.GetPinnedReplyResponse
	(*CountReplyRequest)(nil),                     // 31: comment.api.v1.CountReplyRequest
	(*CountReplyResponse)(nil),                    // 32: comment.api.v1.CountReplyResponse
	(*BatchCountReplyRequest)(nil),                // 33: comment.api.v1.BatchCountReplyRequest
	(*BatchCountReplyResponse)(nil),               // 34: comment.api.v1.BatchCountReplyResponse
	(*GetReplyLikeCountRequest)(nil),              // 35: comment.api.v1.GetReplyLikeCountRequest
	(*GetReplyLikeCountResponse)(nil),             // 36: comment.api.v1.GetReplyLikeCountResponse
	(*GetReplyDislikeCountRequest)(nil),           // 37: comment.api.v1.GetReplyDislikeCountRequest
	(*GetReplyDislikeCountResponse)(nil),          // 38: comment.api.v1.GetReplyDislikeCountResponse
	(*CheckUserOnObjectRequest)(nil),              // 39: comment.api.v1.CheckUserOnObjectRequest
	(*CheckUserOnObjectResponse)(nil),             // 40: comment.api.v1.CheckUserOnObjectResponse
	(*BatchCheckUserOnObjectRequest)(nil),         // 41: comment.api.v1.BatchCheckUserOnObjectRequest
	(*OidCommented)(nil),                          // 42: comment.api.v1.OidCommented
	(*OidCommentedList)(nil),                      // 43: comment.api.v1.OidCommentedList
	(*BatchCheckUserOnObjectResponse)(nil),        // 44: comment.api.v1.BatchCheckUserOnObjectResponse
	nil,                                           // 45: comment.api.v1.BatchCountReplyResponse.NumbersEntry
	(*BatchCheckUserOnObjectRequest_Objects)(nil), // 46: comment.api.v1.BatchCheckUserOnObjectRequest.Objects
	nil, // 47: comment.api.v1.BatchCheckUserOnObjectRequest.MappingsEntry
	nil, // 48: comment.api.v1.BatchCheckUserOnObjectResponse.ResultsEntry
}
var file_v1_reply_proto_depIdxs = []int32{
	0,  // 0: comment.api.v1.LikeActionRequest.action:type_name -> comment.api.v1.ReplyAction
	0,  // 1: comment.api.v1.DislikeActionRequest.action:type_name -> comment.api.v1.ReplyAction
	0,  // 2: comment.api.v1.PinReplyRequest.action:type_name -> comment.api.v1.ReplyAction
	1,  // 3: comment.api.v1.PageGetReplyRequest.sort_by:type_name -> comment.api.v1.SortType
	15, // 4: comment.api.v1.PageGetReplyResponse.replies:type_name -> comment.api.v1.ReplyItem
	15, // 5: comment.api.v1.PageGetSubReplyResponse.replies:type_name -> comment.api.v1.ReplyItem
	15, // 6: comment.api.v1.PageGetSubReplyV2Response.replies:type_name -> comment.api.v1.ReplyItem
	15, // 7: comment.api.v1.DetailedSubReply.items:type_name -> comment.api.v1.ReplyItem
	15, // 8: comment.api.v1.DetailedReplyItem.root:type_name -> comment.api.v1.ReplyItem
	21, // 9: comment.api.v1.DetailedReplyItem.sub_replies:type_name -> comment.api.v1.DetailedSubReply
	1,  // 10: comment.api.v1.PageGetDetailedReplyRequest.sort_by:type_name -> comment.api.v1.SortType
	22, // 11: comment.api.v1.PageGetDetailedReplyResponse.replies:type_name -> comment.api.v1.DetailedReplyItem
	1,  // 12: comment.api.v1.PageGetDetailedReplyV2Request.sort_by:type_name -> comment.api.v1.SortType
	15, // 13: comment.api.v1.DetailedSubReplyV2.items:type_name -> comment.api.v1.ReplyItem
	15, // 14: comment.api.v1.DetailedReplyItemV2.root:type_name -> comment.api.v1.ReplyItem
	26, // 15: comment.api.v1.DetailedReplyItemV2.sub_replies:type_name -> comment.api.v1.DetailedSubReplyV2
	27, // 16: comment.api.v1.PageGetDetailedReplyV2Response.replies:type_name -> comment.api.v1.DetailedReplyItemV2
	22, // 17: comment.api.v1.GetPinnedReplyResponse.reply:type_name -> comment.api.v1.DetailedReplyItem
	45, // 18: comment.api.v1.BatchCountReplyResponse.numbers:type_name -> comment.api.v1.BatchCountReplyResponse.NumbersEntry
	42, // 19: comment.api.v1.CheckUserOnObjectResponse.result:type_name -> comment.api.v1.OidCommented
	47, // 20: comment.api.v1.BatchCheckUserOnObjectRequest.mappings:type_name -> comment.api.v1.BatchCheckUserOnObjectRequest.MappingsEntry
	42, // 21: comment.api.v1.OidCommentedList.list:type_name -> comment.api.v1.OidCommented
	48, // 22: comment.api.v1.BatchCheckUserOnObjectResponse.results:type_name -> comment.api.v1.BatchCheckUserOnObjectResponse.ResultsEntry
	46, // 23: comment.api.v1.BatchCheckUserOnObjectRequest.MappingsEntry.value:type_name -> comment.api.v1.BatchCheckUserOnObjectRequest.Objects
	43, // 24: comment.api.v1.BatchCheckUserOnObjectResponse.ResultsEntry.value:type_name -> comment.api.v1.OidCommentedList
	2,  // 25: comment.api.v1.ReplyService.AddReply:input_type -> comment.api.v1.AddReplyRequest
	4,  // 26: comment.api.v1.ReplyService.DelReply:input_type -> comment.api.v1.DelReplyRequest
	6,  // 27: comment.api.v1.ReplyService.LikeAction:input_type -> comment.api.v1.LikeActionRequest
	8,  // 28: comment.api.v1.ReplyService.DislikeAction:input_type -> comment.api.v1.DislikeActionRequest
	10, // 29: comment.api.v1.ReplyService.ReportReply:input_type -> comment.api.v1.ReportReplyRequest
	12, // 30: comment.api.v1.ReplyService.PinReply:input_type -> comment.api.v1.PinReplyRequest
	14, // 31: comment.api.v1.ReplyService.PageGetReply:input_type -> comment.api.v1.PageGetReplyRequest
	17, // 32: comment.api.v1.ReplyService.PageGetSubReply:input_type -> comment.api.v1.PageGetSubReplyRequest
	19, // 33: comment.api.v1.ReplyService.PageGetSubReplyV2:input_type -> comment.api.v1.PageGetSubReplyV2Request
	23, // 34: comment.api.v1.ReplyService.PageGetDetailedReply:input_type -> comment.api.v1.PageGetDetailedReplyRequest
	25, // 35: comment.api.v1.ReplyService.PageGetDetailedReplyV2:input_type -> comment.api.v1.PageGetDetailedReplyV2Request
	29, // 36: comment.api.v1.ReplyService.GetPinnedReply:input_type -> comment.api.v1.GetPinnedReplyRequest
	31, // 37: comment.api.v1.ReplyService.CountReply:input_type -> comment.api.v1.CountReplyRequest
	33, // 38: comment.api.v1.ReplyService.BatchCountReply:input_type -> comment.api.v1.BatchCountReplyRequest
	35, // 39: comment.api.v1.ReplyService.GetReplyLikeCount:input_type -> comment.api.v1.GetReplyLikeCountRequest
	37, // 40: comment.api.v1.ReplyService.GetReplyDislikeCount:input_type -> comment.api.v1.GetReplyDislikeCountRequest
	39, // 41: comment.api.v1.ReplyService.CheckUserOnObject:input_type -> comment.api.v1.CheckUserOnObjectRequest
	41, // 42: comment.api.v1.ReplyService.BatchCheckUserOnObject:input_type -> comment.api.v1.BatchCheckUserOnObjectRequest
	3,  // 43: comment.api.v1.ReplyService.AddReply:output_type -> comment.api.v1.AddReplyResponse
	5,  // 44: comment.api.v1.ReplyService.DelReply:output_type -> comment.api.v1.DelReplyResponse
	7,  // 45: comment.api.v1.ReplyService.LikeAction:output_type -> comment.api.v1.LikeActionResponse
	9,  // 46: comment.api.v1.ReplyService.DislikeAction:output_type -> comment.api.v1.DislikeActionResponse
	11, // 47: comment.api.v1.ReplyService.ReportReply:output_type -> comment.api.v1.ReportReplyResponse
	13, // 48: comment.api.v1.ReplyService.PinReply:output_type -> comment.api.v1.PinReplyResponse
	16, // 49: comment.api.v1.ReplyService.PageGetReply:output_type -> comment.api.v1.PageGetReplyResponse
	18, // 50: comment.api.v1.ReplyService.PageGetSubReply:output_type -> comment.api.v1.PageGetSubReplyResponse
	20, // 51: comment.api.v1.ReplyService.PageGetSubReplyV2:output_type -> comment.api.v1.PageGetSubReplyV2Response
	24, // 52: comment.api.v1.ReplyService.PageGetDetailedReply:output_type -> comment.api.v1.PageGetDetailedReplyResponse
	28, // 53: comment.api.v1.ReplyService.PageGetDetailedReplyV2:output_type -> comment.api.v1.PageGetDetailedReplyV2Response
	30, // 54: comment.api.v1.ReplyService.GetPinnedReply:output_type -> comment.api.v1.GetPinnedReplyResponse
	32, // 55: comment.api.v1.ReplyService.CountReply:output_type -> comment.api.v1.CountReplyResponse
	34, // 56: comment.api.v1.ReplyService.BatchCountReply:output_type -> comment.api.v1.BatchCountReplyResponse
	36, // 57: comment.api.v1.ReplyService.GetReplyLikeCount:output_type -> comment.api.v1.GetReplyLikeCountResponse
	38, // 58: comment.api.v1.ReplyService.GetReplyDislikeCount:output_type -> comment.api.v1.GetReplyDislikeCountResponse
	40, // 59: comment.api.v1.ReplyService.CheckUserOnObject:output_type -> comment.api.v1.CheckUserOnObjectResponse
	44, // 60: comment.api.v1.ReplyService.BatchCheckUserOnObject:output_type -> comment.api.v1.BatchCheckUserOnObjectResponse
	43, // [43:61] is the sub-list for method output_type
	25, // [25:43] is the sub-list for method input_type
	25, // [25:25] is the sub-list for extension type_name
	25, // [25:25] is the sub-list for extension extendee
	0,  // [0:25] is the sub-list for field type_name
}

func init() { file_v1_reply_proto_init() }
func file_v1_reply_proto_init() {
	if File_v1_reply_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_v1_reply_proto_msgTypes[0].Exporter = func(v any, i int) any {
			switch v := v.(*AddReplyRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_v1_reply_proto_msgTypes[1].Exporter = func(v any, i int) any {
			switch v := v.(*AddReplyResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_v1_reply_proto_msgTypes[2].Exporter = func(v any, i int) any {
			switch v := v.(*DelReplyRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_v1_reply_proto_msgTypes[3].Exporter = func(v any, i int) any {
			switch v := v.(*DelReplyResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_v1_reply_proto_msgTypes[4].Exporter = func(v any, i int) any {
			switch v := v.(*LikeActionRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_v1_reply_proto_msgTypes[5].Exporter = func(v any, i int) any {
			switch v := v.(*LikeActionResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_v1_reply_proto_msgTypes[6].Exporter = func(v any, i int) any {
			switch v := v.(*DislikeActionRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_v1_reply_proto_msgTypes[7].Exporter = func(v any, i int) any {
			switch v := v.(*DislikeActionResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_v1_reply_proto_msgTypes[8].Exporter = func(v any, i int) any {
			switch v := v.(*ReportReplyRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_v1_reply_proto_msgTypes[9].Exporter = func(v any, i int) any {
			switch v := v.(*ReportReplyResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_v1_reply_proto_msgTypes[10].Exporter = func(v any, i int) any {
			switch v := v.(*PinReplyRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_v1_reply_proto_msgTypes[11].Exporter = func(v any, i int) any {
			switch v := v.(*PinReplyResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_v1_reply_proto_msgTypes[12].Exporter = func(v any, i int) any {
			switch v := v.(*PageGetReplyRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_v1_reply_proto_msgTypes[13].Exporter = func(v any, i int) any {
			switch v := v.(*ReplyItem); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_v1_reply_proto_msgTypes[14].Exporter = func(v any, i int) any {
			switch v := v.(*PageGetReplyResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_v1_reply_proto_msgTypes[15].Exporter = func(v any, i int) any {
			switch v := v.(*PageGetSubReplyRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_v1_reply_proto_msgTypes[16].Exporter = func(v any, i int) any {
			switch v := v.(*PageGetSubReplyResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_v1_reply_proto_msgTypes[17].Exporter = func(v any, i int) any {
			switch v := v.(*PageGetSubReplyV2Request); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_v1_reply_proto_msgTypes[18].Exporter = func(v any, i int) any {
			switch v := v.(*PageGetSubReplyV2Response); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_v1_reply_proto_msgTypes[19].Exporter = func(v any, i int) any {
			switch v := v.(*DetailedSubReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_v1_reply_proto_msgTypes[20].Exporter = func(v any, i int) any {
			switch v := v.(*DetailedReplyItem); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_v1_reply_proto_msgTypes[21].Exporter = func(v any, i int) any {
			switch v := v.(*PageGetDetailedReplyRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_v1_reply_proto_msgTypes[22].Exporter = func(v any, i int) any {
			switch v := v.(*PageGetDetailedReplyResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_v1_reply_proto_msgTypes[23].Exporter = func(v any, i int) any {
			switch v := v.(*PageGetDetailedReplyV2Request); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_v1_reply_proto_msgTypes[24].Exporter = func(v any, i int) any {
			switch v := v.(*DetailedSubReplyV2); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_v1_reply_proto_msgTypes[25].Exporter = func(v any, i int) any {
			switch v := v.(*DetailedReplyItemV2); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_v1_reply_proto_msgTypes[26].Exporter = func(v any, i int) any {
			switch v := v.(*PageGetDetailedReplyV2Response); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_v1_reply_proto_msgTypes[27].Exporter = func(v any, i int) any {
			switch v := v.(*GetPinnedReplyRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_v1_reply_proto_msgTypes[28].Exporter = func(v any, i int) any {
			switch v := v.(*GetPinnedReplyResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_v1_reply_proto_msgTypes[29].Exporter = func(v any, i int) any {
			switch v := v.(*CountReplyRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_v1_reply_proto_msgTypes[30].Exporter = func(v any, i int) any {
			switch v := v.(*CountReplyResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_v1_reply_proto_msgTypes[31].Exporter = func(v any, i int) any {
			switch v := v.(*BatchCountReplyRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_v1_reply_proto_msgTypes[32].Exporter = func(v any, i int) any {
			switch v := v.(*BatchCountReplyResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_v1_reply_proto_msgTypes[33].Exporter = func(v any, i int) any {
			switch v := v.(*GetReplyLikeCountRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_v1_reply_proto_msgTypes[34].Exporter = func(v any, i int) any {
			switch v := v.(*GetReplyLikeCountResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_v1_reply_proto_msgTypes[35].Exporter = func(v any, i int) any {
			switch v := v.(*GetReplyDislikeCountRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_v1_reply_proto_msgTypes[36].Exporter = func(v any, i int) any {
			switch v := v.(*GetReplyDislikeCountResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_v1_reply_proto_msgTypes[37].Exporter = func(v any, i int) any {
			switch v := v.(*CheckUserOnObjectRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_v1_reply_proto_msgTypes[38].Exporter = func(v any, i int) any {
			switch v := v.(*CheckUserOnObjectResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_v1_reply_proto_msgTypes[39].Exporter = func(v any, i int) any {
			switch v := v.(*BatchCheckUserOnObjectRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_v1_reply_proto_msgTypes[40].Exporter = func(v any, i int) any {
			switch v := v.(*OidCommented); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_v1_reply_proto_msgTypes[41].Exporter = func(v any, i int) any {
			switch v := v.(*OidCommentedList); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_v1_reply_proto_msgTypes[42].Exporter = func(v any, i int) any {
			switch v := v.(*BatchCheckUserOnObjectResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_v1_reply_proto_msgTypes[44].Exporter = func(v any, i int) any {
			switch v := v.(*BatchCheckUserOnObjectRequest_Objects); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_v1_reply_proto_rawDesc,
			NumEnums:      2,
			NumMessages:   47,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_v1_reply_proto_goTypes,
		DependencyIndexes: file_v1_reply_proto_depIdxs,
		EnumInfos:         file_v1_reply_proto_enumTypes,
		MessageInfos:      file_v1_reply_proto_msgTypes,
	}.Build()
	File_v1_reply_proto = out.File
	file_v1_reply_proto_rawDesc = nil
	file_v1_reply_proto_goTypes = nil
	file_v1_reply_proto_depIdxs = nil
}
