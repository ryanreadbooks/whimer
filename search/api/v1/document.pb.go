// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.34.2
// 	protoc        (unknown)
// source: v1/document.proto

package v1

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type BatchAddNoteTagRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	NoteTags []*NoteTag `protobuf:"bytes,1,rep,name=note_tags,json=noteTags,proto3" json:"note_tags,omitempty"`
}

func (x *BatchAddNoteTagRequest) Reset() {
	*x = BatchAddNoteTagRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_v1_document_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BatchAddNoteTagRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BatchAddNoteTagRequest) ProtoMessage() {}

func (x *BatchAddNoteTagRequest) ProtoReflect() protoreflect.Message {
	mi := &file_v1_document_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BatchAddNoteTagRequest.ProtoReflect.Descriptor instead.
func (*BatchAddNoteTagRequest) Descriptor() ([]byte, []int) {
	return file_v1_document_proto_rawDescGZIP(), []int{0}
}

func (x *BatchAddNoteTagRequest) GetNoteTags() []*NoteTag {
	if x != nil {
		return x.NoteTags
	}
	return nil
}

type BatchAddNoteTagResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *BatchAddNoteTagResponse) Reset() {
	*x = BatchAddNoteTagResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_v1_document_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BatchAddNoteTagResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BatchAddNoteTagResponse) ProtoMessage() {}

func (x *BatchAddNoteTagResponse) ProtoReflect() protoreflect.Message {
	mi := &file_v1_document_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BatchAddNoteTagResponse.ProtoReflect.Descriptor instead.
func (*BatchAddNoteTagResponse) Descriptor() ([]byte, []int) {
	return file_v1_document_proto_rawDescGZIP(), []int{1}
}

type BatchAddNoteRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Notes []*Note `protobuf:"bytes,1,rep,name=notes,proto3" json:"notes,omitempty"`
}

func (x *BatchAddNoteRequest) Reset() {
	*x = BatchAddNoteRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_v1_document_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BatchAddNoteRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BatchAddNoteRequest) ProtoMessage() {}

func (x *BatchAddNoteRequest) ProtoReflect() protoreflect.Message {
	mi := &file_v1_document_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BatchAddNoteRequest.ProtoReflect.Descriptor instead.
func (*BatchAddNoteRequest) Descriptor() ([]byte, []int) {
	return file_v1_document_proto_rawDescGZIP(), []int{2}
}

func (x *BatchAddNoteRequest) GetNotes() []*Note {
	if x != nil {
		return x.Notes
	}
	return nil
}

type BatchAddNoteResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *BatchAddNoteResponse) Reset() {
	*x = BatchAddNoteResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_v1_document_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BatchAddNoteResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BatchAddNoteResponse) ProtoMessage() {}

func (x *BatchAddNoteResponse) ProtoReflect() protoreflect.Message {
	mi := &file_v1_document_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BatchAddNoteResponse.ProtoReflect.Descriptor instead.
func (*BatchAddNoteResponse) Descriptor() ([]byte, []int) {
	return file_v1_document_proto_rawDescGZIP(), []int{3}
}

type BatchDeleteNoteRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Ids []string `protobuf:"bytes,1,rep,name=ids,proto3" json:"ids,omitempty"`
}

func (x *BatchDeleteNoteRequest) Reset() {
	*x = BatchDeleteNoteRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_v1_document_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BatchDeleteNoteRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BatchDeleteNoteRequest) ProtoMessage() {}

func (x *BatchDeleteNoteRequest) ProtoReflect() protoreflect.Message {
	mi := &file_v1_document_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BatchDeleteNoteRequest.ProtoReflect.Descriptor instead.
func (*BatchDeleteNoteRequest) Descriptor() ([]byte, []int) {
	return file_v1_document_proto_rawDescGZIP(), []int{4}
}

func (x *BatchDeleteNoteRequest) GetIds() []string {
	if x != nil {
		return x.Ids
	}
	return nil
}

type BatchDeleteNoteResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *BatchDeleteNoteResponse) Reset() {
	*x = BatchDeleteNoteResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_v1_document_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BatchDeleteNoteResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BatchDeleteNoteResponse) ProtoMessage() {}

func (x *BatchDeleteNoteResponse) ProtoReflect() protoreflect.Message {
	mi := &file_v1_document_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BatchDeleteNoteResponse.ProtoReflect.Descriptor instead.
func (*BatchDeleteNoteResponse) Descriptor() ([]byte, []int) {
	return file_v1_document_proto_rawDescGZIP(), []int{5}
}

var File_v1_document_proto protoreflect.FileDescriptor

var file_v1_document_proto_rawDesc = []byte{
	0x0a, 0x11, 0x76, 0x31, 0x2f, 0x64, 0x6f, 0x63, 0x75, 0x6d, 0x65, 0x6e, 0x74, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x12, 0x0d, 0x73, 0x65, 0x61, 0x72, 0x63, 0x68, 0x2e, 0x61, 0x70, 0x69, 0x2e,
	0x76, 0x31, 0x1a, 0x0e, 0x76, 0x31, 0x2f, 0x69, 0x6e, 0x64, 0x65, 0x78, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x22, 0x4d, 0x0a, 0x16, 0x42, 0x61, 0x74, 0x63, 0x68, 0x41, 0x64, 0x64, 0x4e, 0x6f,
	0x74, 0x65, 0x54, 0x61, 0x67, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x33, 0x0a, 0x09,
	0x6e, 0x6f, 0x74, 0x65, 0x5f, 0x74, 0x61, 0x67, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x16, 0x2e, 0x73, 0x65, 0x61, 0x72, 0x63, 0x68, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x31, 0x2e,
	0x4e, 0x6f, 0x74, 0x65, 0x54, 0x61, 0x67, 0x52, 0x08, 0x6e, 0x6f, 0x74, 0x65, 0x54, 0x61, 0x67,
	0x73, 0x22, 0x19, 0x0a, 0x17, 0x42, 0x61, 0x74, 0x63, 0x68, 0x41, 0x64, 0x64, 0x4e, 0x6f, 0x74,
	0x65, 0x54, 0x61, 0x67, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x40, 0x0a, 0x13,
	0x42, 0x61, 0x74, 0x63, 0x68, 0x41, 0x64, 0x64, 0x4e, 0x6f, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x12, 0x29, 0x0a, 0x05, 0x6e, 0x6f, 0x74, 0x65, 0x73, 0x18, 0x01, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x13, 0x2e, 0x73, 0x65, 0x61, 0x72, 0x63, 0x68, 0x2e, 0x61, 0x70, 0x69, 0x2e,
	0x76, 0x31, 0x2e, 0x4e, 0x6f, 0x74, 0x65, 0x52, 0x05, 0x6e, 0x6f, 0x74, 0x65, 0x73, 0x22, 0x16,
	0x0a, 0x14, 0x42, 0x61, 0x74, 0x63, 0x68, 0x41, 0x64, 0x64, 0x4e, 0x6f, 0x74, 0x65, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x2a, 0x0a, 0x16, 0x42, 0x61, 0x74, 0x63, 0x68, 0x44,
	0x65, 0x6c, 0x65, 0x74, 0x65, 0x4e, 0x6f, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x12, 0x10, 0x0a, 0x03, 0x69, 0x64, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x09, 0x52, 0x03, 0x69,
	0x64, 0x73, 0x22, 0x19, 0x0a, 0x17, 0x42, 0x61, 0x74, 0x63, 0x68, 0x44, 0x65, 0x6c, 0x65, 0x74,
	0x65, 0x4e, 0x6f, 0x74, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x32, 0xae, 0x02,
	0x0a, 0x0f, 0x44, 0x6f, 0x63, 0x75, 0x6d, 0x65, 0x6e, 0x74, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63,
	0x65, 0x12, 0x60, 0x0a, 0x0f, 0x42, 0x61, 0x74, 0x63, 0x68, 0x41, 0x64, 0x64, 0x4e, 0x6f, 0x74,
	0x65, 0x54, 0x61, 0x67, 0x12, 0x25, 0x2e, 0x73, 0x65, 0x61, 0x72, 0x63, 0x68, 0x2e, 0x61, 0x70,
	0x69, 0x2e, 0x76, 0x31, 0x2e, 0x42, 0x61, 0x74, 0x63, 0x68, 0x41, 0x64, 0x64, 0x4e, 0x6f, 0x74,
	0x65, 0x54, 0x61, 0x67, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x26, 0x2e, 0x73, 0x65,
	0x61, 0x72, 0x63, 0x68, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x31, 0x2e, 0x42, 0x61, 0x74, 0x63,
	0x68, 0x41, 0x64, 0x64, 0x4e, 0x6f, 0x74, 0x65, 0x54, 0x61, 0x67, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x12, 0x57, 0x0a, 0x0c, 0x42, 0x61, 0x74, 0x63, 0x68, 0x41, 0x64, 0x64, 0x4e,
	0x6f, 0x74, 0x65, 0x12, 0x22, 0x2e, 0x73, 0x65, 0x61, 0x72, 0x63, 0x68, 0x2e, 0x61, 0x70, 0x69,
	0x2e, 0x76, 0x31, 0x2e, 0x42, 0x61, 0x74, 0x63, 0x68, 0x41, 0x64, 0x64, 0x4e, 0x6f, 0x74, 0x65,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x23, 0x2e, 0x73, 0x65, 0x61, 0x72, 0x63, 0x68,
	0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x31, 0x2e, 0x42, 0x61, 0x74, 0x63, 0x68, 0x41, 0x64, 0x64,
	0x4e, 0x6f, 0x74, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x60, 0x0a, 0x0f,
	0x42, 0x61, 0x74, 0x63, 0x68, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x4e, 0x6f, 0x74, 0x65, 0x12,
	0x25, 0x2e, 0x73, 0x65, 0x61, 0x72, 0x63, 0x68, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x31, 0x2e,
	0x42, 0x61, 0x74, 0x63, 0x68, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x4e, 0x6f, 0x74, 0x65, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x26, 0x2e, 0x73, 0x65, 0x61, 0x72, 0x63, 0x68, 0x2e,
	0x61, 0x70, 0x69, 0x2e, 0x76, 0x31, 0x2e, 0x42, 0x61, 0x74, 0x63, 0x68, 0x44, 0x65, 0x6c, 0x65,
	0x74, 0x65, 0x4e, 0x6f, 0x74, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x42, 0xa7,
	0x01, 0x0a, 0x11, 0x63, 0x6f, 0x6d, 0x2e, 0x73, 0x65, 0x61, 0x72, 0x63, 0x68, 0x2e, 0x61, 0x70,
	0x69, 0x2e, 0x76, 0x31, 0x42, 0x0d, 0x44, 0x6f, 0x63, 0x75, 0x6d, 0x65, 0x6e, 0x74, 0x50, 0x72,
	0x6f, 0x74, 0x6f, 0x50, 0x01, 0x5a, 0x2d, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f,
	0x6d, 0x2f, 0x72, 0x79, 0x61, 0x6e, 0x72, 0x65, 0x61, 0x64, 0x62, 0x6f, 0x6f, 0x6b, 0x73, 0x2f,
	0x77, 0x68, 0x69, 0x6d, 0x65, 0x72, 0x2f, 0x73, 0x65, 0x61, 0x72, 0x63, 0x68, 0x2f, 0x61, 0x70,
	0x69, 0x2f, 0x76, 0x31, 0xa2, 0x02, 0x03, 0x53, 0x41, 0x58, 0xaa, 0x02, 0x0d, 0x53, 0x65, 0x61,
	0x72, 0x63, 0x68, 0x2e, 0x41, 0x70, 0x69, 0x2e, 0x56, 0x31, 0xca, 0x02, 0x0d, 0x53, 0x65, 0x61,
	0x72, 0x63, 0x68, 0x5c, 0x41, 0x70, 0x69, 0x5c, 0x56, 0x31, 0xe2, 0x02, 0x19, 0x53, 0x65, 0x61,
	0x72, 0x63, 0x68, 0x5c, 0x41, 0x70, 0x69, 0x5c, 0x56, 0x31, 0x5c, 0x47, 0x50, 0x42, 0x4d, 0x65,
	0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0xea, 0x02, 0x0f, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x3a,
	0x3a, 0x41, 0x70, 0x69, 0x3a, 0x3a, 0x56, 0x31, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_v1_document_proto_rawDescOnce sync.Once
	file_v1_document_proto_rawDescData = file_v1_document_proto_rawDesc
)

func file_v1_document_proto_rawDescGZIP() []byte {
	file_v1_document_proto_rawDescOnce.Do(func() {
		file_v1_document_proto_rawDescData = protoimpl.X.CompressGZIP(file_v1_document_proto_rawDescData)
	})
	return file_v1_document_proto_rawDescData
}

var file_v1_document_proto_msgTypes = make([]protoimpl.MessageInfo, 6)
var file_v1_document_proto_goTypes = []any{
	(*BatchAddNoteTagRequest)(nil),  // 0: search.api.v1.BatchAddNoteTagRequest
	(*BatchAddNoteTagResponse)(nil), // 1: search.api.v1.BatchAddNoteTagResponse
	(*BatchAddNoteRequest)(nil),     // 2: search.api.v1.BatchAddNoteRequest
	(*BatchAddNoteResponse)(nil),    // 3: search.api.v1.BatchAddNoteResponse
	(*BatchDeleteNoteRequest)(nil),  // 4: search.api.v1.BatchDeleteNoteRequest
	(*BatchDeleteNoteResponse)(nil), // 5: search.api.v1.BatchDeleteNoteResponse
	(*NoteTag)(nil),                 // 6: search.api.v1.NoteTag
	(*Note)(nil),                    // 7: search.api.v1.Note
}
var file_v1_document_proto_depIdxs = []int32{
	6, // 0: search.api.v1.BatchAddNoteTagRequest.note_tags:type_name -> search.api.v1.NoteTag
	7, // 1: search.api.v1.BatchAddNoteRequest.notes:type_name -> search.api.v1.Note
	0, // 2: search.api.v1.DocumentService.BatchAddNoteTag:input_type -> search.api.v1.BatchAddNoteTagRequest
	2, // 3: search.api.v1.DocumentService.BatchAddNote:input_type -> search.api.v1.BatchAddNoteRequest
	4, // 4: search.api.v1.DocumentService.BatchDeleteNote:input_type -> search.api.v1.BatchDeleteNoteRequest
	1, // 5: search.api.v1.DocumentService.BatchAddNoteTag:output_type -> search.api.v1.BatchAddNoteTagResponse
	3, // 6: search.api.v1.DocumentService.BatchAddNote:output_type -> search.api.v1.BatchAddNoteResponse
	5, // 7: search.api.v1.DocumentService.BatchDeleteNote:output_type -> search.api.v1.BatchDeleteNoteResponse
	5, // [5:8] is the sub-list for method output_type
	2, // [2:5] is the sub-list for method input_type
	2, // [2:2] is the sub-list for extension type_name
	2, // [2:2] is the sub-list for extension extendee
	0, // [0:2] is the sub-list for field type_name
}

func init() { file_v1_document_proto_init() }
func file_v1_document_proto_init() {
	if File_v1_document_proto != nil {
		return
	}
	file_v1_index_proto_init()
	if !protoimpl.UnsafeEnabled {
		file_v1_document_proto_msgTypes[0].Exporter = func(v any, i int) any {
			switch v := v.(*BatchAddNoteTagRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_v1_document_proto_msgTypes[1].Exporter = func(v any, i int) any {
			switch v := v.(*BatchAddNoteTagResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_v1_document_proto_msgTypes[2].Exporter = func(v any, i int) any {
			switch v := v.(*BatchAddNoteRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_v1_document_proto_msgTypes[3].Exporter = func(v any, i int) any {
			switch v := v.(*BatchAddNoteResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_v1_document_proto_msgTypes[4].Exporter = func(v any, i int) any {
			switch v := v.(*BatchDeleteNoteRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_v1_document_proto_msgTypes[5].Exporter = func(v any, i int) any {
			switch v := v.(*BatchDeleteNoteResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_v1_document_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   6,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_v1_document_proto_goTypes,
		DependencyIndexes: file_v1_document_proto_depIdxs,
		MessageInfos:      file_v1_document_proto_msgTypes,
	}.Build()
	File_v1_document_proto = out.File
	file_v1_document_proto_rawDesc = nil
	file_v1_document_proto_goTypes = nil
	file_v1_document_proto_depIdxs = nil
}
