syntax = "proto3";

package search.api.v1;

import "v1/index.proto";

option go_package = "github.com/ryanreadbooks/whimer/search/api/v1";

// 查询服务
service SearchService {
  // 搜索笔记标签
  rpc SearchNoteTags(SearchNoteTagsRequest) returns (SearchNoteTagsResponse);
  // 按照条件搜索笔记
  rpc SearchNotes(SearchNotesRequest) returns (SearchNotesResponse);
}

enum NoteFilterType {
  filter_sort_rule = 0; // 排序规则
  filter_note_type = 1; // 类型过滤规则: 笔记类型：图文/视频等
  filter_note_time = 2; // 发布时间过滤规则: 笔记发布时间
}

message FilterValue { string value = 1; }

// 笔记筛选过滤器
message NoteFilter {
  NoteFilterType type = 1;         // 过滤器类型
  // 不同的filtertype支持不同的values
  repeated FilterValue values = 2; // 过滤器的条件 多个则为与关系
}

message SearchNoteTagsRequest {
  string text = 1;
  int32 page = 2;
  int32 count = 3;
}

message SearchNoteTagsResponse {
  repeated NoteTag items = 1;
  int64 total = 2;
}

message SearchNotesRequest {
  string keyword = 1;
  repeated NoteFilter filters = 2;
  string next_token = 3;
  int32 count = 4;
}

message SearchNotesResponse {
  bool has_next = 1;
  string next_token = 2;
  int64 total = 3;
  repeated string note_ids = 4;
}
