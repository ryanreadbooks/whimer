// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.34.2
// 	protoc        (unknown)
// source: v1/notecreator.proto

package v1

import (
	_ "buf.build/gen/go/bufbuild/protovalidate/protocolbuffers/go/buf/validate"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type IsUserOwnNoteRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Uid    uint64 `protobuf:"varint,1,opt,name=uid,proto3" json:"uid,omitempty"`                     // 用户id
	NoteId uint64 `protobuf:"varint,2,opt,name=note_id,json=noteId,proto3" json:"note_id,omitempty"` // 笔记id
}

func (x *IsUserOwnNoteRequest) Reset() {
	*x = IsUserOwnNoteRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_v1_notecreator_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *IsUserOwnNoteRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*IsUserOwnNoteRequest) ProtoMessage() {}

func (x *IsUserOwnNoteRequest) ProtoReflect() protoreflect.Message {
	mi := &file_v1_notecreator_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use IsUserOwnNoteRequest.ProtoReflect.Descriptor instead.
func (*IsUserOwnNoteRequest) Descriptor() ([]byte, []int) {
	return file_v1_notecreator_proto_rawDescGZIP(), []int{0}
}

func (x *IsUserOwnNoteRequest) GetUid() uint64 {
	if x != nil {
		return x.Uid
	}
	return 0
}

func (x *IsUserOwnNoteRequest) GetNoteId() uint64 {
	if x != nil {
		return x.NoteId
	}
	return 0
}

type IsUserOwnNoteResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Uid    uint64 `protobuf:"varint,1,opt,name=uid,proto3" json:"uid,omitempty"`
	Result bool   `protobuf:"varint,2,opt,name=result,proto3" json:"result,omitempty"` // 结果
}

func (x *IsUserOwnNoteResponse) Reset() {
	*x = IsUserOwnNoteResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_v1_notecreator_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *IsUserOwnNoteResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*IsUserOwnNoteResponse) ProtoMessage() {}

func (x *IsUserOwnNoteResponse) ProtoReflect() protoreflect.Message {
	mi := &file_v1_notecreator_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use IsUserOwnNoteResponse.ProtoReflect.Descriptor instead.
func (*IsUserOwnNoteResponse) Descriptor() ([]byte, []int) {
	return file_v1_notecreator_proto_rawDescGZIP(), []int{1}
}

func (x *IsUserOwnNoteResponse) GetUid() uint64 {
	if x != nil {
		return x.Uid
	}
	return 0
}

func (x *IsUserOwnNoteResponse) GetResult() bool {
	if x != nil {
		return x.Result
	}
	return false
}

type IsNoteExistRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	NoteId uint64 `protobuf:"varint,1,opt,name=note_id,json=noteId,proto3" json:"note_id,omitempty"`
}

func (x *IsNoteExistRequest) Reset() {
	*x = IsNoteExistRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_v1_notecreator_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *IsNoteExistRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*IsNoteExistRequest) ProtoMessage() {}

func (x *IsNoteExistRequest) ProtoReflect() protoreflect.Message {
	mi := &file_v1_notecreator_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use IsNoteExistRequest.ProtoReflect.Descriptor instead.
func (*IsNoteExistRequest) Descriptor() ([]byte, []int) {
	return file_v1_notecreator_proto_rawDescGZIP(), []int{2}
}

func (x *IsNoteExistRequest) GetNoteId() uint64 {
	if x != nil {
		return x.NoteId
	}
	return 0
}

type IsNoteExistResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Exist bool `protobuf:"varint,1,opt,name=exist,proto3" json:"exist,omitempty"`
}

func (x *IsNoteExistResponse) Reset() {
	*x = IsNoteExistResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_v1_notecreator_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *IsNoteExistResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*IsNoteExistResponse) ProtoMessage() {}

func (x *IsNoteExistResponse) ProtoReflect() protoreflect.Message {
	mi := &file_v1_notecreator_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use IsNoteExistResponse.ProtoReflect.Descriptor instead.
func (*IsNoteExistResponse) Descriptor() ([]byte, []int) {
	return file_v1_notecreator_proto_rawDescGZIP(), []int{3}
}

func (x *IsNoteExistResponse) GetExist() bool {
	if x != nil {
		return x.Exist
	}
	return false
}

type CreateReqBasic struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Title   string `protobuf:"bytes,1,opt,name=title,proto3" json:"title,omitempty"`
	Desc    string `protobuf:"bytes,2,opt,name=desc,proto3" json:"desc,omitempty"`
	Privacy int32  `protobuf:"varint,3,opt,name=privacy,proto3" json:"privacy,omitempty"`
}

func (x *CreateReqBasic) Reset() {
	*x = CreateReqBasic{}
	if protoimpl.UnsafeEnabled {
		mi := &file_v1_notecreator_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateReqBasic) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateReqBasic) ProtoMessage() {}

func (x *CreateReqBasic) ProtoReflect() protoreflect.Message {
	mi := &file_v1_notecreator_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateReqBasic.ProtoReflect.Descriptor instead.
func (*CreateReqBasic) Descriptor() ([]byte, []int) {
	return file_v1_notecreator_proto_rawDescGZIP(), []int{4}
}

func (x *CreateReqBasic) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *CreateReqBasic) GetDesc() string {
	if x != nil {
		return x.Desc
	}
	return ""
}

func (x *CreateReqBasic) GetPrivacy() int32 {
	if x != nil {
		return x.Privacy
	}
	return 0
}

type CreateReqImage struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	FileId string `protobuf:"bytes,1,opt,name=file_id,json=fileId,proto3" json:"file_id,omitempty"`
	Width  uint32 `protobuf:"varint,2,opt,name=width,proto3" json:"width,omitempty"`
	Height uint32 `protobuf:"varint,3,opt,name=height,proto3" json:"height,omitempty"`
	Format string `protobuf:"bytes,4,opt,name=format,proto3" json:"format,omitempty"`
}

func (x *CreateReqImage) Reset() {
	*x = CreateReqImage{}
	if protoimpl.UnsafeEnabled {
		mi := &file_v1_notecreator_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateReqImage) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateReqImage) ProtoMessage() {}

func (x *CreateReqImage) ProtoReflect() protoreflect.Message {
	mi := &file_v1_notecreator_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateReqImage.ProtoReflect.Descriptor instead.
func (*CreateReqImage) Descriptor() ([]byte, []int) {
	return file_v1_notecreator_proto_rawDescGZIP(), []int{5}
}

func (x *CreateReqImage) GetFileId() string {
	if x != nil {
		return x.FileId
	}
	return ""
}

func (x *CreateReqImage) GetWidth() uint32 {
	if x != nil {
		return x.Width
	}
	return 0
}

func (x *CreateReqImage) GetHeight() uint32 {
	if x != nil {
		return x.Height
	}
	return 0
}

func (x *CreateReqImage) GetFormat() string {
	if x != nil {
		return x.Format
	}
	return ""
}

type CreateNoteRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Basic  *CreateReqBasic   `protobuf:"bytes,1,opt,name=basic,proto3" json:"basic,omitempty"`
	Images []*CreateReqImage `protobuf:"bytes,2,rep,name=images,proto3" json:"images,omitempty"`
}

func (x *CreateNoteRequest) Reset() {
	*x = CreateNoteRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_v1_notecreator_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateNoteRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateNoteRequest) ProtoMessage() {}

func (x *CreateNoteRequest) ProtoReflect() protoreflect.Message {
	mi := &file_v1_notecreator_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateNoteRequest.ProtoReflect.Descriptor instead.
func (*CreateNoteRequest) Descriptor() ([]byte, []int) {
	return file_v1_notecreator_proto_rawDescGZIP(), []int{6}
}

func (x *CreateNoteRequest) GetBasic() *CreateReqBasic {
	if x != nil {
		return x.Basic
	}
	return nil
}

func (x *CreateNoteRequest) GetImages() []*CreateReqImage {
	if x != nil {
		return x.Images
	}
	return nil
}

type CreateNoteResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	NoteId uint64 `protobuf:"varint,1,opt,name=note_id,json=noteId,proto3" json:"note_id,omitempty"`
}

func (x *CreateNoteResponse) Reset() {
	*x = CreateNoteResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_v1_notecreator_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateNoteResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateNoteResponse) ProtoMessage() {}

func (x *CreateNoteResponse) ProtoReflect() protoreflect.Message {
	mi := &file_v1_notecreator_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateNoteResponse.ProtoReflect.Descriptor instead.
func (*CreateNoteResponse) Descriptor() ([]byte, []int) {
	return file_v1_notecreator_proto_rawDescGZIP(), []int{7}
}

func (x *CreateNoteResponse) GetNoteId() uint64 {
	if x != nil {
		return x.NoteId
	}
	return 0
}

type DeleteNoteRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	NoteId uint64 `protobuf:"varint,1,opt,name=note_id,json=noteId,proto3" json:"note_id,omitempty"`
}

func (x *DeleteNoteRequest) Reset() {
	*x = DeleteNoteRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_v1_notecreator_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteNoteRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteNoteRequest) ProtoMessage() {}

func (x *DeleteNoteRequest) ProtoReflect() protoreflect.Message {
	mi := &file_v1_notecreator_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteNoteRequest.ProtoReflect.Descriptor instead.
func (*DeleteNoteRequest) Descriptor() ([]byte, []int) {
	return file_v1_notecreator_proto_rawDescGZIP(), []int{8}
}

func (x *DeleteNoteRequest) GetNoteId() uint64 {
	if x != nil {
		return x.NoteId
	}
	return 0
}

type DeleteNoteResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *DeleteNoteResponse) Reset() {
	*x = DeleteNoteResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_v1_notecreator_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteNoteResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteNoteResponse) ProtoMessage() {}

func (x *DeleteNoteResponse) ProtoReflect() protoreflect.Message {
	mi := &file_v1_notecreator_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteNoteResponse.ProtoReflect.Descriptor instead.
func (*DeleteNoteResponse) Descriptor() ([]byte, []int) {
	return file_v1_notecreator_proto_rawDescGZIP(), []int{9}
}

type UpdateNoteRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	NoteId uint64             `protobuf:"varint,1,opt,name=note_id,json=noteId,proto3" json:"note_id,omitempty"`
	Note   *CreateNoteRequest `protobuf:"bytes,2,opt,name=note,proto3" json:"note,omitempty"`
}

func (x *UpdateNoteRequest) Reset() {
	*x = UpdateNoteRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_v1_notecreator_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateNoteRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateNoteRequest) ProtoMessage() {}

func (x *UpdateNoteRequest) ProtoReflect() protoreflect.Message {
	mi := &file_v1_notecreator_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateNoteRequest.ProtoReflect.Descriptor instead.
func (*UpdateNoteRequest) Descriptor() ([]byte, []int) {
	return file_v1_notecreator_proto_rawDescGZIP(), []int{10}
}

func (x *UpdateNoteRequest) GetNoteId() uint64 {
	if x != nil {
		return x.NoteId
	}
	return 0
}

func (x *UpdateNoteRequest) GetNote() *CreateNoteRequest {
	if x != nil {
		return x.Note
	}
	return nil
}

type UpdateNoteResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	NoteId uint64 `protobuf:"varint,1,opt,name=note_id,json=noteId,proto3" json:"note_id,omitempty"`
}

func (x *UpdateNoteResponse) Reset() {
	*x = UpdateNoteResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_v1_notecreator_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateNoteResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateNoteResponse) ProtoMessage() {}

func (x *UpdateNoteResponse) ProtoReflect() protoreflect.Message {
	mi := &file_v1_notecreator_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateNoteResponse.ProtoReflect.Descriptor instead.
func (*UpdateNoteResponse) Descriptor() ([]byte, []int) {
	return file_v1_notecreator_proto_rawDescGZIP(), []int{11}
}

func (x *UpdateNoteResponse) GetNoteId() uint64 {
	if x != nil {
		return x.NoteId
	}
	return 0
}

type GetNoteRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	NoteId uint64 `protobuf:"varint,1,opt,name=note_id,json=noteId,proto3" json:"note_id,omitempty"`
}

func (x *GetNoteRequest) Reset() {
	*x = GetNoteRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_v1_notecreator_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetNoteRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetNoteRequest) ProtoMessage() {}

func (x *GetNoteRequest) ProtoReflect() protoreflect.Message {
	mi := &file_v1_notecreator_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetNoteRequest.ProtoReflect.Descriptor instead.
func (*GetNoteRequest) Descriptor() ([]byte, []int) {
	return file_v1_notecreator_proto_rawDescGZIP(), []int{12}
}

func (x *GetNoteRequest) GetNoteId() uint64 {
	if x != nil {
		return x.NoteId
	}
	return 0
}

type GetNoteResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Note *NoteItem `protobuf:"bytes,1,opt,name=note,proto3" json:"note,omitempty"`
}

func (x *GetNoteResponse) Reset() {
	*x = GetNoteResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_v1_notecreator_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetNoteResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetNoteResponse) ProtoMessage() {}

func (x *GetNoteResponse) ProtoReflect() protoreflect.Message {
	mi := &file_v1_notecreator_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetNoteResponse.ProtoReflect.Descriptor instead.
func (*GetNoteResponse) Descriptor() ([]byte, []int) {
	return file_v1_notecreator_proto_rawDescGZIP(), []int{13}
}

func (x *GetNoteResponse) GetNote() *NoteItem {
	if x != nil {
		return x.Note
	}
	return nil
}

type ListNoteRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Cursor uint64 `protobuf:"varint,1,opt,name=cursor,proto3" json:"cursor,omitempty"`
	Count  int32  `protobuf:"varint,2,opt,name=count,proto3" json:"count,omitempty"`
}

func (x *ListNoteRequest) Reset() {
	*x = ListNoteRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_v1_notecreator_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListNoteRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListNoteRequest) ProtoMessage() {}

func (x *ListNoteRequest) ProtoReflect() protoreflect.Message {
	mi := &file_v1_notecreator_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListNoteRequest.ProtoReflect.Descriptor instead.
func (*ListNoteRequest) Descriptor() ([]byte, []int) {
	return file_v1_notecreator_proto_rawDescGZIP(), []int{14}
}

func (x *ListNoteRequest) GetCursor() uint64 {
	if x != nil {
		return x.Cursor
	}
	return 0
}

func (x *ListNoteRequest) GetCount() int32 {
	if x != nil {
		return x.Count
	}
	return 0
}

type ListNoteResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Items      []*NoteItem `protobuf:"bytes,1,rep,name=items,proto3" json:"items,omitempty"`
	NextCursor uint64      `protobuf:"varint,2,opt,name=next_cursor,json=nextCursor,proto3" json:"next_cursor,omitempty"`
	HasNext    bool        `protobuf:"varint,3,opt,name=has_next,json=hasNext,proto3" json:"has_next,omitempty"`
}

func (x *ListNoteResponse) Reset() {
	*x = ListNoteResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_v1_notecreator_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListNoteResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListNoteResponse) ProtoMessage() {}

func (x *ListNoteResponse) ProtoReflect() protoreflect.Message {
	mi := &file_v1_notecreator_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListNoteResponse.ProtoReflect.Descriptor instead.
func (*ListNoteResponse) Descriptor() ([]byte, []int) {
	return file_v1_notecreator_proto_rawDescGZIP(), []int{15}
}

func (x *ListNoteResponse) GetItems() []*NoteItem {
	if x != nil {
		return x.Items
	}
	return nil
}

func (x *ListNoteResponse) GetNextCursor() uint64 {
	if x != nil {
		return x.NextCursor
	}
	return 0
}

func (x *ListNoteResponse) GetHasNext() bool {
	if x != nil {
		return x.HasNext
	}
	return false
}

type GetUploadAuthRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Resource string `protobuf:"bytes,1,opt,name=resource,proto3" json:"resource,omitempty"`
	Source   string `protobuf:"bytes,2,opt,name=source,proto3" json:"source,omitempty"`
}

func (x *GetUploadAuthRequest) Reset() {
	*x = GetUploadAuthRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_v1_notecreator_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetUploadAuthRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetUploadAuthRequest) ProtoMessage() {}

func (x *GetUploadAuthRequest) ProtoReflect() protoreflect.Message {
	mi := &file_v1_notecreator_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetUploadAuthRequest.ProtoReflect.Descriptor instead.
func (*GetUploadAuthRequest) Descriptor() ([]byte, []int) {
	return file_v1_notecreator_proto_rawDescGZIP(), []int{16}
}

func (x *GetUploadAuthRequest) GetResource() string {
	if x != nil {
		return x.Resource
	}
	return ""
}

func (x *GetUploadAuthRequest) GetSource() string {
	if x != nil {
		return x.Source
	}
	return ""
}

type BatchGetUploadAuthRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Resource string `protobuf:"bytes,1,opt,name=resource,proto3" json:"resource,omitempty"`
	Source   string `protobuf:"bytes,2,opt,name=source,proto3" json:"source,omitempty"`
	Count    int32  `protobuf:"varint,3,opt,name=count,proto3" json:"count,omitempty"`
}

func (x *BatchGetUploadAuthRequest) Reset() {
	*x = BatchGetUploadAuthRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_v1_notecreator_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BatchGetUploadAuthRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BatchGetUploadAuthRequest) ProtoMessage() {}

func (x *BatchGetUploadAuthRequest) ProtoReflect() protoreflect.Message {
	mi := &file_v1_notecreator_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BatchGetUploadAuthRequest.ProtoReflect.Descriptor instead.
func (*BatchGetUploadAuthRequest) Descriptor() ([]byte, []int) {
	return file_v1_notecreator_proto_rawDescGZIP(), []int{17}
}

func (x *BatchGetUploadAuthRequest) GetResource() string {
	if x != nil {
		return x.Resource
	}
	return ""
}

func (x *BatchGetUploadAuthRequest) GetSource() string {
	if x != nil {
		return x.Source
	}
	return ""
}

func (x *BatchGetUploadAuthRequest) GetCount() int32 {
	if x != nil {
		return x.Count
	}
	return 0
}

type UploadAuthResponseHeaders struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Auth   string `protobuf:"bytes,1,opt,name=auth,proto3" json:"auth,omitempty"`
	Sha256 string `protobuf:"bytes,2,opt,name=sha256,proto3" json:"sha256,omitempty"`
	Date   string `protobuf:"bytes,3,opt,name=date,proto3" json:"date,omitempty"`
	Token  string `protobuf:"bytes,4,opt,name=token,proto3" json:"token,omitempty"`
}

func (x *UploadAuthResponseHeaders) Reset() {
	*x = UploadAuthResponseHeaders{}
	if protoimpl.UnsafeEnabled {
		mi := &file_v1_notecreator_proto_msgTypes[18]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UploadAuthResponseHeaders) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UploadAuthResponseHeaders) ProtoMessage() {}

func (x *UploadAuthResponseHeaders) ProtoReflect() protoreflect.Message {
	mi := &file_v1_notecreator_proto_msgTypes[18]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UploadAuthResponseHeaders.ProtoReflect.Descriptor instead.
func (*UploadAuthResponseHeaders) Descriptor() ([]byte, []int) {
	return file_v1_notecreator_proto_rawDescGZIP(), []int{18}
}

func (x *UploadAuthResponseHeaders) GetAuth() string {
	if x != nil {
		return x.Auth
	}
	return ""
}

func (x *UploadAuthResponseHeaders) GetSha256() string {
	if x != nil {
		return x.Sha256
	}
	return ""
}

func (x *UploadAuthResponseHeaders) GetDate() string {
	if x != nil {
		return x.Date
	}
	return ""
}

func (x *UploadAuthResponseHeaders) GetToken() string {
	if x != nil {
		return x.Token
	}
	return ""
}

type GetUploadAuthResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	FileId      string                     `protobuf:"bytes,1,opt,name=file_id,json=fileId,proto3" json:"file_id,omitempty"`
	CurrentTime int64                      `protobuf:"varint,2,opt,name=current_time,json=currentTime,proto3" json:"current_time,omitempty"`
	ExpireTime  int64                      `protobuf:"varint,3,opt,name=expire_time,json=expireTime,proto3" json:"expire_time,omitempty"`
	UploadAddr  string                     `protobuf:"bytes,4,opt,name=upload_addr,json=uploadAddr,proto3" json:"upload_addr,omitempty"`
	Headers     *UploadAuthResponseHeaders `protobuf:"bytes,5,opt,name=headers,proto3" json:"headers,omitempty"`
}

func (x *GetUploadAuthResponse) Reset() {
	*x = GetUploadAuthResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_v1_notecreator_proto_msgTypes[19]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetUploadAuthResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetUploadAuthResponse) ProtoMessage() {}

func (x *GetUploadAuthResponse) ProtoReflect() protoreflect.Message {
	mi := &file_v1_notecreator_proto_msgTypes[19]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetUploadAuthResponse.ProtoReflect.Descriptor instead.
func (*GetUploadAuthResponse) Descriptor() ([]byte, []int) {
	return file_v1_notecreator_proto_rawDescGZIP(), []int{19}
}

func (x *GetUploadAuthResponse) GetFileId() string {
	if x != nil {
		return x.FileId
	}
	return ""
}

func (x *GetUploadAuthResponse) GetCurrentTime() int64 {
	if x != nil {
		return x.CurrentTime
	}
	return 0
}

func (x *GetUploadAuthResponse) GetExpireTime() int64 {
	if x != nil {
		return x.ExpireTime
	}
	return 0
}

func (x *GetUploadAuthResponse) GetUploadAddr() string {
	if x != nil {
		return x.UploadAddr
	}
	return ""
}

func (x *GetUploadAuthResponse) GetHeaders() *UploadAuthResponseHeaders {
	if x != nil {
		return x.Headers
	}
	return nil
}

type BatchGetUploadAuthResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Tickets []*GetUploadAuthResponse `protobuf:"bytes,1,rep,name=tickets,proto3" json:"tickets,omitempty"`
}

func (x *BatchGetUploadAuthResponse) Reset() {
	*x = BatchGetUploadAuthResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_v1_notecreator_proto_msgTypes[20]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BatchGetUploadAuthResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BatchGetUploadAuthResponse) ProtoMessage() {}

func (x *BatchGetUploadAuthResponse) ProtoReflect() protoreflect.Message {
	mi := &file_v1_notecreator_proto_msgTypes[20]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BatchGetUploadAuthResponse.ProtoReflect.Descriptor instead.
func (*BatchGetUploadAuthResponse) Descriptor() ([]byte, []int) {
	return file_v1_notecreator_proto_rawDescGZIP(), []int{20}
}

func (x *BatchGetUploadAuthResponse) GetTickets() []*GetUploadAuthResponse {
	if x != nil {
		return x.Tickets
	}
	return nil
}

type GetPostedCountRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Uid uint64 `protobuf:"varint,1,opt,name=uid,proto3" json:"uid,omitempty"` // 用户id
}

func (x *GetPostedCountRequest) Reset() {
	*x = GetPostedCountRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_v1_notecreator_proto_msgTypes[21]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetPostedCountRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetPostedCountRequest) ProtoMessage() {}

func (x *GetPostedCountRequest) ProtoReflect() protoreflect.Message {
	mi := &file_v1_notecreator_proto_msgTypes[21]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetPostedCountRequest.ProtoReflect.Descriptor instead.
func (*GetPostedCountRequest) Descriptor() ([]byte, []int) {
	return file_v1_notecreator_proto_rawDescGZIP(), []int{21}
}

func (x *GetPostedCountRequest) GetUid() uint64 {
	if x != nil {
		return x.Uid
	}
	return 0
}

type GetPostedCountResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Count uint64 `protobuf:"varint,1,opt,name=count,proto3" json:"count,omitempty"`
}

func (x *GetPostedCountResponse) Reset() {
	*x = GetPostedCountResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_v1_notecreator_proto_msgTypes[22]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetPostedCountResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetPostedCountResponse) ProtoMessage() {}

func (x *GetPostedCountResponse) ProtoReflect() protoreflect.Message {
	mi := &file_v1_notecreator_proto_msgTypes[22]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetPostedCountResponse.ProtoReflect.Descriptor instead.
func (*GetPostedCountResponse) Descriptor() ([]byte, []int) {
	return file_v1_notecreator_proto_rawDescGZIP(), []int{22}
}

func (x *GetPostedCountResponse) GetCount() uint64 {
	if x != nil {
		return x.Count
	}
	return 0
}

var File_v1_notecreator_proto protoreflect.FileDescriptor

var file_v1_notecreator_proto_rawDesc = []byte{
	0x0a, 0x14, 0x76, 0x31, 0x2f, 0x6e, 0x6f, 0x74, 0x65, 0x63, 0x72, 0x65, 0x61, 0x74, 0x6f, 0x72,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x0b, 0x6e, 0x6f, 0x74, 0x65, 0x2e, 0x73, 0x64, 0x6b,
	0x2e, 0x76, 0x31, 0x1a, 0x1b, 0x62, 0x75, 0x66, 0x2f, 0x76, 0x61, 0x6c, 0x69, 0x64, 0x61, 0x74,
	0x65, 0x2f, 0x76, 0x61, 0x6c, 0x69, 0x64, 0x61, 0x74, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x1a, 0x0d, 0x76, 0x31, 0x2f, 0x6e, 0x6f, 0x74, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22,
	0x53, 0x0a, 0x14, 0x49, 0x73, 0x55, 0x73, 0x65, 0x72, 0x4f, 0x77, 0x6e, 0x4e, 0x6f, 0x74, 0x65,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x19, 0x0a, 0x03, 0x75, 0x69, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x04, 0x42, 0x07, 0xba, 0x48, 0x04, 0x32, 0x02, 0x20, 0x00, 0x52, 0x03, 0x75,
	0x69, 0x64, 0x12, 0x20, 0x0a, 0x07, 0x6e, 0x6f, 0x74, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x04, 0x42, 0x07, 0xba, 0x48, 0x04, 0x32, 0x02, 0x20, 0x00, 0x52, 0x06, 0x6e, 0x6f,
	0x74, 0x65, 0x49, 0x64, 0x22, 0x41, 0x0a, 0x15, 0x49, 0x73, 0x55, 0x73, 0x65, 0x72, 0x4f, 0x77,
	0x6e, 0x4e, 0x6f, 0x74, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x10, 0x0a,
	0x03, 0x75, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x03, 0x75, 0x69, 0x64, 0x12,
	0x16, 0x0a, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x08, 0x52,
	0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x22, 0x36, 0x0a, 0x12, 0x49, 0x73, 0x4e, 0x6f, 0x74,
	0x65, 0x45, 0x78, 0x69, 0x73, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x20, 0x0a,
	0x07, 0x6e, 0x6f, 0x74, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x42, 0x07,
	0xba, 0x48, 0x04, 0x32, 0x02, 0x20, 0x00, 0x52, 0x06, 0x6e, 0x6f, 0x74, 0x65, 0x49, 0x64, 0x22,
	0x2b, 0x0a, 0x13, 0x49, 0x73, 0x4e, 0x6f, 0x74, 0x65, 0x45, 0x78, 0x69, 0x73, 0x74, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x65, 0x78, 0x69, 0x73, 0x74, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x05, 0x65, 0x78, 0x69, 0x73, 0x74, 0x22, 0x54, 0x0a, 0x0e,
	0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x52, 0x65, 0x71, 0x42, 0x61, 0x73, 0x69, 0x63, 0x12, 0x14,
	0x0a, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x74,
	0x69, 0x74, 0x6c, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x64, 0x65, 0x73, 0x63, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x04, 0x64, 0x65, 0x73, 0x63, 0x12, 0x18, 0x0a, 0x07, 0x70, 0x72, 0x69, 0x76,
	0x61, 0x63, 0x79, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x07, 0x70, 0x72, 0x69, 0x76, 0x61,
	0x63, 0x79, 0x22, 0x6f, 0x0a, 0x0e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x52, 0x65, 0x71, 0x49,
	0x6d, 0x61, 0x67, 0x65, 0x12, 0x17, 0x0a, 0x07, 0x66, 0x69, 0x6c, 0x65, 0x5f, 0x69, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x66, 0x69, 0x6c, 0x65, 0x49, 0x64, 0x12, 0x14, 0x0a,
	0x05, 0x77, 0x69, 0x64, 0x74, 0x68, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x05, 0x77, 0x69,
	0x64, 0x74, 0x68, 0x12, 0x16, 0x0a, 0x06, 0x68, 0x65, 0x69, 0x67, 0x68, 0x74, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x0d, 0x52, 0x06, 0x68, 0x65, 0x69, 0x67, 0x68, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x66,
	0x6f, 0x72, 0x6d, 0x61, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x66, 0x6f, 0x72,
	0x6d, 0x61, 0x74, 0x22, 0x7b, 0x0a, 0x11, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x4e, 0x6f, 0x74,
	0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x31, 0x0a, 0x05, 0x62, 0x61, 0x73, 0x69,
	0x63, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x6e, 0x6f, 0x74, 0x65, 0x2e, 0x73,
	0x64, 0x6b, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x52, 0x65, 0x71, 0x42,
	0x61, 0x73, 0x69, 0x63, 0x52, 0x05, 0x62, 0x61, 0x73, 0x69, 0x63, 0x12, 0x33, 0x0a, 0x06, 0x69,
	0x6d, 0x61, 0x67, 0x65, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x6e, 0x6f,
	0x74, 0x65, 0x2e, 0x73, 0x64, 0x6b, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65,
	0x52, 0x65, 0x71, 0x49, 0x6d, 0x61, 0x67, 0x65, 0x52, 0x06, 0x69, 0x6d, 0x61, 0x67, 0x65, 0x73,
	0x22, 0x2d, 0x0a, 0x12, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x4e, 0x6f, 0x74, 0x65, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x17, 0x0a, 0x07, 0x6e, 0x6f, 0x74, 0x65, 0x5f, 0x69,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x06, 0x6e, 0x6f, 0x74, 0x65, 0x49, 0x64, 0x22,
	0x35, 0x0a, 0x11, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x4e, 0x6f, 0x74, 0x65, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x12, 0x20, 0x0a, 0x07, 0x6e, 0x6f, 0x74, 0x65, 0x5f, 0x69, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x04, 0x42, 0x07, 0xba, 0x48, 0x04, 0x32, 0x02, 0x20, 0x00, 0x52, 0x06,
	0x6e, 0x6f, 0x74, 0x65, 0x49, 0x64, 0x22, 0x14, 0x0a, 0x12, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65,
	0x4e, 0x6f, 0x74, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x69, 0x0a, 0x11,
	0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x4e, 0x6f, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x12, 0x20, 0x0a, 0x07, 0x6e, 0x6f, 0x74, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x04, 0x42, 0x07, 0xba, 0x48, 0x04, 0x32, 0x02, 0x20, 0x00, 0x52, 0x06, 0x6e, 0x6f, 0x74,
	0x65, 0x49, 0x64, 0x12, 0x32, 0x0a, 0x04, 0x6e, 0x6f, 0x74, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x1e, 0x2e, 0x6e, 0x6f, 0x74, 0x65, 0x2e, 0x73, 0x64, 0x6b, 0x2e, 0x76, 0x31, 0x2e,
	0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x4e, 0x6f, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x52, 0x04, 0x6e, 0x6f, 0x74, 0x65, 0x22, 0x2d, 0x0a, 0x12, 0x55, 0x70, 0x64, 0x61, 0x74,
	0x65, 0x4e, 0x6f, 0x74, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x17, 0x0a,
	0x07, 0x6e, 0x6f, 0x74, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x06,
	0x6e, 0x6f, 0x74, 0x65, 0x49, 0x64, 0x22, 0x32, 0x0a, 0x0e, 0x47, 0x65, 0x74, 0x4e, 0x6f, 0x74,
	0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x20, 0x0a, 0x07, 0x6e, 0x6f, 0x74, 0x65,
	0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x42, 0x07, 0xba, 0x48, 0x04, 0x32, 0x02,
	0x20, 0x00, 0x52, 0x06, 0x6e, 0x6f, 0x74, 0x65, 0x49, 0x64, 0x22, 0x3c, 0x0a, 0x0f, 0x47, 0x65,
	0x74, 0x4e, 0x6f, 0x74, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x29, 0x0a,
	0x04, 0x6e, 0x6f, 0x74, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x6e, 0x6f,
	0x74, 0x65, 0x2e, 0x73, 0x64, 0x6b, 0x2e, 0x76, 0x31, 0x2e, 0x4e, 0x6f, 0x74, 0x65, 0x49, 0x74,
	0x65, 0x6d, 0x52, 0x04, 0x6e, 0x6f, 0x74, 0x65, 0x22, 0x3f, 0x0a, 0x0f, 0x4c, 0x69, 0x73, 0x74,
	0x4e, 0x6f, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x63,
	0x75, 0x72, 0x73, 0x6f, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x06, 0x63, 0x75, 0x72,
	0x73, 0x6f, 0x72, 0x12, 0x14, 0x0a, 0x05, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x05, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x22, 0x7b, 0x0a, 0x10, 0x4c, 0x69, 0x73,
	0x74, 0x4e, 0x6f, 0x74, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x2b, 0x0a,
	0x05, 0x69, 0x74, 0x65, 0x6d, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x6e,
	0x6f, 0x74, 0x65, 0x2e, 0x73, 0x64, 0x6b, 0x2e, 0x76, 0x31, 0x2e, 0x4e, 0x6f, 0x74, 0x65, 0x49,
	0x74, 0x65, 0x6d, 0x52, 0x05, 0x69, 0x74, 0x65, 0x6d, 0x73, 0x12, 0x1f, 0x0a, 0x0b, 0x6e, 0x65,
	0x78, 0x74, 0x5f, 0x63, 0x75, 0x72, 0x73, 0x6f, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x04, 0x52,
	0x0a, 0x6e, 0x65, 0x78, 0x74, 0x43, 0x75, 0x72, 0x73, 0x6f, 0x72, 0x12, 0x19, 0x0a, 0x08, 0x68,
	0x61, 0x73, 0x5f, 0x6e, 0x65, 0x78, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07, 0x68,
	0x61, 0x73, 0x4e, 0x65, 0x78, 0x74, 0x22, 0x4a, 0x0a, 0x14, 0x47, 0x65, 0x74, 0x55, 0x70, 0x6c,
	0x6f, 0x61, 0x64, 0x41, 0x75, 0x74, 0x68, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1a,
	0x0a, 0x08, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x08, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x6f,
	0x75, 0x72, 0x63, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x73, 0x6f, 0x75, 0x72,
	0x63, 0x65, 0x22, 0x6e, 0x0a, 0x19, 0x42, 0x61, 0x74, 0x63, 0x68, 0x47, 0x65, 0x74, 0x55, 0x70,
	0x6c, 0x6f, 0x61, 0x64, 0x41, 0x75, 0x74, 0x68, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12,
	0x1a, 0x0a, 0x08, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x08, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x73,
	0x6f, 0x75, 0x72, 0x63, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x73, 0x6f, 0x75,
	0x72, 0x63, 0x65, 0x12, 0x1d, 0x0a, 0x05, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x05, 0x42, 0x07, 0xba, 0x48, 0x04, 0x1a, 0x02, 0x20, 0x00, 0x52, 0x05, 0x63, 0x6f, 0x75,
	0x6e, 0x74, 0x22, 0x71, 0x0a, 0x19, 0x55, 0x70, 0x6c, 0x6f, 0x61, 0x64, 0x41, 0x75, 0x74, 0x68,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x48, 0x65, 0x61, 0x64, 0x65, 0x72, 0x73, 0x12,
	0x12, 0x0a, 0x04, 0x61, 0x75, 0x74, 0x68, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x61,
	0x75, 0x74, 0x68, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x68, 0x61, 0x32, 0x35, 0x36, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x06, 0x73, 0x68, 0x61, 0x32, 0x35, 0x36, 0x12, 0x12, 0x0a, 0x04, 0x64,
	0x61, 0x74, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x64, 0x61, 0x74, 0x65, 0x12,
	0x14, 0x0a, 0x05, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05,
	0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x22, 0xd7, 0x01, 0x0a, 0x15, 0x47, 0x65, 0x74, 0x55, 0x70, 0x6c,
	0x6f, 0x61, 0x64, 0x41, 0x75, 0x74, 0x68, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12,
	0x17, 0x0a, 0x07, 0x66, 0x69, 0x6c, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x06, 0x66, 0x69, 0x6c, 0x65, 0x49, 0x64, 0x12, 0x21, 0x0a, 0x0c, 0x63, 0x75, 0x72, 0x72,
	0x65, 0x6e, 0x74, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0b,
	0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x74, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x1f, 0x0a, 0x0b, 0x65,
	0x78, 0x70, 0x69, 0x72, 0x65, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x0a, 0x65, 0x78, 0x70, 0x69, 0x72, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x1f, 0x0a, 0x0b,
	0x75, 0x70, 0x6c, 0x6f, 0x61, 0x64, 0x5f, 0x61, 0x64, 0x64, 0x72, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0a, 0x75, 0x70, 0x6c, 0x6f, 0x61, 0x64, 0x41, 0x64, 0x64, 0x72, 0x12, 0x40, 0x0a,
	0x07, 0x68, 0x65, 0x61, 0x64, 0x65, 0x72, 0x73, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x26,
	0x2e, 0x6e, 0x6f, 0x74, 0x65, 0x2e, 0x73, 0x64, 0x6b, 0x2e, 0x76, 0x31, 0x2e, 0x55, 0x70, 0x6c,
	0x6f, 0x61, 0x64, 0x41, 0x75, 0x74, 0x68, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x48,
	0x65, 0x61, 0x64, 0x65, 0x72, 0x73, 0x52, 0x07, 0x68, 0x65, 0x61, 0x64, 0x65, 0x72, 0x73, 0x22,
	0x5a, 0x0a, 0x1a, 0x42, 0x61, 0x74, 0x63, 0x68, 0x47, 0x65, 0x74, 0x55, 0x70, 0x6c, 0x6f, 0x61,
	0x64, 0x41, 0x75, 0x74, 0x68, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x3c, 0x0a,
	0x07, 0x74, 0x69, 0x63, 0x6b, 0x65, 0x74, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x22,
	0x2e, 0x6e, 0x6f, 0x74, 0x65, 0x2e, 0x73, 0x64, 0x6b, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74,
	0x55, 0x70, 0x6c, 0x6f, 0x61, 0x64, 0x41, 0x75, 0x74, 0x68, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x52, 0x07, 0x74, 0x69, 0x63, 0x6b, 0x65, 0x74, 0x73, 0x22, 0x32, 0x0a, 0x15, 0x47,
	0x65, 0x74, 0x50, 0x6f, 0x73, 0x74, 0x65, 0x64, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x12, 0x19, 0x0a, 0x03, 0x75, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x04, 0x42, 0x07, 0xba, 0x48, 0x04, 0x32, 0x02, 0x20, 0x00, 0x52, 0x03, 0x75, 0x69, 0x64, 0x22,
	0x2e, 0x0a, 0x16, 0x47, 0x65, 0x74, 0x50, 0x6f, 0x73, 0x74, 0x65, 0x64, 0x43, 0x6f, 0x75, 0x6e,
	0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x63, 0x6f, 0x75,
	0x6e, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x05, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x32,
	0xd4, 0x06, 0x0a, 0x12, 0x4e, 0x6f, 0x74, 0x65, 0x43, 0x72, 0x65, 0x61, 0x74, 0x6f, 0x72, 0x53,
	0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x56, 0x0a, 0x0d, 0x49, 0x73, 0x55, 0x73, 0x65, 0x72,
	0x4f, 0x77, 0x6e, 0x4e, 0x6f, 0x74, 0x65, 0x12, 0x21, 0x2e, 0x6e, 0x6f, 0x74, 0x65, 0x2e, 0x73,
	0x64, 0x6b, 0x2e, 0x76, 0x31, 0x2e, 0x49, 0x73, 0x55, 0x73, 0x65, 0x72, 0x4f, 0x77, 0x6e, 0x4e,
	0x6f, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x22, 0x2e, 0x6e, 0x6f, 0x74,
	0x65, 0x2e, 0x73, 0x64, 0x6b, 0x2e, 0x76, 0x31, 0x2e, 0x49, 0x73, 0x55, 0x73, 0x65, 0x72, 0x4f,
	0x77, 0x6e, 0x4e, 0x6f, 0x74, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x50,
	0x0a, 0x0b, 0x49, 0x73, 0x4e, 0x6f, 0x74, 0x65, 0x45, 0x78, 0x69, 0x73, 0x74, 0x12, 0x1f, 0x2e,
	0x6e, 0x6f, 0x74, 0x65, 0x2e, 0x73, 0x64, 0x6b, 0x2e, 0x76, 0x31, 0x2e, 0x49, 0x73, 0x4e, 0x6f,
	0x74, 0x65, 0x45, 0x78, 0x69, 0x73, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x20,
	0x2e, 0x6e, 0x6f, 0x74, 0x65, 0x2e, 0x73, 0x64, 0x6b, 0x2e, 0x76, 0x31, 0x2e, 0x49, 0x73, 0x4e,
	0x6f, 0x74, 0x65, 0x45, 0x78, 0x69, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x12, 0x4d, 0x0a, 0x0a, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x4e, 0x6f, 0x74, 0x65, 0x12, 0x1e,
	0x2e, 0x6e, 0x6f, 0x74, 0x65, 0x2e, 0x73, 0x64, 0x6b, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x72, 0x65,
	0x61, 0x74, 0x65, 0x4e, 0x6f, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1f,
	0x2e, 0x6e, 0x6f, 0x74, 0x65, 0x2e, 0x73, 0x64, 0x6b, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x72, 0x65,
	0x61, 0x74, 0x65, 0x4e, 0x6f, 0x74, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12,
	0x4d, 0x0a, 0x0a, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x4e, 0x6f, 0x74, 0x65, 0x12, 0x1e, 0x2e,
	0x6e, 0x6f, 0x74, 0x65, 0x2e, 0x73, 0x64, 0x6b, 0x2e, 0x76, 0x31, 0x2e, 0x55, 0x70, 0x64, 0x61,
	0x74, 0x65, 0x4e, 0x6f, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1f, 0x2e,
	0x6e, 0x6f, 0x74, 0x65, 0x2e, 0x73, 0x64, 0x6b, 0x2e, 0x76, 0x31, 0x2e, 0x55, 0x70, 0x64, 0x61,
	0x74, 0x65, 0x4e, 0x6f, 0x74, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x4d,
	0x0a, 0x0a, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x4e, 0x6f, 0x74, 0x65, 0x12, 0x1e, 0x2e, 0x6e,
	0x6f, 0x74, 0x65, 0x2e, 0x73, 0x64, 0x6b, 0x2e, 0x76, 0x31, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74,
	0x65, 0x4e, 0x6f, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1f, 0x2e, 0x6e,
	0x6f, 0x74, 0x65, 0x2e, 0x73, 0x64, 0x6b, 0x2e, 0x76, 0x31, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74,
	0x65, 0x4e, 0x6f, 0x74, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x44, 0x0a,
	0x07, 0x47, 0x65, 0x74, 0x4e, 0x6f, 0x74, 0x65, 0x12, 0x1b, 0x2e, 0x6e, 0x6f, 0x74, 0x65, 0x2e,
	0x73, 0x64, 0x6b, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x4e, 0x6f, 0x74, 0x65, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1c, 0x2e, 0x6e, 0x6f, 0x74, 0x65, 0x2e, 0x73, 0x64, 0x6b,
	0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x4e, 0x6f, 0x74, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x12, 0x47, 0x0a, 0x08, 0x4c, 0x69, 0x73, 0x74, 0x4e, 0x6f, 0x74, 0x65, 0x12,
	0x1c, 0x2e, 0x6e, 0x6f, 0x74, 0x65, 0x2e, 0x73, 0x64, 0x6b, 0x2e, 0x76, 0x31, 0x2e, 0x4c, 0x69,
	0x73, 0x74, 0x4e, 0x6f, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1d, 0x2e,
	0x6e, 0x6f, 0x74, 0x65, 0x2e, 0x73, 0x64, 0x6b, 0x2e, 0x76, 0x31, 0x2e, 0x4c, 0x69, 0x73, 0x74,
	0x4e, 0x6f, 0x74, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x56, 0x0a, 0x0d,
	0x47, 0x65, 0x74, 0x55, 0x70, 0x6c, 0x6f, 0x61, 0x64, 0x41, 0x75, 0x74, 0x68, 0x12, 0x21, 0x2e,
	0x6e, 0x6f, 0x74, 0x65, 0x2e, 0x73, 0x64, 0x6b, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x55,
	0x70, 0x6c, 0x6f, 0x61, 0x64, 0x41, 0x75, 0x74, 0x68, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x1a, 0x22, 0x2e, 0x6e, 0x6f, 0x74, 0x65, 0x2e, 0x73, 0x64, 0x6b, 0x2e, 0x76, 0x31, 0x2e, 0x47,
	0x65, 0x74, 0x55, 0x70, 0x6c, 0x6f, 0x61, 0x64, 0x41, 0x75, 0x74, 0x68, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x12, 0x65, 0x0a, 0x12, 0x42, 0x61, 0x74, 0x63, 0x68, 0x47, 0x65, 0x74,
	0x55, 0x70, 0x6c, 0x6f, 0x61, 0x64, 0x41, 0x75, 0x74, 0x68, 0x12, 0x26, 0x2e, 0x6e, 0x6f, 0x74,
	0x65, 0x2e, 0x73, 0x64, 0x6b, 0x2e, 0x76, 0x31, 0x2e, 0x42, 0x61, 0x74, 0x63, 0x68, 0x47, 0x65,
	0x74, 0x55, 0x70, 0x6c, 0x6f, 0x61, 0x64, 0x41, 0x75, 0x74, 0x68, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x1a, 0x27, 0x2e, 0x6e, 0x6f, 0x74, 0x65, 0x2e, 0x73, 0x64, 0x6b, 0x2e, 0x76, 0x31,
	0x2e, 0x42, 0x61, 0x74, 0x63, 0x68, 0x47, 0x65, 0x74, 0x55, 0x70, 0x6c, 0x6f, 0x61, 0x64, 0x41,
	0x75, 0x74, 0x68, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x59, 0x0a, 0x0e, 0x47,
	0x65, 0x74, 0x50, 0x6f, 0x73, 0x74, 0x65, 0x64, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x22, 0x2e,
	0x6e, 0x6f, 0x74, 0x65, 0x2e, 0x73, 0x64, 0x6b, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x50,
	0x6f, 0x73, 0x74, 0x65, 0x64, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x1a, 0x23, 0x2e, 0x6e, 0x6f, 0x74, 0x65, 0x2e, 0x73, 0x64, 0x6b, 0x2e, 0x76, 0x31, 0x2e,
	0x47, 0x65, 0x74, 0x50, 0x6f, 0x73, 0x74, 0x65, 0x64, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x42, 0x9e, 0x01, 0x0a, 0x0f, 0x63, 0x6f, 0x6d, 0x2e, 0x6e,
	0x6f, 0x74, 0x65, 0x2e, 0x73, 0x64, 0x6b, 0x2e, 0x76, 0x31, 0x42, 0x10, 0x4e, 0x6f, 0x74, 0x65,
	0x63, 0x72, 0x65, 0x61, 0x74, 0x6f, 0x72, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x50, 0x01, 0x5a, 0x2b,
	0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x72, 0x79, 0x61, 0x6e, 0x72,
	0x65, 0x61, 0x64, 0x62, 0x6f, 0x6f, 0x6b, 0x73, 0x2f, 0x77, 0x68, 0x69, 0x6d, 0x65, 0x72, 0x2f,
	0x6e, 0x6f, 0x74, 0x65, 0x2f, 0x73, 0x64, 0x6b, 0x2f, 0x76, 0x31, 0xa2, 0x02, 0x03, 0x4e, 0x53,
	0x58, 0xaa, 0x02, 0x0b, 0x4e, 0x6f, 0x74, 0x65, 0x2e, 0x53, 0x64, 0x6b, 0x2e, 0x56, 0x31, 0xca,
	0x02, 0x0b, 0x4e, 0x6f, 0x74, 0x65, 0x5c, 0x53, 0x64, 0x6b, 0x5c, 0x56, 0x31, 0xe2, 0x02, 0x17,
	0x4e, 0x6f, 0x74, 0x65, 0x5c, 0x53, 0x64, 0x6b, 0x5c, 0x56, 0x31, 0x5c, 0x47, 0x50, 0x42, 0x4d,
	0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0xea, 0x02, 0x0d, 0x4e, 0x6f, 0x74, 0x65, 0x3a, 0x3a,
	0x53, 0x64, 0x6b, 0x3a, 0x3a, 0x56, 0x31, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_v1_notecreator_proto_rawDescOnce sync.Once
	file_v1_notecreator_proto_rawDescData = file_v1_notecreator_proto_rawDesc
)

func file_v1_notecreator_proto_rawDescGZIP() []byte {
	file_v1_notecreator_proto_rawDescOnce.Do(func() {
		file_v1_notecreator_proto_rawDescData = protoimpl.X.CompressGZIP(file_v1_notecreator_proto_rawDescData)
	})
	return file_v1_notecreator_proto_rawDescData
}

var file_v1_notecreator_proto_msgTypes = make([]protoimpl.MessageInfo, 23)
var file_v1_notecreator_proto_goTypes = []any{
	(*IsUserOwnNoteRequest)(nil),       // 0: note.sdk.v1.IsUserOwnNoteRequest
	(*IsUserOwnNoteResponse)(nil),      // 1: note.sdk.v1.IsUserOwnNoteResponse
	(*IsNoteExistRequest)(nil),         // 2: note.sdk.v1.IsNoteExistRequest
	(*IsNoteExistResponse)(nil),        // 3: note.sdk.v1.IsNoteExistResponse
	(*CreateReqBasic)(nil),             // 4: note.sdk.v1.CreateReqBasic
	(*CreateReqImage)(nil),             // 5: note.sdk.v1.CreateReqImage
	(*CreateNoteRequest)(nil),          // 6: note.sdk.v1.CreateNoteRequest
	(*CreateNoteResponse)(nil),         // 7: note.sdk.v1.CreateNoteResponse
	(*DeleteNoteRequest)(nil),          // 8: note.sdk.v1.DeleteNoteRequest
	(*DeleteNoteResponse)(nil),         // 9: note.sdk.v1.DeleteNoteResponse
	(*UpdateNoteRequest)(nil),          // 10: note.sdk.v1.UpdateNoteRequest
	(*UpdateNoteResponse)(nil),         // 11: note.sdk.v1.UpdateNoteResponse
	(*GetNoteRequest)(nil),             // 12: note.sdk.v1.GetNoteRequest
	(*GetNoteResponse)(nil),            // 13: note.sdk.v1.GetNoteResponse
	(*ListNoteRequest)(nil),            // 14: note.sdk.v1.ListNoteRequest
	(*ListNoteResponse)(nil),           // 15: note.sdk.v1.ListNoteResponse
	(*GetUploadAuthRequest)(nil),       // 16: note.sdk.v1.GetUploadAuthRequest
	(*BatchGetUploadAuthRequest)(nil),  // 17: note.sdk.v1.BatchGetUploadAuthRequest
	(*UploadAuthResponseHeaders)(nil),  // 18: note.sdk.v1.UploadAuthResponseHeaders
	(*GetUploadAuthResponse)(nil),      // 19: note.sdk.v1.GetUploadAuthResponse
	(*BatchGetUploadAuthResponse)(nil), // 20: note.sdk.v1.BatchGetUploadAuthResponse
	(*GetPostedCountRequest)(nil),      // 21: note.sdk.v1.GetPostedCountRequest
	(*GetPostedCountResponse)(nil),     // 22: note.sdk.v1.GetPostedCountResponse
	(*NoteItem)(nil),                   // 23: note.sdk.v1.NoteItem
}
var file_v1_notecreator_proto_depIdxs = []int32{
	4,  // 0: note.sdk.v1.CreateNoteRequest.basic:type_name -> note.sdk.v1.CreateReqBasic
	5,  // 1: note.sdk.v1.CreateNoteRequest.images:type_name -> note.sdk.v1.CreateReqImage
	6,  // 2: note.sdk.v1.UpdateNoteRequest.note:type_name -> note.sdk.v1.CreateNoteRequest
	23, // 3: note.sdk.v1.GetNoteResponse.note:type_name -> note.sdk.v1.NoteItem
	23, // 4: note.sdk.v1.ListNoteResponse.items:type_name -> note.sdk.v1.NoteItem
	18, // 5: note.sdk.v1.GetUploadAuthResponse.headers:type_name -> note.sdk.v1.UploadAuthResponseHeaders
	19, // 6: note.sdk.v1.BatchGetUploadAuthResponse.tickets:type_name -> note.sdk.v1.GetUploadAuthResponse
	0,  // 7: note.sdk.v1.NoteCreatorService.IsUserOwnNote:input_type -> note.sdk.v1.IsUserOwnNoteRequest
	2,  // 8: note.sdk.v1.NoteCreatorService.IsNoteExist:input_type -> note.sdk.v1.IsNoteExistRequest
	6,  // 9: note.sdk.v1.NoteCreatorService.CreateNote:input_type -> note.sdk.v1.CreateNoteRequest
	10, // 10: note.sdk.v1.NoteCreatorService.UpdateNote:input_type -> note.sdk.v1.UpdateNoteRequest
	8,  // 11: note.sdk.v1.NoteCreatorService.DeleteNote:input_type -> note.sdk.v1.DeleteNoteRequest
	12, // 12: note.sdk.v1.NoteCreatorService.GetNote:input_type -> note.sdk.v1.GetNoteRequest
	14, // 13: note.sdk.v1.NoteCreatorService.ListNote:input_type -> note.sdk.v1.ListNoteRequest
	16, // 14: note.sdk.v1.NoteCreatorService.GetUploadAuth:input_type -> note.sdk.v1.GetUploadAuthRequest
	17, // 15: note.sdk.v1.NoteCreatorService.BatchGetUploadAuth:input_type -> note.sdk.v1.BatchGetUploadAuthRequest
	21, // 16: note.sdk.v1.NoteCreatorService.GetPostedCount:input_type -> note.sdk.v1.GetPostedCountRequest
	1,  // 17: note.sdk.v1.NoteCreatorService.IsUserOwnNote:output_type -> note.sdk.v1.IsUserOwnNoteResponse
	3,  // 18: note.sdk.v1.NoteCreatorService.IsNoteExist:output_type -> note.sdk.v1.IsNoteExistResponse
	7,  // 19: note.sdk.v1.NoteCreatorService.CreateNote:output_type -> note.sdk.v1.CreateNoteResponse
	11, // 20: note.sdk.v1.NoteCreatorService.UpdateNote:output_type -> note.sdk.v1.UpdateNoteResponse
	9,  // 21: note.sdk.v1.NoteCreatorService.DeleteNote:output_type -> note.sdk.v1.DeleteNoteResponse
	13, // 22: note.sdk.v1.NoteCreatorService.GetNote:output_type -> note.sdk.v1.GetNoteResponse
	15, // 23: note.sdk.v1.NoteCreatorService.ListNote:output_type -> note.sdk.v1.ListNoteResponse
	19, // 24: note.sdk.v1.NoteCreatorService.GetUploadAuth:output_type -> note.sdk.v1.GetUploadAuthResponse
	20, // 25: note.sdk.v1.NoteCreatorService.BatchGetUploadAuth:output_type -> note.sdk.v1.BatchGetUploadAuthResponse
	22, // 26: note.sdk.v1.NoteCreatorService.GetPostedCount:output_type -> note.sdk.v1.GetPostedCountResponse
	17, // [17:27] is the sub-list for method output_type
	7,  // [7:17] is the sub-list for method input_type
	7,  // [7:7] is the sub-list for extension type_name
	7,  // [7:7] is the sub-list for extension extendee
	0,  // [0:7] is the sub-list for field type_name
}

func init() { file_v1_notecreator_proto_init() }
func file_v1_notecreator_proto_init() {
	if File_v1_notecreator_proto != nil {
		return
	}
	file_v1_note_proto_init()
	if !protoimpl.UnsafeEnabled {
		file_v1_notecreator_proto_msgTypes[0].Exporter = func(v any, i int) any {
			switch v := v.(*IsUserOwnNoteRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_v1_notecreator_proto_msgTypes[1].Exporter = func(v any, i int) any {
			switch v := v.(*IsUserOwnNoteResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_v1_notecreator_proto_msgTypes[2].Exporter = func(v any, i int) any {
			switch v := v.(*IsNoteExistRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_v1_notecreator_proto_msgTypes[3].Exporter = func(v any, i int) any {
			switch v := v.(*IsNoteExistResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_v1_notecreator_proto_msgTypes[4].Exporter = func(v any, i int) any {
			switch v := v.(*CreateReqBasic); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_v1_notecreator_proto_msgTypes[5].Exporter = func(v any, i int) any {
			switch v := v.(*CreateReqImage); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_v1_notecreator_proto_msgTypes[6].Exporter = func(v any, i int) any {
			switch v := v.(*CreateNoteRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_v1_notecreator_proto_msgTypes[7].Exporter = func(v any, i int) any {
			switch v := v.(*CreateNoteResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_v1_notecreator_proto_msgTypes[8].Exporter = func(v any, i int) any {
			switch v := v.(*DeleteNoteRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_v1_notecreator_proto_msgTypes[9].Exporter = func(v any, i int) any {
			switch v := v.(*DeleteNoteResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_v1_notecreator_proto_msgTypes[10].Exporter = func(v any, i int) any {
			switch v := v.(*UpdateNoteRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_v1_notecreator_proto_msgTypes[11].Exporter = func(v any, i int) any {
			switch v := v.(*UpdateNoteResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_v1_notecreator_proto_msgTypes[12].Exporter = func(v any, i int) any {
			switch v := v.(*GetNoteRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_v1_notecreator_proto_msgTypes[13].Exporter = func(v any, i int) any {
			switch v := v.(*GetNoteResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_v1_notecreator_proto_msgTypes[14].Exporter = func(v any, i int) any {
			switch v := v.(*ListNoteRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_v1_notecreator_proto_msgTypes[15].Exporter = func(v any, i int) any {
			switch v := v.(*ListNoteResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_v1_notecreator_proto_msgTypes[16].Exporter = func(v any, i int) any {
			switch v := v.(*GetUploadAuthRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_v1_notecreator_proto_msgTypes[17].Exporter = func(v any, i int) any {
			switch v := v.(*BatchGetUploadAuthRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_v1_notecreator_proto_msgTypes[18].Exporter = func(v any, i int) any {
			switch v := v.(*UploadAuthResponseHeaders); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_v1_notecreator_proto_msgTypes[19].Exporter = func(v any, i int) any {
			switch v := v.(*GetUploadAuthResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_v1_notecreator_proto_msgTypes[20].Exporter = func(v any, i int) any {
			switch v := v.(*BatchGetUploadAuthResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_v1_notecreator_proto_msgTypes[21].Exporter = func(v any, i int) any {
			switch v := v.(*GetPostedCountRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_v1_notecreator_proto_msgTypes[22].Exporter = func(v any, i int) any {
			switch v := v.(*GetPostedCountResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_v1_notecreator_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   23,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_v1_notecreator_proto_goTypes,
		DependencyIndexes: file_v1_notecreator_proto_depIdxs,
		MessageInfos:      file_v1_notecreator_proto_msgTypes,
	}.Build()
	File_v1_notecreator_proto = out.File
	file_v1_notecreator_proto_rawDesc = nil
	file_v1_notecreator_proto_goTypes = nil
	file_v1_notecreator_proto_depIdxs = nil
}
