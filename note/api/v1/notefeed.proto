syntax = "proto3";

package note.api.v1;

import "buf/validate/validate.proto";
import "v1/note.proto";
import "v1/noteinteract.proto";

option go_package = "github.com/ryanreadbooks/whimer/note/api/v1";

message RandomGetRequest {
  int32 count = 1 [
    (buf.validate.field).int32.gt = 0,
    (buf.validate.field).int32.lte = 30
  ];
}

message RandomGetResponse {
  repeated FeedNoteItem items = 1;
  int32 count = 2;
}

message GetFeedNoteRequest {
  int64 note_id = 1 [ (buf.validate.field).int64.gt = 0 ]; //笔记id
}

message GetFeedNoteResponse {
  FeedNoteItem item = 1;
  FeedNoteItemExt ext = 2;
}

message RecommendGetRequest {
  int64 uid = 1; // 用户id
  int32 need_num = 2 [
    (buf.validate.field).int32.gt = 0,
    (buf.validate.field).int32.lte = 30
  ]; // 推荐条数
}

message RecommendGetResponse {}

message GetUserRecentPostRequest {
  int64 uid = 1;
  int32 count = 2 [ (buf.validate.field).int32.lte = 5 ];
}

message GetUserRecentPostResponse { repeated FeedNoteItem items = 1; }

message ListFeedByUidRequest {
  int64 uid = 1;
  int64 cursor = 2;
  int32 count = 3;
}

message ListFeedByUidResponse {
  repeated FeedNoteItem items = 1;
  int64 next_cursor = 2;
  bool has_next = 3;
}

message GetTagInfoRequest { int64 id = 1; }

message GetTagInfoResponse { NoteTag tag = 1; }

message BatchGetFeedNotesRequest {
  repeated int64 note_ids = 1 [ (buf.validate.field).repeated .max_items = 30 ];
}

message BatchGetFeedNotesResponse {
  map<int64, GetFeedNoteResponse> result = 1;
}

// note相关非管理功能服务
service NoteFeedService {
  // 随机获取笔记内容
  rpc RandomGet(RandomGetRequest) returns (RandomGetResponse);
  // 获取笔记
  rpc GetFeedNote(GetFeedNoteRequest) returns (GetFeedNoteResponse);
  // 批量获取笔记
  rpc BatchGetFeedNotes(BatchGetFeedNotesRequest)
      returns (BatchGetFeedNotesResponse);
  // 按照推荐获取
  rpc RecommendGet(RecommendGetRequest) returns (RecommendGetResponse);
  // 获取指定用户的最近的笔记内容
  rpc GetUserRecentPost(GetUserRecentPostRequest)
      returns (GetUserRecentPostResponse);
  // 列出指定用户公开的笔记内容
  rpc ListFeedByUid(ListFeedByUidRequest) returns (ListFeedByUidResponse);

  // 获取笔记标签
  rpc GetTagInfo(GetTagInfoRequest) returns (GetTagInfoResponse);
}
