syntax = "proto3";

package note.api.v1;

import "buf/validate/validate.proto";
import "v1/note.proto";
import "v1/noteinteract.proto";

option go_package = "github.com/ryanreadbooks/whimer/note/api/v1";

message RandomGetRequest {
  int32 count = 1 [
    (buf.validate.field).int32.gt = 0,
    (buf.validate.field).int32.lte = 30
  ];
}

message RandomGetResponse {
  repeated FeedNoteItem items = 1;
  int32 count = 2;
}

message FeedNoteItem {
  uint64 note_id = 1;
  string title = 2;
  string desc = 3;
  int64 created_at = 4;
  repeated NoteImage images = 5;
  uint64 likes = 6;   // 点赞数量
  int64 author = 7;   // 笔记作者
  uint64 replies = 8; // 点赞数
  int64 updated_at = 9;
}

message GetFeedNoteRequest {
  uint64 note_id = 1 [ (buf.validate.field).uint64.gt = 0 ]; //笔记id
}

message GetFeedNoteResponse { FeedNoteItem item = 1; }

message RecommendGetRequest {
  int64 uid = 1; // 用户id
  int32 need_num = 2 [
    (buf.validate.field).int32.gt = 0,
    (buf.validate.field).int32.lte = 30
  ]; // 推荐条数
}

message RecommendGetResponse {}

message GetUserRecentPostRequest {
  int64 uid = 1;
  int32 count = 2 [ (buf.validate.field).int32.lte = 5 ];
}

message GetUserRecentPostResponse { repeated FeedNoteItem items = 1; }

// note相关非管理功能服务
service NoteFeedService {
  // 随机获取笔记内容
  rpc RandomGet(RandomGetRequest) returns (RandomGetResponse);
  // 获取笔记
  rpc GetFeedNote(GetFeedNoteRequest) returns (GetFeedNoteResponse);
  // 按照推荐获取
  rpc RecommendGet(RecommendGetRequest) returns (RecommendGetResponse);
  // 获取指定用户的最近的笔记内容
  rpc GetUserRecentPost(GetUserRecentPostRequest)
      returns (GetUserRecentPostResponse);
}
