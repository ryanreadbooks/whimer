syntax = "proto3";

package relation.api.v1;

import "buf/validate/validate.proto";

option go_package = "github.com/ryanreadbooks/whimer/relation/api/v1";

message FollowUserRequest {
  int64 follower = 1; // 关注者
  int64 followee = 2; // 被关注者
  enum Action {
    ACTION_UNSPECIFIED = 0;
    ACTION_FOLLOW = 1;   // follower发起关注followee
    ACTION_UNFOLLOW = 2; // follower取消对followee的关注
  }
  Action action = 3;
}

message QueryCondition {
  int64 offset = 1;
  int32 count = 2 [
    (buf.validate.field).int32.gt = 0,
    (buf.validate.field).int32.lte = 20
  ];
}

message FollowUserResponse {}

message GetUserFanListRequest {
  int64 uid = 1; // 目标uid
  QueryCondition cond = 2;
}

message GetUserFanListResponse {
  repeated int64 fans = 1;
  int64 next_offset = 2;
  bool has_more = 3;
}

message GetUserFollowingListRequest {
  int64 uid = 1; // 目标uid
  QueryCondition cond = 2;
}

message GetUserFollowingListResponse {
  repeated int64 followings = 1;
  int64 next_offset = 2;
  bool has_more = 3;
}

message RemoveUserFanRequest {
  int64 uid = 1;              // 目标uid
  repeated int64 fans_id = 2; // 需要移除的粉丝id
}

message RemoveUserFanResponse {}

message GetUserFanCountRequest {
  int64 uid = 1; // 目标uid
}

message GetUserFanCountResponse { int64 count = 1; }

message GetUserFollowingCountRequest {
  int64 uid = 1; // 目标uid
}

message GetUserFollowingCountResponse { int64 count = 1; }

message BatchCheckUserFollowedRequest {
  int64 uid = 1;              // 用户uid
  repeated int64 targets = 2; // 查找的目标uid
}

message BatchCheckUserFollowedResponse { map<int64, bool> status = 1; }

message CheckUserFollowedRequest {
  int64 uid = 1;   // 用户uid
  int64 other = 2; // 用户uid
}

message CheckUserFollowedResponse { bool followed = 1; }

service RelationService {
  // 关注/取消关注某个用户
  rpc FollowUser(FollowUserRequest) returns (FollowUserResponse);
  // 获取某个用户的粉丝列表
  rpc GetUserFanList(GetUserFanListRequest) returns (GetUserFanListResponse);
  // 获取某个用户的关注列表
  rpc GetUserFollowingList(GetUserFollowingListRequest)
      returns (GetUserFollowingListResponse);
  // 移除某个用户的粉丝
  rpc RemoveUserFan(RemoveUserFanRequest) returns (RemoveUserFanResponse);
  // 获取用户的粉丝数量
  rpc GetUserFanCount(GetUserFanCountRequest) returns (GetUserFanCountResponse);
  // 获取用户的关注数量
  rpc GetUserFollowingCount(GetUserFollowingCountRequest)
      returns (GetUserFollowingCountResponse);
  // 判断某个用户是否关注了某些用户
  rpc BatchCheckUserFollowed(BatchCheckUserFollowedRequest)
      returns (BatchCheckUserFollowedResponse);
  rpc CheckUserFollowed(CheckUserFollowedRequest)
      returns (CheckUserFollowedResponse);
}
