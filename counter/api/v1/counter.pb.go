// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.34.2
// 	protoc        (unknown)
// source: v1/counter.proto

package v1

import (
	_ "buf.build/gen/go/bufbuild/protovalidate/protocolbuffers/go/buf/validate"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type SortRule int32

const (
	SortRule_SORT_RULE_UNSPECIFIED SortRule = 0
	SortRule_SORT_RULE_ASC         SortRule = 1
	SortRule_SORT_RULE_DESC        SortRule = 2
)

// Enum value maps for SortRule.
var (
	SortRule_name = map[int32]string{
		0: "SORT_RULE_UNSPECIFIED",
		1: "SORT_RULE_ASC",
		2: "SORT_RULE_DESC",
	}
	SortRule_value = map[string]int32{
		"SORT_RULE_UNSPECIFIED": 0,
		"SORT_RULE_ASC":         1,
		"SORT_RULE_DESC":        2,
	}
)

func (x SortRule) Enum() *SortRule {
	p := new(SortRule)
	*p = x
	return p
}

func (x SortRule) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (SortRule) Descriptor() protoreflect.EnumDescriptor {
	return file_v1_counter_proto_enumTypes[0].Descriptor()
}

func (SortRule) Type() protoreflect.EnumType {
	return &file_v1_counter_proto_enumTypes[0]
}

func (x SortRule) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use SortRule.Descriptor instead.
func (SortRule) EnumDescriptor() ([]byte, []int) {
	return file_v1_counter_proto_rawDescGZIP(), []int{0}
}

type RecordAct int32

const (
	RecordAct_RECORD_ACT_UNSPECIFIED RecordAct = 0
	RecordAct_RECORD_ACT_ADD         RecordAct = 1
	RecordAct_RECORD_ACT_UNADD       RecordAct = 2
)

// Enum value maps for RecordAct.
var (
	RecordAct_name = map[int32]string{
		0: "RECORD_ACT_UNSPECIFIED",
		1: "RECORD_ACT_ADD",
		2: "RECORD_ACT_UNADD",
	}
	RecordAct_value = map[string]int32{
		"RECORD_ACT_UNSPECIFIED": 0,
		"RECORD_ACT_ADD":         1,
		"RECORD_ACT_UNADD":       2,
	}
)

func (x RecordAct) Enum() *RecordAct {
	p := new(RecordAct)
	*p = x
	return p
}

func (x RecordAct) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (RecordAct) Descriptor() protoreflect.EnumDescriptor {
	return file_v1_counter_proto_enumTypes[1].Descriptor()
}

func (RecordAct) Type() protoreflect.EnumType {
	return &file_v1_counter_proto_enumTypes[1]
}

func (x RecordAct) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use RecordAct.Descriptor instead.
func (RecordAct) EnumDescriptor() ([]byte, []int) {
	return file_v1_counter_proto_rawDescGZIP(), []int{1}
}

type Record struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	BizCode int32     `protobuf:"varint,1,opt,name=biz_code,json=bizCode,proto3" json:"biz_code,omitempty"`
	Uid     int64     `protobuf:"varint,2,opt,name=uid,proto3" json:"uid,omitempty"`
	Oid     int64     `protobuf:"varint,3,opt,name=oid,proto3" json:"oid,omitempty"`
	Act     RecordAct `protobuf:"varint,4,opt,name=act,proto3,enum=counter.api.v1.RecordAct" json:"act,omitempty"`
	Ctime   int64     `protobuf:"varint,5,opt,name=ctime,proto3" json:"ctime,omitempty"`
	Mtime   int64     `protobuf:"varint,6,opt,name=mtime,proto3" json:"mtime,omitempty"`
}

func (x *Record) Reset() {
	*x = Record{}
	if protoimpl.UnsafeEnabled {
		mi := &file_v1_counter_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Record) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Record) ProtoMessage() {}

func (x *Record) ProtoReflect() protoreflect.Message {
	mi := &file_v1_counter_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Record.ProtoReflect.Descriptor instead.
func (*Record) Descriptor() ([]byte, []int) {
	return file_v1_counter_proto_rawDescGZIP(), []int{0}
}

func (x *Record) GetBizCode() int32 {
	if x != nil {
		return x.BizCode
	}
	return 0
}

func (x *Record) GetUid() int64 {
	if x != nil {
		return x.Uid
	}
	return 0
}

func (x *Record) GetOid() int64 {
	if x != nil {
		return x.Oid
	}
	return 0
}

func (x *Record) GetAct() RecordAct {
	if x != nil {
		return x.Act
	}
	return RecordAct_RECORD_ACT_UNSPECIFIED
}

func (x *Record) GetCtime() int64 {
	if x != nil {
		return x.Ctime
	}
	return 0
}

func (x *Record) GetMtime() int64 {
	if x != nil {
		return x.Mtime
	}
	return 0
}

type RecordList struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	List []*Record `protobuf:"bytes,1,rep,name=list,proto3" json:"list,omitempty"`
}

func (x *RecordList) Reset() {
	*x = RecordList{}
	if protoimpl.UnsafeEnabled {
		mi := &file_v1_counter_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RecordList) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RecordList) ProtoMessage() {}

func (x *RecordList) ProtoReflect() protoreflect.Message {
	mi := &file_v1_counter_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RecordList.ProtoReflect.Descriptor instead.
func (*RecordList) Descriptor() ([]byte, []int) {
	return file_v1_counter_proto_rawDescGZIP(), []int{1}
}

func (x *RecordList) GetList() []*Record {
	if x != nil {
		return x.List
	}
	return nil
}

type AddRecordRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	BizCode int32 `protobuf:"varint,1,opt,name=biz_code,json=bizCode,proto3" json:"biz_code,omitempty"`
	Uid     int64 `protobuf:"varint,2,opt,name=uid,proto3" json:"uid,omitempty"`
	Oid     int64 `protobuf:"varint,3,opt,name=oid,proto3" json:"oid,omitempty"`
}

func (x *AddRecordRequest) Reset() {
	*x = AddRecordRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_v1_counter_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AddRecordRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddRecordRequest) ProtoMessage() {}

func (x *AddRecordRequest) ProtoReflect() protoreflect.Message {
	mi := &file_v1_counter_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddRecordRequest.ProtoReflect.Descriptor instead.
func (*AddRecordRequest) Descriptor() ([]byte, []int) {
	return file_v1_counter_proto_rawDescGZIP(), []int{2}
}

func (x *AddRecordRequest) GetBizCode() int32 {
	if x != nil {
		return x.BizCode
	}
	return 0
}

func (x *AddRecordRequest) GetUid() int64 {
	if x != nil {
		return x.Uid
	}
	return 0
}

func (x *AddRecordRequest) GetOid() int64 {
	if x != nil {
		return x.Oid
	}
	return 0
}

type AddRecordResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *AddRecordResponse) Reset() {
	*x = AddRecordResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_v1_counter_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AddRecordResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddRecordResponse) ProtoMessage() {}

func (x *AddRecordResponse) ProtoReflect() protoreflect.Message {
	mi := &file_v1_counter_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddRecordResponse.ProtoReflect.Descriptor instead.
func (*AddRecordResponse) Descriptor() ([]byte, []int) {
	return file_v1_counter_proto_rawDescGZIP(), []int{3}
}

type CancelRecordRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	BizCode int32 `protobuf:"varint,1,opt,name=biz_code,json=bizCode,proto3" json:"biz_code,omitempty"`
	Uid     int64 `protobuf:"varint,2,opt,name=uid,proto3" json:"uid,omitempty"`
	Oid     int64 `protobuf:"varint,3,opt,name=oid,proto3" json:"oid,omitempty"`
}

func (x *CancelRecordRequest) Reset() {
	*x = CancelRecordRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_v1_counter_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CancelRecordRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CancelRecordRequest) ProtoMessage() {}

func (x *CancelRecordRequest) ProtoReflect() protoreflect.Message {
	mi := &file_v1_counter_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CancelRecordRequest.ProtoReflect.Descriptor instead.
func (*CancelRecordRequest) Descriptor() ([]byte, []int) {
	return file_v1_counter_proto_rawDescGZIP(), []int{4}
}

func (x *CancelRecordRequest) GetBizCode() int32 {
	if x != nil {
		return x.BizCode
	}
	return 0
}

func (x *CancelRecordRequest) GetUid() int64 {
	if x != nil {
		return x.Uid
	}
	return 0
}

func (x *CancelRecordRequest) GetOid() int64 {
	if x != nil {
		return x.Oid
	}
	return 0
}

type CancelRecordResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *CancelRecordResponse) Reset() {
	*x = CancelRecordResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_v1_counter_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CancelRecordResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CancelRecordResponse) ProtoMessage() {}

func (x *CancelRecordResponse) ProtoReflect() protoreflect.Message {
	mi := &file_v1_counter_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CancelRecordResponse.ProtoReflect.Descriptor instead.
func (*CancelRecordResponse) Descriptor() ([]byte, []int) {
	return file_v1_counter_proto_rawDescGZIP(), []int{5}
}

type DelRecordRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	BizCode int32 `protobuf:"varint,1,opt,name=biz_code,json=bizCode,proto3" json:"biz_code,omitempty"`
	Uid     int64 `protobuf:"varint,2,opt,name=uid,proto3" json:"uid,omitempty"`
	Oid     int64 `protobuf:"varint,3,opt,name=oid,proto3" json:"oid,omitempty"`
}

func (x *DelRecordRequest) Reset() {
	*x = DelRecordRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_v1_counter_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DelRecordRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DelRecordRequest) ProtoMessage() {}

func (x *DelRecordRequest) ProtoReflect() protoreflect.Message {
	mi := &file_v1_counter_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DelRecordRequest.ProtoReflect.Descriptor instead.
func (*DelRecordRequest) Descriptor() ([]byte, []int) {
	return file_v1_counter_proto_rawDescGZIP(), []int{6}
}

func (x *DelRecordRequest) GetBizCode() int32 {
	if x != nil {
		return x.BizCode
	}
	return 0
}

func (x *DelRecordRequest) GetUid() int64 {
	if x != nil {
		return x.Uid
	}
	return 0
}

func (x *DelRecordRequest) GetOid() int64 {
	if x != nil {
		return x.Oid
	}
	return 0
}

type DelRecordResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *DelRecordResponse) Reset() {
	*x = DelRecordResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_v1_counter_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DelRecordResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DelRecordResponse) ProtoMessage() {}

func (x *DelRecordResponse) ProtoReflect() protoreflect.Message {
	mi := &file_v1_counter_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DelRecordResponse.ProtoReflect.Descriptor instead.
func (*DelRecordResponse) Descriptor() ([]byte, []int) {
	return file_v1_counter_proto_rawDescGZIP(), []int{7}
}

type GetRecordRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	BizCode int32 `protobuf:"varint,1,opt,name=biz_code,json=bizCode,proto3" json:"biz_code,omitempty"`
	Uid     int64 `protobuf:"varint,2,opt,name=uid,proto3" json:"uid,omitempty"`
	Oid     int64 `protobuf:"varint,3,opt,name=oid,proto3" json:"oid,omitempty"`
}

func (x *GetRecordRequest) Reset() {
	*x = GetRecordRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_v1_counter_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetRecordRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetRecordRequest) ProtoMessage() {}

func (x *GetRecordRequest) ProtoReflect() protoreflect.Message {
	mi := &file_v1_counter_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetRecordRequest.ProtoReflect.Descriptor instead.
func (*GetRecordRequest) Descriptor() ([]byte, []int) {
	return file_v1_counter_proto_rawDescGZIP(), []int{8}
}

func (x *GetRecordRequest) GetBizCode() int32 {
	if x != nil {
		return x.BizCode
	}
	return 0
}

func (x *GetRecordRequest) GetUid() int64 {
	if x != nil {
		return x.Uid
	}
	return 0
}

func (x *GetRecordRequest) GetOid() int64 {
	if x != nil {
		return x.Oid
	}
	return 0
}

type GetRecordResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Record *Record `protobuf:"bytes,2,opt,name=record,proto3" json:"record,omitempty"`
}

func (x *GetRecordResponse) Reset() {
	*x = GetRecordResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_v1_counter_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetRecordResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetRecordResponse) ProtoMessage() {}

func (x *GetRecordResponse) ProtoReflect() protoreflect.Message {
	mi := &file_v1_counter_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetRecordResponse.ProtoReflect.Descriptor instead.
func (*GetRecordResponse) Descriptor() ([]byte, []int) {
	return file_v1_counter_proto_rawDescGZIP(), []int{9}
}

func (x *GetRecordResponse) GetRecord() *Record {
	if x != nil {
		return x.Record
	}
	return nil
}

type GetSummaryRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	BizCode int32 `protobuf:"varint,1,opt,name=biz_code,json=bizCode,proto3" json:"biz_code,omitempty"`
	Oid     int64 `protobuf:"varint,2,opt,name=oid,proto3" json:"oid,omitempty"`
}

func (x *GetSummaryRequest) Reset() {
	*x = GetSummaryRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_v1_counter_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetSummaryRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetSummaryRequest) ProtoMessage() {}

func (x *GetSummaryRequest) ProtoReflect() protoreflect.Message {
	mi := &file_v1_counter_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetSummaryRequest.ProtoReflect.Descriptor instead.
func (*GetSummaryRequest) Descriptor() ([]byte, []int) {
	return file_v1_counter_proto_rawDescGZIP(), []int{10}
}

func (x *GetSummaryRequest) GetBizCode() int32 {
	if x != nil {
		return x.BizCode
	}
	return 0
}

func (x *GetSummaryRequest) GetOid() int64 {
	if x != nil {
		return x.Oid
	}
	return 0
}

type GetSummaryResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	BizCode int32 `protobuf:"varint,1,opt,name=biz_code,json=bizCode,proto3" json:"biz_code,omitempty"`
	Oid     int64 `protobuf:"varint,2,opt,name=oid,proto3" json:"oid,omitempty"`
	Count   int64 `protobuf:"varint,3,opt,name=count,proto3" json:"count,omitempty"`
}

func (x *GetSummaryResponse) Reset() {
	*x = GetSummaryResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_v1_counter_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetSummaryResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetSummaryResponse) ProtoMessage() {}

func (x *GetSummaryResponse) ProtoReflect() protoreflect.Message {
	mi := &file_v1_counter_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetSummaryResponse.ProtoReflect.Descriptor instead.
func (*GetSummaryResponse) Descriptor() ([]byte, []int) {
	return file_v1_counter_proto_rawDescGZIP(), []int{11}
}

func (x *GetSummaryResponse) GetBizCode() int32 {
	if x != nil {
		return x.BizCode
	}
	return 0
}

func (x *GetSummaryResponse) GetOid() int64 {
	if x != nil {
		return x.Oid
	}
	return 0
}

func (x *GetSummaryResponse) GetCount() int64 {
	if x != nil {
		return x.Count
	}
	return 0
}

type BatchGetSummaryRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Requests []*GetSummaryRequest `protobuf:"bytes,1,rep,name=requests,proto3" json:"requests,omitempty"`
}

func (x *BatchGetSummaryRequest) Reset() {
	*x = BatchGetSummaryRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_v1_counter_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BatchGetSummaryRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BatchGetSummaryRequest) ProtoMessage() {}

func (x *BatchGetSummaryRequest) ProtoReflect() protoreflect.Message {
	mi := &file_v1_counter_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BatchGetSummaryRequest.ProtoReflect.Descriptor instead.
func (*BatchGetSummaryRequest) Descriptor() ([]byte, []int) {
	return file_v1_counter_proto_rawDescGZIP(), []int{12}
}

func (x *BatchGetSummaryRequest) GetRequests() []*GetSummaryRequest {
	if x != nil {
		return x.Requests
	}
	return nil
}

type BatchGetSummaryResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Responses []*GetSummaryResponse `protobuf:"bytes,1,rep,name=responses,proto3" json:"responses,omitempty"`
}

func (x *BatchGetSummaryResponse) Reset() {
	*x = BatchGetSummaryResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_v1_counter_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BatchGetSummaryResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BatchGetSummaryResponse) ProtoMessage() {}

func (x *BatchGetSummaryResponse) ProtoReflect() protoreflect.Message {
	mi := &file_v1_counter_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BatchGetSummaryResponse.ProtoReflect.Descriptor instead.
func (*BatchGetSummaryResponse) Descriptor() ([]byte, []int) {
	return file_v1_counter_proto_rawDescGZIP(), []int{13}
}

func (x *BatchGetSummaryResponse) GetResponses() []*GetSummaryResponse {
	if x != nil {
		return x.Responses
	}
	return nil
}

type ObjectList struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Oids []int64 `protobuf:"varint,1,rep,packed,name=oids,proto3" json:"oids,omitempty"`
}

func (x *ObjectList) Reset() {
	*x = ObjectList{}
	if protoimpl.UnsafeEnabled {
		mi := &file_v1_counter_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ObjectList) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ObjectList) ProtoMessage() {}

func (x *ObjectList) ProtoReflect() protoreflect.Message {
	mi := &file_v1_counter_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ObjectList.ProtoReflect.Descriptor instead.
func (*ObjectList) Descriptor() ([]byte, []int) {
	return file_v1_counter_proto_rawDescGZIP(), []int{14}
}

func (x *ObjectList) GetOids() []int64 {
	if x != nil {
		return x.Oids
	}
	return nil
}

type BatchGetRecordRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	BizCode int32                 `protobuf:"varint,1,opt,name=biz_code,json=bizCode,proto3" json:"biz_code,omitempty"`
	Params  map[int64]*ObjectList `protobuf:"bytes,2,rep,name=params,proto3" json:"params,omitempty" protobuf_key:"varint,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
}

func (x *BatchGetRecordRequest) Reset() {
	*x = BatchGetRecordRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_v1_counter_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BatchGetRecordRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BatchGetRecordRequest) ProtoMessage() {}

func (x *BatchGetRecordRequest) ProtoReflect() protoreflect.Message {
	mi := &file_v1_counter_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BatchGetRecordRequest.ProtoReflect.Descriptor instead.
func (*BatchGetRecordRequest) Descriptor() ([]byte, []int) {
	return file_v1_counter_proto_rawDescGZIP(), []int{15}
}

func (x *BatchGetRecordRequest) GetBizCode() int32 {
	if x != nil {
		return x.BizCode
	}
	return 0
}

func (x *BatchGetRecordRequest) GetParams() map[int64]*ObjectList {
	if x != nil {
		return x.Params
	}
	return nil
}

type BatchGetRecordResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Results map[int64]*RecordList `protobuf:"bytes,1,rep,name=results,proto3" json:"results,omitempty" protobuf_key:"varint,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
}

func (x *BatchGetRecordResponse) Reset() {
	*x = BatchGetRecordResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_v1_counter_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BatchGetRecordResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BatchGetRecordResponse) ProtoMessage() {}

func (x *BatchGetRecordResponse) ProtoReflect() protoreflect.Message {
	mi := &file_v1_counter_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BatchGetRecordResponse.ProtoReflect.Descriptor instead.
func (*BatchGetRecordResponse) Descriptor() ([]byte, []int) {
	return file_v1_counter_proto_rawDescGZIP(), []int{16}
}

func (x *BatchGetRecordResponse) GetResults() map[int64]*RecordList {
	if x != nil {
		return x.Results
	}
	return nil
}

type PageGetUserRecordRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	BizCode  int32    `protobuf:"varint,1,opt,name=biz_code,json=bizCode,proto3" json:"biz_code,omitempty"`
	Uid      int64    `protobuf:"varint,2,opt,name=uid,proto3" json:"uid,omitempty"`
	Cursor   string   `protobuf:"bytes,3,opt,name=cursor,proto3" json:"cursor,omitempty"`
	Count    int32    `protobuf:"varint,4,opt,name=count,proto3" json:"count,omitempty"`
	SortRule SortRule `protobuf:"varint,5,opt,name=sort_rule,json=sortRule,proto3,enum=counter.api.v1.SortRule" json:"sort_rule,omitempty"`
}

func (x *PageGetUserRecordRequest) Reset() {
	*x = PageGetUserRecordRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_v1_counter_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PageGetUserRecordRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PageGetUserRecordRequest) ProtoMessage() {}

func (x *PageGetUserRecordRequest) ProtoReflect() protoreflect.Message {
	mi := &file_v1_counter_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PageGetUserRecordRequest.ProtoReflect.Descriptor instead.
func (*PageGetUserRecordRequest) Descriptor() ([]byte, []int) {
	return file_v1_counter_proto_rawDescGZIP(), []int{17}
}

func (x *PageGetUserRecordRequest) GetBizCode() int32 {
	if x != nil {
		return x.BizCode
	}
	return 0
}

func (x *PageGetUserRecordRequest) GetUid() int64 {
	if x != nil {
		return x.Uid
	}
	return 0
}

func (x *PageGetUserRecordRequest) GetCursor() string {
	if x != nil {
		return x.Cursor
	}
	return ""
}

func (x *PageGetUserRecordRequest) GetCount() int32 {
	if x != nil {
		return x.Count
	}
	return 0
}

func (x *PageGetUserRecordRequest) GetSortRule() SortRule {
	if x != nil {
		return x.SortRule
	}
	return SortRule_SORT_RULE_UNSPECIFIED
}

type PageGetUserRecordResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	NextCursor string    `protobuf:"bytes,1,opt,name=next_cursor,json=nextCursor,proto3" json:"next_cursor,omitempty"`
	HasNext    bool      `protobuf:"varint,2,opt,name=has_next,json=hasNext,proto3" json:"has_next,omitempty"`
	Items      []*Record `protobuf:"bytes,3,rep,name=items,proto3" json:"items,omitempty"`
}

func (x *PageGetUserRecordResponse) Reset() {
	*x = PageGetUserRecordResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_v1_counter_proto_msgTypes[18]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PageGetUserRecordResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PageGetUserRecordResponse) ProtoMessage() {}

func (x *PageGetUserRecordResponse) ProtoReflect() protoreflect.Message {
	mi := &file_v1_counter_proto_msgTypes[18]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PageGetUserRecordResponse.ProtoReflect.Descriptor instead.
func (*PageGetUserRecordResponse) Descriptor() ([]byte, []int) {
	return file_v1_counter_proto_rawDescGZIP(), []int{18}
}

func (x *PageGetUserRecordResponse) GetNextCursor() string {
	if x != nil {
		return x.NextCursor
	}
	return ""
}

func (x *PageGetUserRecordResponse) GetHasNext() bool {
	if x != nil {
		return x.HasNext
	}
	return false
}

func (x *PageGetUserRecordResponse) GetItems() []*Record {
	if x != nil {
		return x.Items
	}
	return nil
}

var File_v1_counter_proto protoreflect.FileDescriptor

var file_v1_counter_proto_rawDesc = []byte{
	0x0a, 0x10, 0x76, 0x31, 0x2f, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x65, 0x72, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x12, 0x0e, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x65, 0x72, 0x2e, 0x61, 0x70, 0x69, 0x2e,
	0x76, 0x31, 0x1a, 0x1b, 0x62, 0x75, 0x66, 0x2f, 0x76, 0x61, 0x6c, 0x69, 0x64, 0x61, 0x74, 0x65,
	0x2f, 0x76, 0x61, 0x6c, 0x69, 0x64, 0x61, 0x74, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22,
	0xa0, 0x01, 0x0a, 0x06, 0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x12, 0x19, 0x0a, 0x08, 0x62, 0x69,
	0x7a, 0x5f, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x07, 0x62, 0x69,
	0x7a, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x75, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x03, 0x75, 0x69, 0x64, 0x12, 0x10, 0x0a, 0x03, 0x6f, 0x69, 0x64, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x03, 0x6f, 0x69, 0x64, 0x12, 0x2b, 0x0a, 0x03, 0x61, 0x63, 0x74,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x19, 0x2e, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x65, 0x72,
	0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x31, 0x2e, 0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x41, 0x63,
	0x74, 0x52, 0x03, 0x61, 0x63, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x63, 0x74, 0x69, 0x6d, 0x65, 0x18,
	0x05, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x63, 0x74, 0x69, 0x6d, 0x65, 0x12, 0x14, 0x0a, 0x05,
	0x6d, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x6d, 0x74, 0x69,
	0x6d, 0x65, 0x22, 0x38, 0x0a, 0x0a, 0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x4c, 0x69, 0x73, 0x74,
	0x12, 0x2a, 0x0a, 0x04, 0x6c, 0x69, 0x73, 0x74, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x16,
	0x2e, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x65, 0x72, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x31, 0x2e,
	0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x52, 0x04, 0x6c, 0x69, 0x73, 0x74, 0x22, 0x63, 0x0a, 0x10,
	0x41, 0x64, 0x64, 0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x12, 0x22, 0x0a, 0x08, 0x62, 0x69, 0x7a, 0x5f, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x05, 0x42, 0x07, 0xba, 0x48, 0x04, 0x1a, 0x02, 0x20, 0x00, 0x52, 0x07, 0x62, 0x69, 0x7a,
	0x43, 0x6f, 0x64, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x75, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x03, 0x75, 0x69, 0x64, 0x12, 0x19, 0x0a, 0x03, 0x6f, 0x69, 0x64, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x03, 0x42, 0x07, 0xba, 0x48, 0x04, 0x22, 0x02, 0x20, 0x00, 0x52, 0x03, 0x6f, 0x69,
	0x64, 0x22, 0x13, 0x0a, 0x11, 0x41, 0x64, 0x64, 0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x66, 0x0a, 0x13, 0x43, 0x61, 0x6e, 0x63, 0x65, 0x6c,
	0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x22, 0x0a,
	0x08, 0x62, 0x69, 0x7a, 0x5f, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x42,
	0x07, 0xba, 0x48, 0x04, 0x1a, 0x02, 0x20, 0x00, 0x52, 0x07, 0x62, 0x69, 0x7a, 0x43, 0x6f, 0x64,
	0x65, 0x12, 0x10, 0x0a, 0x03, 0x75, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x03,
	0x75, 0x69, 0x64, 0x12, 0x19, 0x0a, 0x03, 0x6f, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03,
	0x42, 0x07, 0xba, 0x48, 0x04, 0x22, 0x02, 0x20, 0x00, 0x52, 0x03, 0x6f, 0x69, 0x64, 0x22, 0x16,
	0x0a, 0x14, 0x43, 0x61, 0x6e, 0x63, 0x65, 0x6c, 0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x63, 0x0a, 0x10, 0x44, 0x65, 0x6c, 0x52, 0x65, 0x63,
	0x6f, 0x72, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x22, 0x0a, 0x08, 0x62, 0x69,
	0x7a, 0x5f, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x42, 0x07, 0xba, 0x48,
	0x04, 0x1a, 0x02, 0x20, 0x00, 0x52, 0x07, 0x62, 0x69, 0x7a, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x10,
	0x0a, 0x03, 0x75, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x03, 0x75, 0x69, 0x64,
	0x12, 0x19, 0x0a, 0x03, 0x6f, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x42, 0x07, 0xba,
	0x48, 0x04, 0x22, 0x02, 0x20, 0x00, 0x52, 0x03, 0x6f, 0x69, 0x64, 0x22, 0x13, 0x0a, 0x11, 0x44,
	0x65, 0x6c, 0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x22, 0x63, 0x0a, 0x10, 0x47, 0x65, 0x74, 0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x12, 0x22, 0x0a, 0x08, 0x62, 0x69, 0x7a, 0x5f, 0x63, 0x6f, 0x64, 0x65,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x42, 0x07, 0xba, 0x48, 0x04, 0x1a, 0x02, 0x20, 0x00, 0x52,
	0x07, 0x62, 0x69, 0x7a, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x75, 0x69, 0x64, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x03, 0x75, 0x69, 0x64, 0x12, 0x19, 0x0a, 0x03, 0x6f, 0x69,
	0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x42, 0x07, 0xba, 0x48, 0x04, 0x22, 0x02, 0x20, 0x00,
	0x52, 0x03, 0x6f, 0x69, 0x64, 0x22, 0x43, 0x0a, 0x11, 0x47, 0x65, 0x74, 0x52, 0x65, 0x63, 0x6f,
	0x72, 0x64, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x2e, 0x0a, 0x06, 0x72, 0x65,
	0x63, 0x6f, 0x72, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x63, 0x6f, 0x75,
	0x6e, 0x74, 0x65, 0x72, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x31, 0x2e, 0x52, 0x65, 0x63, 0x6f,
	0x72, 0x64, 0x52, 0x06, 0x72, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x22, 0x52, 0x0a, 0x11, 0x47, 0x65,
	0x74, 0x53, 0x75, 0x6d, 0x6d, 0x61, 0x72, 0x79, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12,
	0x22, 0x0a, 0x08, 0x62, 0x69, 0x7a, 0x5f, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x05, 0x42, 0x07, 0xba, 0x48, 0x04, 0x1a, 0x02, 0x20, 0x00, 0x52, 0x07, 0x62, 0x69, 0x7a, 0x43,
	0x6f, 0x64, 0x65, 0x12, 0x19, 0x0a, 0x03, 0x6f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03,
	0x42, 0x07, 0xba, 0x48, 0x04, 0x22, 0x02, 0x20, 0x00, 0x52, 0x03, 0x6f, 0x69, 0x64, 0x22, 0x57,
	0x0a, 0x12, 0x47, 0x65, 0x74, 0x53, 0x75, 0x6d, 0x6d, 0x61, 0x72, 0x79, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x12, 0x19, 0x0a, 0x08, 0x62, 0x69, 0x7a, 0x5f, 0x63, 0x6f, 0x64, 0x65,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x07, 0x62, 0x69, 0x7a, 0x43, 0x6f, 0x64, 0x65, 0x12,
	0x10, 0x0a, 0x03, 0x6f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x03, 0x6f, 0x69,
	0x64, 0x12, 0x14, 0x0a, 0x05, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x05, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x22, 0x57, 0x0a, 0x16, 0x42, 0x61, 0x74, 0x63, 0x68,
	0x47, 0x65, 0x74, 0x53, 0x75, 0x6d, 0x6d, 0x61, 0x72, 0x79, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x12, 0x3d, 0x0a, 0x08, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x73, 0x18, 0x01, 0x20,
	0x03, 0x28, 0x0b, 0x32, 0x21, 0x2e, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x65, 0x72, 0x2e, 0x61, 0x70,
	0x69, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x53, 0x75, 0x6d, 0x6d, 0x61, 0x72, 0x79, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x52, 0x08, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x73,
	0x22, 0x5b, 0x0a, 0x17, 0x42, 0x61, 0x74, 0x63, 0x68, 0x47, 0x65, 0x74, 0x53, 0x75, 0x6d, 0x6d,
	0x61, 0x72, 0x79, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x40, 0x0a, 0x09, 0x72,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x22,
	0x2e, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x65, 0x72, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x31, 0x2e,
	0x47, 0x65, 0x74, 0x53, 0x75, 0x6d, 0x6d, 0x61, 0x72, 0x79, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x52, 0x09, 0x72, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x73, 0x22, 0x2a, 0x0a,
	0x0a, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x1c, 0x0a, 0x04, 0x6f,
	0x69, 0x64, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x03, 0x42, 0x08, 0xba, 0x48, 0x05, 0x92, 0x01,
	0x02, 0x08, 0x01, 0x52, 0x04, 0x6f, 0x69, 0x64, 0x73, 0x22, 0xe0, 0x01, 0x0a, 0x15, 0x42, 0x61,
	0x74, 0x63, 0x68, 0x47, 0x65, 0x74, 0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x12, 0x19, 0x0a, 0x08, 0x62, 0x69, 0x7a, 0x5f, 0x63, 0x6f, 0x64, 0x65, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x07, 0x62, 0x69, 0x7a, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x55,
	0x0a, 0x06, 0x70, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x31,
	0x2e, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x65, 0x72, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x31, 0x2e,
	0x42, 0x61, 0x74, 0x63, 0x68, 0x47, 0x65, 0x74, 0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x2e, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x45, 0x6e, 0x74, 0x72,
	0x79, 0x42, 0x0a, 0xba, 0x48, 0x07, 0x9a, 0x01, 0x04, 0x08, 0x01, 0x10, 0x32, 0x52, 0x06, 0x70,
	0x61, 0x72, 0x61, 0x6d, 0x73, 0x1a, 0x55, 0x0a, 0x0b, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x45,
	0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x30, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x65, 0x72, 0x2e,
	0x61, 0x70, 0x69, 0x2e, 0x76, 0x31, 0x2e, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x4c, 0x69, 0x73,
	0x74, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x22, 0xbf, 0x01, 0x0a,
	0x16, 0x42, 0x61, 0x74, 0x63, 0x68, 0x47, 0x65, 0x74, 0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x4d, 0x0a, 0x07, 0x72, 0x65, 0x73, 0x75, 0x6c,
	0x74, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x33, 0x2e, 0x63, 0x6f, 0x75, 0x6e, 0x74,
	0x65, 0x72, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x31, 0x2e, 0x42, 0x61, 0x74, 0x63, 0x68, 0x47,
	0x65, 0x74, 0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x2e, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x07, 0x72,
	0x65, 0x73, 0x75, 0x6c, 0x74, 0x73, 0x1a, 0x56, 0x0a, 0x0c, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74,
	0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x30, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75,
	0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x65,
	0x72, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x31, 0x2e, 0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x4c,
	0x69, 0x73, 0x74, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x22, 0xac,
	0x01, 0x0a, 0x18, 0x50, 0x61, 0x67, 0x65, 0x47, 0x65, 0x74, 0x55, 0x73, 0x65, 0x72, 0x52, 0x65,
	0x63, 0x6f, 0x72, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x19, 0x0a, 0x08, 0x62,
	0x69, 0x7a, 0x5f, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x07, 0x62,
	0x69, 0x7a, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x75, 0x69, 0x64, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x03, 0x75, 0x69, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x63, 0x75, 0x72, 0x73,
	0x6f, 0x72, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x63, 0x75, 0x72, 0x73, 0x6f, 0x72,
	0x12, 0x14, 0x0a, 0x05, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x05, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x35, 0x0a, 0x09, 0x73, 0x6f, 0x72, 0x74, 0x5f, 0x72,
	0x75, 0x6c, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x18, 0x2e, 0x63, 0x6f, 0x75, 0x6e,
	0x74, 0x65, 0x72, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x6f, 0x72, 0x74, 0x52,
	0x75, 0x6c, 0x65, 0x52, 0x08, 0x73, 0x6f, 0x72, 0x74, 0x52, 0x75, 0x6c, 0x65, 0x22, 0x85, 0x01,
	0x0a, 0x19, 0x50, 0x61, 0x67, 0x65, 0x47, 0x65, 0x74, 0x55, 0x73, 0x65, 0x72, 0x52, 0x65, 0x63,
	0x6f, 0x72, 0x64, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x1f, 0x0a, 0x0b, 0x6e,
	0x65, 0x78, 0x74, 0x5f, 0x63, 0x75, 0x72, 0x73, 0x6f, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0a, 0x6e, 0x65, 0x78, 0x74, 0x43, 0x75, 0x72, 0x73, 0x6f, 0x72, 0x12, 0x19, 0x0a, 0x08,
	0x68, 0x61, 0x73, 0x5f, 0x6e, 0x65, 0x78, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07,
	0x68, 0x61, 0x73, 0x4e, 0x65, 0x78, 0x74, 0x12, 0x2c, 0x0a, 0x05, 0x69, 0x74, 0x65, 0x6d, 0x73,
	0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x65, 0x72,
	0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x31, 0x2e, 0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x52, 0x05,
	0x69, 0x74, 0x65, 0x6d, 0x73, 0x2a, 0x4c, 0x0a, 0x08, 0x53, 0x6f, 0x72, 0x74, 0x52, 0x75, 0x6c,
	0x65, 0x12, 0x19, 0x0a, 0x15, 0x53, 0x4f, 0x52, 0x54, 0x5f, 0x52, 0x55, 0x4c, 0x45, 0x5f, 0x55,
	0x4e, 0x53, 0x50, 0x45, 0x43, 0x49, 0x46, 0x49, 0x45, 0x44, 0x10, 0x00, 0x12, 0x11, 0x0a, 0x0d,
	0x53, 0x4f, 0x52, 0x54, 0x5f, 0x52, 0x55, 0x4c, 0x45, 0x5f, 0x41, 0x53, 0x43, 0x10, 0x01, 0x12,
	0x12, 0x0a, 0x0e, 0x53, 0x4f, 0x52, 0x54, 0x5f, 0x52, 0x55, 0x4c, 0x45, 0x5f, 0x44, 0x45, 0x53,
	0x43, 0x10, 0x02, 0x2a, 0x51, 0x0a, 0x09, 0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x41, 0x63, 0x74,
	0x12, 0x1a, 0x0a, 0x16, 0x52, 0x45, 0x43, 0x4f, 0x52, 0x44, 0x5f, 0x41, 0x43, 0x54, 0x5f, 0x55,
	0x4e, 0x53, 0x50, 0x45, 0x43, 0x49, 0x46, 0x49, 0x45, 0x44, 0x10, 0x00, 0x12, 0x12, 0x0a, 0x0e,
	0x52, 0x45, 0x43, 0x4f, 0x52, 0x44, 0x5f, 0x41, 0x43, 0x54, 0x5f, 0x41, 0x44, 0x44, 0x10, 0x01,
	0x12, 0x14, 0x0a, 0x10, 0x52, 0x45, 0x43, 0x4f, 0x52, 0x44, 0x5f, 0x41, 0x43, 0x54, 0x5f, 0x55,
	0x4e, 0x41, 0x44, 0x44, 0x10, 0x02, 0x32, 0x93, 0x05, 0x0a, 0x0e, 0x43, 0x6f, 0x75, 0x6e, 0x74,
	0x65, 0x72, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x50, 0x0a, 0x09, 0x41, 0x64, 0x64,
	0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x12, 0x20, 0x2e, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x65, 0x72,
	0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x31, 0x2e, 0x41, 0x64, 0x64, 0x52, 0x65, 0x63, 0x6f, 0x72,
	0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x21, 0x2e, 0x63, 0x6f, 0x75, 0x6e, 0x74,
	0x65, 0x72, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x31, 0x2e, 0x41, 0x64, 0x64, 0x52, 0x65, 0x63,
	0x6f, 0x72, 0x64, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x59, 0x0a, 0x0c, 0x43,
	0x61, 0x6e, 0x63, 0x65, 0x6c, 0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x12, 0x23, 0x2e, 0x63, 0x6f,
	0x75, 0x6e, 0x74, 0x65, 0x72, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x61, 0x6e,
	0x63, 0x65, 0x6c, 0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x1a, 0x24, 0x2e, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x65, 0x72, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76,
	0x31, 0x2e, 0x43, 0x61, 0x6e, 0x63, 0x65, 0x6c, 0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x50, 0x0a, 0x09, 0x47, 0x65, 0x74, 0x52, 0x65, 0x63,
	0x6f, 0x72, 0x64, 0x12, 0x20, 0x2e, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x65, 0x72, 0x2e, 0x61, 0x70,
	0x69, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x21, 0x2e, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x65, 0x72, 0x2e,
	0x61, 0x70, 0x69, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x52, 0x65, 0x63, 0x6f, 0x72, 0x64,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x5f, 0x0a, 0x0e, 0x42, 0x61, 0x74, 0x63,
	0x68, 0x47, 0x65, 0x74, 0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x12, 0x25, 0x2e, 0x63, 0x6f, 0x75,
	0x6e, 0x74, 0x65, 0x72, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x31, 0x2e, 0x42, 0x61, 0x74, 0x63,
	0x68, 0x47, 0x65, 0x74, 0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x1a, 0x26, 0x2e, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x65, 0x72, 0x2e, 0x61, 0x70, 0x69, 0x2e,
	0x76, 0x31, 0x2e, 0x42, 0x61, 0x74, 0x63, 0x68, 0x47, 0x65, 0x74, 0x52, 0x65, 0x63, 0x6f, 0x72,
	0x64, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x53, 0x0a, 0x0a, 0x47, 0x65, 0x74,
	0x53, 0x75, 0x6d, 0x6d, 0x61, 0x72, 0x79, 0x12, 0x21, 0x2e, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x65,
	0x72, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x53, 0x75, 0x6d, 0x6d,
	0x61, 0x72, 0x79, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x22, 0x2e, 0x63, 0x6f, 0x75,
	0x6e, 0x74, 0x65, 0x72, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x53,
	0x75, 0x6d, 0x6d, 0x61, 0x72, 0x79, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x62,
	0x0a, 0x0f, 0x42, 0x61, 0x74, 0x63, 0x68, 0x47, 0x65, 0x74, 0x53, 0x75, 0x6d, 0x6d, 0x61, 0x72,
	0x79, 0x12, 0x26, 0x2e, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x65, 0x72, 0x2e, 0x61, 0x70, 0x69, 0x2e,
	0x76, 0x31, 0x2e, 0x42, 0x61, 0x74, 0x63, 0x68, 0x47, 0x65, 0x74, 0x53, 0x75, 0x6d, 0x6d, 0x61,
	0x72, 0x79, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x27, 0x2e, 0x63, 0x6f, 0x75, 0x6e,
	0x74, 0x65, 0x72, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x31, 0x2e, 0x42, 0x61, 0x74, 0x63, 0x68,
	0x47, 0x65, 0x74, 0x53, 0x75, 0x6d, 0x6d, 0x61, 0x72, 0x79, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x12, 0x68, 0x0a, 0x11, 0x50, 0x61, 0x67, 0x65, 0x47, 0x65, 0x74, 0x55, 0x73, 0x65,
	0x72, 0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x12, 0x28, 0x2e, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x65,
	0x72, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x31, 0x2e, 0x50, 0x61, 0x67, 0x65, 0x47, 0x65, 0x74,
	0x55, 0x73, 0x65, 0x72, 0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x1a, 0x29, 0x2e, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x65, 0x72, 0x2e, 0x61, 0x70, 0x69, 0x2e,
	0x76, 0x31, 0x2e, 0x50, 0x61, 0x67, 0x65, 0x47, 0x65, 0x74, 0x55, 0x73, 0x65, 0x72, 0x52, 0x65,
	0x63, 0x6f, 0x72, 0x64, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x42, 0xac, 0x01, 0x0a,
	0x12, 0x63, 0x6f, 0x6d, 0x2e, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x65, 0x72, 0x2e, 0x61, 0x70, 0x69,
	0x2e, 0x76, 0x31, 0x42, 0x0c, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x65, 0x72, 0x50, 0x72, 0x6f, 0x74,
	0x6f, 0x50, 0x01, 0x5a, 0x2e, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f,
	0x72, 0x79, 0x61, 0x6e, 0x72, 0x65, 0x61, 0x64, 0x62, 0x6f, 0x6f, 0x6b, 0x73, 0x2f, 0x77, 0x68,
	0x69, 0x6d, 0x65, 0x72, 0x2f, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x65, 0x72, 0x2f, 0x61, 0x70, 0x69,
	0x2f, 0x76, 0x31, 0xa2, 0x02, 0x03, 0x43, 0x41, 0x58, 0xaa, 0x02, 0x0e, 0x43, 0x6f, 0x75, 0x6e,
	0x74, 0x65, 0x72, 0x2e, 0x41, 0x70, 0x69, 0x2e, 0x56, 0x31, 0xca, 0x02, 0x0e, 0x43, 0x6f, 0x75,
	0x6e, 0x74, 0x65, 0x72, 0x5c, 0x41, 0x70, 0x69, 0x5c, 0x56, 0x31, 0xe2, 0x02, 0x1a, 0x43, 0x6f,
	0x75, 0x6e, 0x74, 0x65, 0x72, 0x5c, 0x41, 0x70, 0x69, 0x5c, 0x56, 0x31, 0x5c, 0x47, 0x50, 0x42,
	0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0xea, 0x02, 0x10, 0x43, 0x6f, 0x75, 0x6e, 0x74,
	0x65, 0x72, 0x3a, 0x3a, 0x41, 0x70, 0x69, 0x3a, 0x3a, 0x56, 0x31, 0x62, 0x06, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x33,
}

var (
	file_v1_counter_proto_rawDescOnce sync.Once
	file_v1_counter_proto_rawDescData = file_v1_counter_proto_rawDesc
)

func file_v1_counter_proto_rawDescGZIP() []byte {
	file_v1_counter_proto_rawDescOnce.Do(func() {
		file_v1_counter_proto_rawDescData = protoimpl.X.CompressGZIP(file_v1_counter_proto_rawDescData)
	})
	return file_v1_counter_proto_rawDescData
}

var file_v1_counter_proto_enumTypes = make([]protoimpl.EnumInfo, 2)
var file_v1_counter_proto_msgTypes = make([]protoimpl.MessageInfo, 21)
var file_v1_counter_proto_goTypes = []any{
	(SortRule)(0),                     // 0: counter.api.v1.SortRule
	(RecordAct)(0),                    // 1: counter.api.v1.RecordAct
	(*Record)(nil),                    // 2: counter.api.v1.Record
	(*RecordList)(nil),                // 3: counter.api.v1.RecordList
	(*AddRecordRequest)(nil),          // 4: counter.api.v1.AddRecordRequest
	(*AddRecordResponse)(nil),         // 5: counter.api.v1.AddRecordResponse
	(*CancelRecordRequest)(nil),       // 6: counter.api.v1.CancelRecordRequest
	(*CancelRecordResponse)(nil),      // 7: counter.api.v1.CancelRecordResponse
	(*DelRecordRequest)(nil),          // 8: counter.api.v1.DelRecordRequest
	(*DelRecordResponse)(nil),         // 9: counter.api.v1.DelRecordResponse
	(*GetRecordRequest)(nil),          // 10: counter.api.v1.GetRecordRequest
	(*GetRecordResponse)(nil),         // 11: counter.api.v1.GetRecordResponse
	(*GetSummaryRequest)(nil),         // 12: counter.api.v1.GetSummaryRequest
	(*GetSummaryResponse)(nil),        // 13: counter.api.v1.GetSummaryResponse
	(*BatchGetSummaryRequest)(nil),    // 14: counter.api.v1.BatchGetSummaryRequest
	(*BatchGetSummaryResponse)(nil),   // 15: counter.api.v1.BatchGetSummaryResponse
	(*ObjectList)(nil),                // 16: counter.api.v1.ObjectList
	(*BatchGetRecordRequest)(nil),     // 17: counter.api.v1.BatchGetRecordRequest
	(*BatchGetRecordResponse)(nil),    // 18: counter.api.v1.BatchGetRecordResponse
	(*PageGetUserRecordRequest)(nil),  // 19: counter.api.v1.PageGetUserRecordRequest
	(*PageGetUserRecordResponse)(nil), // 20: counter.api.v1.PageGetUserRecordResponse
	nil,                               // 21: counter.api.v1.BatchGetRecordRequest.ParamsEntry
	nil,                               // 22: counter.api.v1.BatchGetRecordResponse.ResultsEntry
}
var file_v1_counter_proto_depIdxs = []int32{
	1,  // 0: counter.api.v1.Record.act:type_name -> counter.api.v1.RecordAct
	2,  // 1: counter.api.v1.RecordList.list:type_name -> counter.api.v1.Record
	2,  // 2: counter.api.v1.GetRecordResponse.record:type_name -> counter.api.v1.Record
	12, // 3: counter.api.v1.BatchGetSummaryRequest.requests:type_name -> counter.api.v1.GetSummaryRequest
	13, // 4: counter.api.v1.BatchGetSummaryResponse.responses:type_name -> counter.api.v1.GetSummaryResponse
	21, // 5: counter.api.v1.BatchGetRecordRequest.params:type_name -> counter.api.v1.BatchGetRecordRequest.ParamsEntry
	22, // 6: counter.api.v1.BatchGetRecordResponse.results:type_name -> counter.api.v1.BatchGetRecordResponse.ResultsEntry
	0,  // 7: counter.api.v1.PageGetUserRecordRequest.sort_rule:type_name -> counter.api.v1.SortRule
	2,  // 8: counter.api.v1.PageGetUserRecordResponse.items:type_name -> counter.api.v1.Record
	16, // 9: counter.api.v1.BatchGetRecordRequest.ParamsEntry.value:type_name -> counter.api.v1.ObjectList
	3,  // 10: counter.api.v1.BatchGetRecordResponse.ResultsEntry.value:type_name -> counter.api.v1.RecordList
	4,  // 11: counter.api.v1.CounterService.AddRecord:input_type -> counter.api.v1.AddRecordRequest
	6,  // 12: counter.api.v1.CounterService.CancelRecord:input_type -> counter.api.v1.CancelRecordRequest
	10, // 13: counter.api.v1.CounterService.GetRecord:input_type -> counter.api.v1.GetRecordRequest
	17, // 14: counter.api.v1.CounterService.BatchGetRecord:input_type -> counter.api.v1.BatchGetRecordRequest
	12, // 15: counter.api.v1.CounterService.GetSummary:input_type -> counter.api.v1.GetSummaryRequest
	14, // 16: counter.api.v1.CounterService.BatchGetSummary:input_type -> counter.api.v1.BatchGetSummaryRequest
	19, // 17: counter.api.v1.CounterService.PageGetUserRecord:input_type -> counter.api.v1.PageGetUserRecordRequest
	5,  // 18: counter.api.v1.CounterService.AddRecord:output_type -> counter.api.v1.AddRecordResponse
	7,  // 19: counter.api.v1.CounterService.CancelRecord:output_type -> counter.api.v1.CancelRecordResponse
	11, // 20: counter.api.v1.CounterService.GetRecord:output_type -> counter.api.v1.GetRecordResponse
	18, // 21: counter.api.v1.CounterService.BatchGetRecord:output_type -> counter.api.v1.BatchGetRecordResponse
	13, // 22: counter.api.v1.CounterService.GetSummary:output_type -> counter.api.v1.GetSummaryResponse
	15, // 23: counter.api.v1.CounterService.BatchGetSummary:output_type -> counter.api.v1.BatchGetSummaryResponse
	20, // 24: counter.api.v1.CounterService.PageGetUserRecord:output_type -> counter.api.v1.PageGetUserRecordResponse
	18, // [18:25] is the sub-list for method output_type
	11, // [11:18] is the sub-list for method input_type
	11, // [11:11] is the sub-list for extension type_name
	11, // [11:11] is the sub-list for extension extendee
	0,  // [0:11] is the sub-list for field type_name
}

func init() { file_v1_counter_proto_init() }
func file_v1_counter_proto_init() {
	if File_v1_counter_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_v1_counter_proto_msgTypes[0].Exporter = func(v any, i int) any {
			switch v := v.(*Record); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_v1_counter_proto_msgTypes[1].Exporter = func(v any, i int) any {
			switch v := v.(*RecordList); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_v1_counter_proto_msgTypes[2].Exporter = func(v any, i int) any {
			switch v := v.(*AddRecordRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_v1_counter_proto_msgTypes[3].Exporter = func(v any, i int) any {
			switch v := v.(*AddRecordResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_v1_counter_proto_msgTypes[4].Exporter = func(v any, i int) any {
			switch v := v.(*CancelRecordRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_v1_counter_proto_msgTypes[5].Exporter = func(v any, i int) any {
			switch v := v.(*CancelRecordResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_v1_counter_proto_msgTypes[6].Exporter = func(v any, i int) any {
			switch v := v.(*DelRecordRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_v1_counter_proto_msgTypes[7].Exporter = func(v any, i int) any {
			switch v := v.(*DelRecordResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_v1_counter_proto_msgTypes[8].Exporter = func(v any, i int) any {
			switch v := v.(*GetRecordRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_v1_counter_proto_msgTypes[9].Exporter = func(v any, i int) any {
			switch v := v.(*GetRecordResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_v1_counter_proto_msgTypes[10].Exporter = func(v any, i int) any {
			switch v := v.(*GetSummaryRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_v1_counter_proto_msgTypes[11].Exporter = func(v any, i int) any {
			switch v := v.(*GetSummaryResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_v1_counter_proto_msgTypes[12].Exporter = func(v any, i int) any {
			switch v := v.(*BatchGetSummaryRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_v1_counter_proto_msgTypes[13].Exporter = func(v any, i int) any {
			switch v := v.(*BatchGetSummaryResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_v1_counter_proto_msgTypes[14].Exporter = func(v any, i int) any {
			switch v := v.(*ObjectList); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_v1_counter_proto_msgTypes[15].Exporter = func(v any, i int) any {
			switch v := v.(*BatchGetRecordRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_v1_counter_proto_msgTypes[16].Exporter = func(v any, i int) any {
			switch v := v.(*BatchGetRecordResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_v1_counter_proto_msgTypes[17].Exporter = func(v any, i int) any {
			switch v := v.(*PageGetUserRecordRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_v1_counter_proto_msgTypes[18].Exporter = func(v any, i int) any {
			switch v := v.(*PageGetUserRecordResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_v1_counter_proto_rawDesc,
			NumEnums:      2,
			NumMessages:   21,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_v1_counter_proto_goTypes,
		DependencyIndexes: file_v1_counter_proto_depIdxs,
		EnumInfos:         file_v1_counter_proto_enumTypes,
		MessageInfos:      file_v1_counter_proto_msgTypes,
	}.Build()
	File_v1_counter_proto = out.File
	file_v1_counter_proto_rawDesc = nil
	file_v1_counter_proto_goTypes = nil
	file_v1_counter_proto_depIdxs = nil
}
