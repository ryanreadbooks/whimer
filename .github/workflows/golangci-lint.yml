name: golangci-lint
run-name: 'golangci-lint ${{github.workflow}} #${{ github.event.pull_request.number }}'

on:
  pull_request:
  push:
    branches:
      - "master"

env:
  GO_VERSION: 1.24
  GOLANGCI_LINT_VERSION: v1.60

jobs:
  detect-modules:
    runs-on: ubuntu-latest
    outputs:
      modules: ${{ steps.set-modules.outputs.modules }}
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-go@v5
        with:
          go-version: ${{ env.GO_VERSION }}
      - id: set-modules
        run: |
          modules=$(find . -mindepth 1 -maxdepth 1 -type d | while read dir; do
              if (cd "$dir" && go env GOMOD 2>/dev/null | grep -q 'go.mod'); then
                echo {\"Dir\"\: \"$(realpath "$dir")\"}
              fi
            done | jq -s '.' | jq -c '[.[].Dir]')
          echo "modules=${modules}" >> $GITHUB_OUTPUT

  golangci-lint:
    needs: detect-modules
    runs-on: ubuntu-latest
    strategy:
      matrix:
        modules: ${{ fromJSON(needs.detect-modules.outputs.modules) }}
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-go@v5
        with:
          go-version: ${{ env.GO_VERSION }}
      - name: check env
        run: |
          echo working dir `pwd`
          ls
          echo ${{ matrix.modules }}
          go version
      - name: golangci-lint ${{ matrix.modules }}
        continue-on-error: true
        timeout-minutes: 20 
        uses: golangci/golangci-lint-action@v6
        with:
          version: ${{ env.GOLANGCI_LINT_VERSION }}
          working-directory: ${{ matrix.modules }}
          args: --verbose --timeout=20m0s --out-format=github-actions
